-- Vyrxis Menu - Bubble Style Edition (Extended)
-- Komplett neues Design mit Bubble Aesthetics + Neue Funktionen

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Camera = Workspace.CurrentCamera

-- Variablen (Defaults - werden durch gespeicherte Werte Ã¼berschrieben)
local toggleKey = Enum.KeyCode.Insert
local isFlying = false
local flySpeed = 50
local isNoclipEnabled = false
local isESPEnabled = false
local nametagsEnabled = false
local espColor = Color3.fromRGB(255, 0, 0)
local espTransparency = 0.5
local nametagColor = Color3.fromRGB(255, 255, 255)
local nametagSize = 14
local selectedPlayer = ""
local isViewingPlayer = false
local espHighlights = {}
local nametags = {}
local healthbars = {}

-- Neue Feature Variablen
local isFollowingPlayer = false
local followConnection = nil
local followWalkAnimation = "Default"
local followDistance = 5
local isOrbitingPlayer = false
local orbitConnection = nil
local orbitSpeed = 50
local orbitRadius = 10
local orbitAngle = 0
local isSpinning = false
local spinConnection = nil
local spinSpeed = 5

-- Settings Speicher-System
local SettingsSaver = {}
local settingsFileName = "VyrxisMenu_Settings_" .. LocalPlayer.UserId .. ".json"

-- Default Settings
local defaultSettings = {
	toggleKey = "Insert",
	flySpeed = 50,
	flyKey = "F",
	walkSpeed = 16,
	jumpHeight = 50,
	speedKey = "LeftControl",
	espTransparency = 50,
	nametagSize = 14,
	espColorR = 255,
	espColorG = 0,
	espColorB = 0,
	orbitSpeed = 50,
	orbitRadius = 10,
	spinSpeed = 5,
	followAnimation = "Default",
	followDistance = 5
}

function SettingsSaver:Save(settings)
	local success, err = pcall(function()
		if writefile then
			local jsonData = game:GetService("HttpService"):JSONEncode(settings)
			writefile(settingsFileName, jsonData)
			print("[Vyrxis] Settings saved successfully!")
			return true
		end
	end)
	if not success then
		warn("[Vyrxis] Failed to save settings: " .. tostring(err))
		return false
	end
	return true
end

function SettingsSaver:Load()
	local success, result = pcall(function()
		if readfile and isfile and isfile(settingsFileName) then
			local jsonData = readfile(settingsFileName)
			return game:GetService("HttpService"):JSONDecode(jsonData)
		end
		return nil
	end)
	
	if success and result then
		print("[Vyrxis] Settings loaded successfully!")
		return result
	else
		print("[Vyrxis] No saved settings found, using defaults")
		return defaultSettings
	end
end

-- Lade gespeicherte Einstellungen
local savedSettings = SettingsSaver:Load()
toggleKey = Enum.KeyCode[savedSettings.toggleKey] or Enum.KeyCode.Insert
flySpeed = savedSettings.flySpeed or 50
espColor = Color3.fromRGB(
	savedSettings.espColorR or 255,
	savedSettings.espColorG or 0,
	savedSettings.espColorB or 0
)
espTransparency = (savedSettings.espTransparency or 50) / 100
orbitSpeed = savedSettings.orbitSpeed or 50
orbitRadius = savedSettings.orbitRadius or 10
spinSpeed = savedSettings.spinSpeed or 5
followWalkAnimation = savedSettings.followAnimation or "Default"
followDistance = savedSettings.followDistance or 5

-- FLY SYSTEM
local FlySystem = {}
FlySystem.enabled = false
FlySystem.speed = 50
FlySystem.bodyVelocity = nil
FlySystem.bodyPosition = nil
FlySystem.bodyAngularVelocity = nil
FlySystem.connection = nil

function FlySystem:Enable()
	if self.enabled then return end
	
	local character = LocalPlayer.Character
	if not character or not character:FindFirstChild("HumanoidRootPart") then return end
	
	local humanoidRootPart = character.HumanoidRootPart
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	
	if humanoid then
		humanoid.PlatformStand = true
	end
	
	self.bodyVelocity = Instance.new("BodyVelocity")
	self.bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
	self.bodyVelocity.Velocity = Vector3.new(0, 0, 0)
	self.bodyVelocity.Parent = humanoidRootPart
	
	self.bodyAngularVelocity = Instance.new("BodyAngularVelocity")
	self.bodyAngularVelocity.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
	self.bodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
	self.bodyAngularVelocity.Parent = humanoidRootPart
	
	self.bodyPosition = Instance.new("BodyPosition")
	self.bodyPosition.MaxForce = Vector3.new(0, 0, 0)
	self.bodyPosition.Position = humanoidRootPart.Position
	self.bodyPosition.D = 2000
	self.bodyPosition.P = 10000
	self.bodyPosition.Parent = humanoidRootPart
	
	self.enabled = true
	self:StartUpdateLoop()
end

function FlySystem:Disable()
	if not self.enabled then return end
	
	local character = LocalPlayer.Character
	if character then
		local humanoid = character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid.PlatformStand = false
		end
	end
	
	if self.bodyVelocity then self.bodyVelocity:Destroy() self.bodyVelocity = nil end
	if self.bodyPosition then self.bodyPosition:Destroy() self.bodyPosition = nil end
	if self.bodyAngularVelocity then self.bodyAngularVelocity:Destroy() self.bodyAngularVelocity = nil end
	if self.connection then self.connection:Disconnect() self.connection = nil end
	
	self.enabled = false
end

function FlySystem:StartUpdateLoop()
	if self.connection then self.connection:Disconnect() end
	self.connection = RunService.Heartbeat:Connect(function() self:Update() end)
end

function FlySystem:Update()
	if not self.enabled then return end
	
	local character = LocalPlayer.Character
	if not character or not character:FindFirstChild("HumanoidRootPart") then
		self:Disable()
		return
	end
	
	local humanoidRootPart = character.HumanoidRootPart
	local camera = Camera
	
	local lookDirection = camera.CFrame.LookVector
	local upDirection = camera.CFrame.UpVector
	local rightDirection = camera.CFrame.RightVector
	
	local newCFrame = CFrame.fromMatrix(humanoidRootPart.Position, rightDirection, upDirection, -lookDirection)
	humanoidRootPart.CFrame = newCFrame
	
	local moveVector = Vector3.new(0, 0, 0)
	
	if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveVector = moveVector + lookDirection end
	if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveVector = moveVector - lookDirection end
	if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveVector = moveVector - rightDirection end
	if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveVector = moveVector + rightDirection end
	if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveVector = moveVector + Vector3.new(0, 1, 0) end
	if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then moveVector = moveVector + Vector3.new(0, -1, 0) end
	
	if moveVector.Magnitude > 0 then moveVector = moveVector.Unit end
	
	local targetVelocity = moveVector * self.speed
	self.bodyVelocity.Velocity = targetVelocity
	self.bodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
	self.bodyPosition.MaxForce = Vector3.new(0, 0, 0)
end

function FlySystem:SetSpeed(newSpeed)
	self.speed = math.clamp(newSpeed, 1, 1000)
end

-- LOAD SCREEN ERSTELLEN
local function createLoadScreen()
	local gui = Instance.new("ScreenGui")
	gui.Name = "VyrxisLoadScreen"
	gui.IgnoreGuiInset = true
	gui.ResetOnSpawn = false
	gui.Parent = PlayerGui

	local mainFrame = Instance.new("Frame")
	mainFrame.Size = UDim2.new(1, 0, 1, 0)
	mainFrame.BackgroundTransparency = 1
	mainFrame.Parent = gui

	local bg = Instance.new("ImageLabel")
	bg.AnchorPoint = Vector2.new(0.5, 0.5)
	bg.Size = UDim2.new(0.3, 0, 0.3, 0)
	bg.Position = UDim2.new(0.5, 0, 0.5, 0)
	bg.BackgroundTransparency = 1
	bg.ImageTransparency = 1
	bg.Image = "rbxassetid://116434023289549"
	bg.ScaleType = Enum.ScaleType.Fit
	bg.Parent = mainFrame

	local barContainer = Instance.new("Frame")
	barContainer.AnchorPoint = Vector2.new(0.5, 0.5)
	barContainer.Size = UDim2.new(0.2, 0, 0.012, 0)
	barContainer.Position = UDim2.new(0.5, 0, 0.5361, 0)
	barContainer.BackgroundTransparency = 1
	barContainer.Parent = mainFrame

	local barFill = Instance.new("Frame")
	barFill.AnchorPoint = Vector2.new(0, 0.5)
	barFill.Size = UDim2.new(0, 0, 1, 0)
	barFill.Position = UDim2.new(0, 0, 0.5, 0)
	barFill.BackgroundColor3 = Color3.fromRGB(0, 229, 255)
	barFill.BorderSizePixel = 0
	barFill.BackgroundTransparency = 1
	barFill.Parent = barContainer

	local barCorner = Instance.new("UICorner")
	barCorner.CornerRadius = UDim.new(0.5, 0)
	barCorner.Parent = barFill

	local percentText = Instance.new("TextLabel")
	percentText.Size = UDim2.new(1, 0, 1, 0)
	percentText.BackgroundTransparency = 1
	percentText.Text = "0%"
	percentText.TextColor3 = Color3.fromRGB(0, 0, 0)
	percentText.TextScaled = true
	percentText.TextTransparency = 1
	percentText.Font = Enum.Font.SourceSansBold
	percentText.Parent = barFill

	local topText = Instance.new("TextLabel")
	topText.AnchorPoint = Vector2.new(0.5, 0.5)
	topText.Size = UDim2.new(0.25, 0, 0.03, 0)
	topText.Position = UDim2.new(0.5, 0, 0.51, 0)
	topText.BackgroundTransparency = 1
	topText.Text = "Loading..."
	topText.TextColor3 = Color3.fromRGB(0, 229, 255)
	topText.TextScaled = true
	topText.TextTransparency = 1
	topText.Font = Enum.Font.SourceSansBold
	topText.Parent = mainFrame

	-- Fade In
	local fadeInfo = TweenInfo.new(1.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	TweenService:Create(bg, fadeInfo, {ImageTransparency = 0}):Play()
	TweenService:Create(barFill, fadeInfo, {BackgroundTransparency = 0}):Play()
	TweenService:Create(percentText, fadeInfo, {TextTransparency = 0}):Play()
	TweenService:Create(topText, fadeInfo, {TextTransparency = 0}):Play()
	task.wait(1.5)

	-- Loading Animation
	local tweenInfo = TweenInfo.new(5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	TweenService:Create(barFill, tweenInfo, {Size = UDim2.new(1, 0, 1, 0)}):Play()

	for i = 1, 100 do
		percentText.Text = i .. "%"
		if i < 34 then topText.Text = "Loading..."
		elseif i < 67 then topText.Text = "Please wait"
		else topText.Text = "Almost done" end
		task.wait(0.05)
	end

	-- Fade Out
	local fadeOutInfo = TweenInfo.new(1.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	TweenService:Create(bg, fadeOutInfo, {ImageTransparency = 1}):Play()
	TweenService:Create(barFill, fadeOutInfo, {BackgroundTransparency = 1}):Play()
	TweenService:Create(percentText, fadeOutInfo, {TextTransparency = 1}):Play()
	local tweenTop = TweenService:Create(topText, fadeOutInfo, {TextTransparency = 1})
	tweenTop:Play()
	tweenTop.Completed:Wait()
	gui:Destroy()
end

-- MAIN MENU ERSTELLEN
local function createMenu()
	local gui = Instance.new("ScreenGui")
	gui.Name = "VyrxisBubbleMenu"
	gui.IgnoreGuiInset = true
	gui.ResetOnSpawn = false
	gui.Parent = PlayerGui

	-- Main Frame (Hintergrund)
	local mainFrame = Instance.new("ImageLabel")
	mainFrame.Name = "MainFrame"
	mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	mainFrame.Size = UDim2.new(0.5, 0, 0.5, 0)
	mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
	mainFrame.BackgroundTransparency = 1
	mainFrame.Image = "rbxassetid://73370657955912"
	mainFrame.ScaleType = Enum.ScaleType.Fit
	mainFrame.Parent = gui

	local aspectFrame = Instance.new("UIAspectRatioConstraint")
	aspectFrame.AspectRatio = 1021/755
	aspectFrame.Parent = mainFrame

	-- Title Rahmen
	local mainRahmen = Instance.new("ImageLabel")
	mainRahmen.Name = "MainRahmen"
	mainRahmen.AnchorPoint = Vector2.new(0.5, 0.5)
	mainRahmen.Size = UDim2.new(0.67, 0, 0.15, 0)
	mainRahmen.Position = UDim2.new(0.498, 0, 0.31, 0)
	mainRahmen.BackgroundTransparency = 1
	mainRahmen.Image = "rbxassetid://83968904560683"
	mainRahmen.ScaleType = Enum.ScaleType.Fit
	mainRahmen.Parent = mainFrame

	local aspectRahmen = Instance.new("UIAspectRatioConstraint")
	aspectRahmen.AspectRatio = 685/79
	aspectRahmen.Parent = mainRahmen

	-- Close Button
	local closeBtn = Instance.new("ImageButton")
	closeBtn.Size = UDim2.new(0, 15, 0, 15)
	closeBtn.Position = UDim2.new(1, -28, 0, 13)
	closeBtn.BackgroundTransparency = 1
	closeBtn.Image = "rbxassetid://71692906103540"
	closeBtn.Parent = mainRahmen

	local contentVisible = true
	closeBtn.MouseButton1Click:Connect(function()
		contentVisible = not contentVisible
		if mainFrame:FindFirstChild("MenuScroll") then
			mainFrame.MenuScroll.Visible = contentVisible
		end
		if mainFrame:FindFirstChild("RightContainer") then
			mainFrame.RightContainer.Visible = contentVisible
		end
		mainFrame.ImageTransparency = contentVisible and 0 or 1
	end)

	-- Settings Button
	local settingsBtn = Instance.new("ImageButton")
	settingsBtn.Size = UDim2.new(0, 15, 0, 15)
	settingsBtn.Position = UDim2.new(1, -56, 0, 13)
	settingsBtn.BackgroundTransparency = 1
	settingsBtn.Image = "rbxassetid://117484286805666"
	settingsBtn.Parent = mainRahmen

	-- Dragging
	local dragging = false
	local dragStart, startPos

	mainRahmen.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = mainFrame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local delta = input.Position - dragStart
			mainFrame.Position = UDim2.new(
				startPos.X.Scale,
				startPos.X.Offset + delta.X,
				startPos.Y.Scale,
				startPos.Y.Offset + delta.Y
			)
		end
	end)

	-- Settings Frame
	local settingsFrame = Instance.new("Frame")
	settingsFrame.Size = UDim2.new(0, 200, 0, 180)
	settingsFrame.Position = UDim2.new(0.5, -100, 0.5, -90)
	settingsFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	settingsFrame.BorderSizePixel = 0
	settingsFrame.Visible = false
	settingsFrame.Parent = gui

	local sCorner = Instance.new("UICorner")
	sCorner.CornerRadius = UDim.new(0, 6)
	sCorner.Parent = settingsFrame

	local settingsClose = Instance.new("TextButton")
	settingsClose.Size = UDim2.new(0, 20, 0, 20)
	settingsClose.Position = UDim2.new(1, -24, 0, 4)
	settingsClose.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
	settingsClose.Text = "X"
	settingsClose.TextColor3 = Color3.fromRGB(255, 255, 255)
	settingsClose.TextScaled = true
	settingsClose.Font = Enum.Font.SourceSansBold
	settingsClose.Parent = settingsFrame

	settingsClose.MouseButton1Click:Connect(function()
		settingsFrame.Visible = false
	end)

	local keyLabel = Instance.new("TextLabel")
	keyLabel.Size = UDim2.new(1, -20, 0, 30)
	keyLabel.Position = UDim2.new(0, 10, 0, 40)
	keyLabel.BackgroundTransparency = 1
	keyLabel.Text = "Toggle-Key: " .. toggleKey.Name
	keyLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	keyLabel.TextScaled = true
	keyLabel.Font = Enum.Font.SourceSansBold
	keyLabel.Parent = settingsFrame

	local keyButton = Instance.new("TextButton")
	keyButton.Size = UDim2.new(0, 80, 0, 30)
	keyButton.Position = UDim2.new(0.5, -40, 0, 80)
	keyButton.Text = "Press Key"
	keyButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	keyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	keyButton.TextScaled = true
	keyButton.Font = Enum.Font.SourceSansBold
	keyButton.Parent = settingsFrame

	local keyCorner = Instance.new("UICorner")
	keyCorner.CornerRadius = UDim.new(0, 4)
	keyCorner.Parent = keyButton

	keyButton.MouseButton1Click:Connect(function()
		keyButton.Text = "..."
		local conn
		conn = UserInputService.InputBegan:Connect(function(input, gp)
			if not gp and input.UserInputType == Enum.UserInputType.Keyboard then
				toggleKey = input.KeyCode
				keyLabel.Text = "Toggle-Key: " .. toggleKey.Name
				keyButton.Text = "Press Key"
				conn:Disconnect()
				
				savedSettings.toggleKey = toggleKey.Name
			end
		end)
	end)

	-- Save Settings Button
	local saveButton = Instance.new("TextButton")
	saveButton.Size = UDim2.new(0, 160, 0, 35)
	saveButton.Position = UDim2.new(0.5, -80, 0, 130)
	saveButton.Text = "Save Settings"
	saveButton.BackgroundColor3 = Color3.fromRGB(64, 224, 208)
	saveButton.TextColor3 = Color3.fromRGB(0, 0, 0)
	saveButton.TextScaled = true
	saveButton.Font = Enum.Font.SourceSansBold
	saveButton.Parent = settingsFrame

	local saveCorner = Instance.new("UICorner")
	saveCorner.CornerRadius = UDim.new(0, 6)
	saveCorner.Parent = saveButton

	saveButton.MouseButton1Click:Connect(function()
		local success = SettingsSaver:Save(savedSettings)
		if success then
			saveButton.Text = "Saved!"
			saveButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
			task.wait(1)
			saveButton.Text = "Save Settings"
			saveButton.BackgroundColor3 = Color3.fromRGB(64, 224, 208)
		else
			saveButton.Text = "Failed!"
			saveButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
			task.wait(1)
			saveButton.Text = "Save Settings"
			saveButton.BackgroundColor3 = Color3.fromRGB(64, 224, 208)
		end
	end)

	settingsBtn.MouseButton1Click:Connect(function()
		settingsFrame.Visible = not settingsFrame.Visible
	end)

	-- MenÃ¼ Scroll (Links)
	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Name = "MenuScroll"
	scrollingFrame.Parent = mainFrame
	scrollingFrame.AnchorPoint = Vector2.new(0, 0.5)
	scrollingFrame.Size = UDim2.new(0.15, 0, 0.54, 0)
	scrollingFrame.Position = UDim2.new(0.205, 0, 0.620, 0)
	scrollingFrame.BackgroundTransparency = 1
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.ScrollBarThickness = 6

	local layout = Instance.new("UIListLayout")
	layout.Parent = scrollingFrame
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Padding = UDim.new(0, 5)

	-- Rechts Container
	local rightContainer = Instance.new("Frame")
	rightContainer.Name = "RightContainer"
	rightContainer.Parent = mainFrame
	rightContainer.AnchorPoint = Vector2.new(1, 0.5)
	rightContainer.Size = UDim2.new(0.7, 0, 0.7, 0)
	rightContainer.Position = UDim2.new(0.95, 0, 0.55, 0)
	rightContainer.BackgroundTransparency = 1

	-- Persistente Kategorie-Frames
	local categoryFrames = {}
	
	-- Globale Key-Listener
	local globalFlyKey = Enum.KeyCode[savedSettings.flyKey] or Enum.KeyCode.F
	local globalSpeedKey = Enum.KeyCode[savedSettings.speedKey] or Enum.KeyCode.LeftControl
	local globalSpeedEnabled = false
	local globalCustomWalkSpeed = savedSettings.walkSpeed or 16
	local globalCustomJumpHeight = savedSettings.jumpHeight or 50
	
	FlySystem:SetSpeed(savedSettings.flySpeed or 50)

	-- Globaler Fly Toggle Listener
	UserInputService.InputBegan:Connect(function(input, gp)
		if not gp and input.KeyCode == globalFlyKey then
			if FlySystem.enabled then
				FlySystem:Disable()
			else
				FlySystem:Enable()
			end
		end
	end)

	-- Globaler Speed Toggle Listener
	UserInputService.InputBegan:Connect(function(input, gp)
		if not gp and input.KeyCode == globalSpeedKey then
			globalSpeedEnabled = not globalSpeedEnabled
			local character = LocalPlayer.Character
			if character and character:FindFirstChild("Humanoid") then
				if globalSpeedEnabled then
					character.Humanoid.WalkSpeed = globalCustomWalkSpeed
					character.Humanoid.JumpHeight = globalCustomJumpHeight
				else
					character.Humanoid.WalkSpeed = 16
					character.Humanoid.JumpHeight = 7.2
				end
			end
		end
	end)

	-- Slider Factory
	local function createSlider(parent, labelText, minVal, maxVal, defaultVal)
		local containerFrame = Instance.new("Frame")
		containerFrame.Size = UDim2.new(1, -16, 0, 56)
		containerFrame.BackgroundTransparency = 1
		containerFrame.Parent = parent
		
		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, 0, 0, 20)
		label.BackgroundTransparency = 1
		label.Text = labelText
		label.TextXAlignment = Enum.TextXAlignment.Left
		label.TextColor3 = Color3.fromRGB(64, 224, 208)
		label.TextScaled = true
		label.Font = Enum.Font.SourceSansBold
		label.Parent = containerFrame

		local sliderFrame = Instance.new("Frame")
		sliderFrame.Size = UDim2.new(1, 0, 0, 28)
		sliderFrame.Position = UDim2.new(0, 0, 0, 28)
		sliderFrame.BackgroundTransparency = 1
		sliderFrame.Parent = containerFrame

		local sliderBar = Instance.new("Frame")
		sliderBar.Size = UDim2.new(1, -50, 0, 6)
		sliderBar.Position = UDim2.new(0, 0, 0.5, -3)
		sliderBar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
		sliderBar.Parent = sliderFrame

		local barCorner = Instance.new("UICorner")
		barCorner.CornerRadius = UDim.new(0, 3)
		barCorner.Parent = sliderBar

		local sliderKnob = Instance.new("Frame")
		sliderKnob.Size = UDim2.new(0, 14, 0, 14)
		local startRel = (defaultVal - minVal) / (maxVal - minVal)
		sliderKnob.Position = UDim2.new(startRel, -7, 0.5, -7)
		sliderKnob.BackgroundColor3 = Color3.fromRGB(64, 224, 208)
		sliderKnob.Parent = sliderBar

		local knobCorner = Instance.new("UICorner")
		knobCorner.CornerRadius = UDim.new(1, 0)
		knobCorner.Parent = sliderKnob

		local box = Instance.new("TextBox")
		box.Size = UDim2.new(0, 40, 1, 0)
		box.Position = UDim2.new(1, -40, 0, 0)
		box.BackgroundTransparency = 1
		box.Text = tostring(defaultVal)
		box.TextColor3 = Color3.fromRGB(64, 224, 208)
		box.TextScaled = true
		box.Font = Enum.Font.SourceSansBold
		box.Parent = sliderFrame

		local draggingSlider = false

		local function updateSliderFromX(x)
			local relX = (x - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X
			relX = math.clamp(relX, 0, 1)
			sliderKnob.Position = UDim2.new(relX, -7, 0.5, -7)
			local value = math.floor(minVal + (maxVal - minVal) * relX)
			box.Text = tostring(value)
		end

		sliderKnob.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				draggingSlider = true
			end
		end)

		UserInputService.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				draggingSlider = false
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
				updateSliderFromX(input.Position.X)
			end
		end)

		box.FocusLost:Connect(function()
			local val = tonumber(box.Text)
			if val then
				val = math.clamp(val, minVal, maxVal)
				box.Text = tostring(val)
				local relX = (val - minVal) / (maxVal - minVal)
				sliderKnob.Position = UDim2.new(relX, -7, 0.5, -7)
			end
		end)

		return box
	end

	-- Button Factory
	local function createButton(name, text)
		local button = Instance.new("TextButton")
		button.Name = name
		button.Parent = scrollingFrame
		button.Size = UDim2.new(1, -10, 0, 27)
		button.BackgroundColor3 = Color3.fromRGB(64, 224, 208)
		button.Text = text
		button.TextColor3 = Color3.fromRGB(0, 0, 0)
		button.TextScaled = true
		button.Font = Enum.Font.SourceSansBold
		button.AutoButtonColor = true
		button.BorderSizePixel = 0

		local corner = Instance.new("UICorner")
		corner.CornerRadius = UDim.new(0, 6)
		corner.Parent = button

		local categoryStates = {
			flyEnabled = false,
			noclipEnabled = false,
			speedEnabled = false,
			espEnabled = false,
			nametagsEnabled = false,
			viewEnabled = false,
			followEnabled = false,
			orbitEnabled = false,
			spinEnabled = false
		}

		button.MouseButton1Click:Connect(function()
			if categoryFrames[name] then
				local isVisible = categoryFrames[name].Visible
				for _, frame in pairs(categoryFrames) do
					frame.Visible = false
				end
				categoryFrames[name].Visible = not isVisible
				return
			end
			
			for _, frame in pairs(categoryFrames) do
				frame.Visible = false
			end

			local subFrame = Instance.new("ScrollingFrame")
			subFrame.Name = name .. "Frame"
			subFrame.Size = UDim2.new(0.57, 0, 0.76, 0)
			subFrame.Position = UDim2.new(0.21, 0, 0.22, 0)
			subFrame.BackgroundTransparency = 1
			subFrame.ScrollBarThickness = 6
			subFrame.Visible = true
			subFrame.Parent = rightContainer
			
			categoryFrames[name] = subFrame

			local listLayout = Instance.new("UIListLayout")
			listLayout.Parent = subFrame
			listLayout.SortOrder = Enum.SortOrder.LayoutOrder
			listLayout.Padding = UDim.new(0, 8)

			local padding = Instance.new("UIPadding")
			padding.PaddingTop = UDim.new(0, 8)
			padding.PaddingLeft = UDim.new(0, 8)
			padding.PaddingRight = UDim.new(0, 8)
			padding.Parent = subFrame

			-- FLY TAB
			if name == "FlyButton" then
				local flyKey = Enum.KeyCode[savedSettings.flyKey] or Enum.KeyCode.F

				local flyRow = Instance.new("Frame")
				flyRow.Size = UDim2.new(1, -16, 0, 36)
				flyRow.BackgroundTransparency = 1
				flyRow.Parent = subFrame

				local flyText = Instance.new("TextLabel")
				flyText.Size = UDim2.new(1, -160, 1, 0)
				flyText.BackgroundTransparency = 1
				flyText.Text = "Fly"
				flyText.TextXAlignment = Enum.TextXAlignment.Left
				flyText.TextColor3 = Color3.fromRGB(64, 224, 208)
				flyText.TextScaled = true
				flyText.Font = Enum.Font.SourceSansBold
				flyText.Parent = flyRow

				local toggleImage = Instance.new("ImageButton")
				toggleImage.Size = UDim2.new(0, 36, 0, 21)
				toggleImage.Position = UDim2.new(1, -4, 0.5, 0)
				toggleImage.AnchorPoint = Vector2.new(1, 0.5)
				toggleImage.BackgroundTransparency = 1
				toggleImage.Image = FlySystem.enabled and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"
				toggleImage.Parent = flyRow

				local function updateFlyState(state)
					if state then
						FlySystem:Enable()
						toggleImage.Image = "rbxassetid://133008101695657"
					else
						FlySystem:Disable()
						toggleImage.Image = "rbxassetid://82936764863537"
					end
				end

				toggleImage.MouseButton1Click:Connect(function()
					updateFlyState(not FlySystem.enabled)
				end)
				
				RunService.Heartbeat:Connect(function()
					if toggleImage and toggleImage.Parent then
						toggleImage.Image = FlySystem.enabled and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"
					end
				end)

				local speedBox = createSlider(subFrame, "Fly Speed", 1, 500, savedSettings.flySpeed or 50)
				speedBox.Changed:Connect(function()
					local val = tonumber(speedBox.Text)
					if val then
						FlySystem:SetSpeed(val)
						savedSettings.flySpeed = val
					end
				end)

				local flyKeyRow = Instance.new("Frame")
				flyKeyRow.Size = UDim2.new(1, -16, 0, 36)
				flyKeyRow.BackgroundTransparency = 1
				flyKeyRow.Parent = subFrame

				local flyKeyText = Instance.new("TextLabel")
				flyKeyText.Size = UDim2.new(1, -120, 1, 0)
				flyKeyText.BackgroundTransparency = 1
				flyKeyText.Text = "Fly Toggle Key"
				flyKeyText.TextXAlignment = Enum.TextXAlignment.Left
				flyKeyText.TextColor3 = Color3.fromRGB(64, 224, 208)
				flyKeyText.TextScaled = true
				flyKeyText.Font = Enum.Font.SourceSansBold
				flyKeyText.Parent = flyKeyRow

				local flyKeyButton = Instance.new("TextButton")
				flyKeyButton.Size = UDim2.new(0, 60, 0, 24)
				flyKeyButton.Position = UDim2.new(1, -4, 0.5, 0)
				flyKeyButton.AnchorPoint = Vector2.new(1, 0.5)
				flyKeyButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				flyKeyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
				flyKeyButton.Text = globalFlyKey.Name
				flyKeyButton.Font = Enum.Font.SourceSans
				flyKeyButton.TextScaled = true
				flyKeyButton.Parent = flyKeyRow

				local flyKeyCorner = Instance.new("UICorner")
				flyKeyCorner.CornerRadius = UDim.new(0, 4)
				flyKeyCorner.Parent = flyKeyButton

				flyKeyButton.MouseButton1Click:Connect(function()
					flyKeyButton.Text = "..."
					local inputConn
					inputConn = UserInputService.InputBegan:Connect(function(input, gp)
						if not gp and input.UserInputType == Enum.UserInputType.Keyboard then
							globalFlyKey = input.KeyCode
							flyKeyButton.Text = globalFlyKey.Name
							inputConn:Disconnect()
							savedSettings.flyKey = globalFlyKey.Name
						end
					end)
				end)
			end

			-- ME TAB
			if name == "MeButton" then
				-- Give All Items (VERBESSERT)
				local giveRow = Instance.new("Frame")
				giveRow.Size = UDim2.new(1, -16, 0, 36)
				giveRow.BackgroundTransparency = 1
				giveRow.Parent = subFrame

				local giveText = Instance.new("TextLabel")
				giveText.Size = UDim2.new(1, -120, 1, 0)
				giveText.BackgroundTransparency = 1
				giveText.Text = "Give All Items"
				giveText.TextXAlignment = Enum.TextXAlignment.Left
				giveText.TextColor3 = Color3.fromRGB(64, 224, 208)
				giveText.TextScaled = true
				giveText.Font = Enum.Font.SourceSansBold
				giveText.Parent = giveRow

				local giveButton = Instance.new("ImageButton")
				giveButton.Size = UDim2.new(0, 26, 0, 26)
				giveButton.Position = UDim2.new(1, -4, 0.5, 0)
				giveButton.AnchorPoint = Vector2.new(1, 0.5)
				giveButton.BackgroundTransparency = 1
				giveButton.Image = "rbxassetid://101366472762102"
				giveButton.Parent = giveRow

				giveButton.MouseButton1Click:Connect(function()
					local character = LocalPlayer.Character
					if character then
						local backpack = LocalPlayer.Backpack
						local itemsFound = 0
						
						-- Funktion um zu prÃ¼fen ob Item bereits vorhanden ist
						local function hasItem(itemName)
							if backpack:FindFirstChild(itemName) then
								return true
							end
							if character:FindFirstChild(itemName) then
								return true
							end
							return false
						end
						
						-- Funktion zum sicheren Klonen von Tools
						local function cloneTool(tool)
							if tool:IsA("Tool") and not hasItem(tool.Name) then
								local success, clonedTool = pcall(function()
									local clone = tool:Clone()
									clone.Parent = backpack
									return clone
								end)
								if success then
									itemsFound = itemsFound + 1
									return true
								end
							end
							return false
						end

						-- 1. StarterPack durchsuchen
						local starterPack = game:GetService("StarterPack")
						for _, item in pairs(starterPack:GetChildren()) do
							cloneTool(item)
						end

						-- 2. ReplicatedStorage durchsuchen (tiefer)
						local replicatedStorage = game:GetService("ReplicatedStorage")
						for _, item in pairs(replicatedStorage:GetDescendants()) do
							cloneTool(item)
						end

						-- 3. Workspace durchsuchen (alle Tools)
						for _, item in pairs(Workspace:GetDescendants()) do
							cloneTool(item)
						end

						-- 4. Von anderen Spielern Items klonen
						for _, player in pairs(Players:GetPlayers()) do
							if player ~= LocalPlayer and player.Character then
								for _, item in pairs(player.Character:GetChildren()) do
									cloneTool(item)
								end
								if player:FindFirstChild("Backpack") then
									for _, item in pairs(player.Backpack:GetChildren()) do
										cloneTool(item)
									end
								end
							end
						end

						-- 5. PlayerGui nach Tools durchsuchen (Shop Items etc.)
						for _, player in pairs(Players:GetPlayers()) do
							if player:FindFirstChild("PlayerGui") then
								for _, item in pairs(player.PlayerGui:GetDescendants()) do
									if item:IsA("Tool") then
										cloneTool(item)
									end
								end
							end
						end

						print("[Vyrxis] Found and cloned " .. itemsFound .. " new items!")
					end
				end)

				-- Noclip
				local noclipRow = Instance.new("Frame")
				noclipRow.Size = UDim2.new(1, -16, 0, 36)
				noclipRow.BackgroundTransparency = 1
				noclipRow.Parent = subFrame

				local noclipText = Instance.new("TextLabel")
				noclipText.Size = UDim2.new(1, -120, 1, 0)
				noclipText.BackgroundTransparency = 1
				noclipText.Text = "Noclip"
				noclipText.TextXAlignment = Enum.TextXAlignment.Left
				noclipText.TextColor3 = Color3.fromRGB(64, 224, 208)
				noclipText.TextScaled = true
				noclipText.Font = Enum.Font.SourceSansBold
				noclipText.Parent = noclipRow

				local noclipToggle = Instance.new("ImageButton")
				noclipToggle.Size = UDim2.new(0, 36, 0, 21)
				noclipToggle.Position = UDim2.new(1, -4, 0.5, 0)
				noclipToggle.AnchorPoint = Vector2.new(1, 0.5)
				noclipToggle.BackgroundTransparency = 1
				noclipToggle.Image = categoryStates.noclipEnabled and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"
				noclipToggle.Parent = noclipRow

				local noclipConnection
				noclipToggle.MouseButton1Click:Connect(function()
					isNoclipEnabled = not isNoclipEnabled
					noclipToggle.Image = isNoclipEnabled and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"
					categoryStates.noclipEnabled = isNoclipEnabled

					if isNoclipEnabled then
						noclipConnection = RunService.Stepped:Connect(function()
							local character = LocalPlayer.Character
							if character then
								for _, part in pairs(character:GetChildren()) do
									if part:IsA("BasePart") and part.CanCollide then
										part.CanCollide = false
									end
								end
							end
						end)
					else
						if noclipConnection then
							noclipConnection:Disconnect()
							noclipConnection = nil
						end
						local character = LocalPlayer.Character
						if character then
							for _, part in pairs(character:GetChildren()) do
								if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
									part.CanCollide = true
								end
							end
						end
					end
				end)

				-- Walk-Jump Speed System
				local speedEnabled = globalSpeedEnabled
				local speedKey = Enum.KeyCode[savedSettings.speedKey] or Enum.KeyCode.LeftControl
				local customWalkSpeed = savedSettings.walkSpeed or 16
				local customJumpHeight = savedSettings.jumpHeight or 50

				local speedToggleRow = Instance.new("Frame")
				speedToggleRow.Size = UDim2.new(1, -16, 0, 36)
				speedToggleRow.BackgroundTransparency = 1
				speedToggleRow.Parent = subFrame

				local speedToggleText = Instance.new("TextLabel")
				speedToggleText.Size = UDim2.new(1, -160, 1, 0)
				speedToggleText.BackgroundTransparency = 1
				speedToggleText.Text = "Walk-Jump Speed"
				speedToggleText.TextXAlignment = Enum.TextXAlignment.Left
				speedToggleText.TextColor3 = Color3.fromRGB(64, 224, 208)
				speedToggleText.TextScaled = true
				speedToggleText.Font = Enum.Font.SourceSansBold
				speedToggleText.Parent = speedToggleRow

				local speedToggleButton = Instance.new("ImageButton")
				speedToggleButton.Size = UDim2.new(0, 36, 0, 21)
				speedToggleButton.Position = UDim2.new(1, -4, 0.5, 0)
				speedToggleButton.AnchorPoint = Vector2.new(1, 0.5)
				speedToggleButton.BackgroundTransparency = 1
				speedToggleButton.Image = globalSpeedEnabled and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"
				speedToggleButton.Parent = speedToggleRow

				local function updateSpeedState(state)
					globalSpeedEnabled = state
					speedToggleButton.Image = globalSpeedEnabled and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"
					
					local character = LocalPlayer.Character
					if character and character:FindFirstChild("Humanoid") then
						if globalSpeedEnabled then
							character.Humanoid.WalkSpeed = globalCustomWalkSpeed
							character.Humanoid.JumpHeight = globalCustomJumpHeight
						else
							character.Humanoid.WalkSpeed = 16
							character.Humanoid.JumpHeight = 7.2
						end
					end
				end

				speedToggleButton.MouseButton1Click:Connect(function()
					updateSpeedState(not globalSpeedEnabled)
				end)
				
				RunService.Heartbeat:Connect(function()
					if speedToggleButton and speedToggleButton.Parent then
						speedToggleButton.Image = globalSpeedEnabled and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"
					end
				end)

				local wsBox = createSlider(subFrame, "Walk Speed", 16, 300, customWalkSpeed)
				wsBox.Changed:Connect(function()
					local val = tonumber(wsBox.Text)
					if val then
						globalCustomWalkSpeed = val
						if globalSpeedEnabled then
							local character = LocalPlayer.Character
							if character and character:FindFirstChild("Humanoid") then
								character.Humanoid.WalkSpeed = globalCustomWalkSpeed
							end
						end
						savedSettings.walkSpeed = val
					end
				end)

				local jumpBox = createSlider(subFrame, "Jump Height", 7.2, 500, customJumpHeight)
				jumpBox.Changed:Connect(function()
					local val = tonumber(jumpBox.Text)
					if val then
						globalCustomJumpHeight = val
						if globalSpeedEnabled then
							local character = LocalPlayer.Character
							if character and character:FindFirstChild("Humanoid") then
								character.Humanoid.JumpHeight = globalCustomJumpHeight
							end
						end
						savedSettings.jumpHeight = val
					end
				end)

				local speedKeyRow = Instance.new("Frame")
				speedKeyRow.Size = UDim2.new(1, -16, 0, 36)
				speedKeyRow.BackgroundTransparency = 1
				speedKeyRow.Parent = subFrame

				local speedKeyText = Instance.new("TextLabel")
				speedKeyText.Size = UDim2.new(1, -120, 1, 0)
				speedKeyText.BackgroundTransparency = 1
				speedKeyText.Text = "Speed Toggle Key"
				speedKeyText.TextXAlignment = Enum.TextXAlignment.Left
				speedKeyText.TextColor3 = Color3.fromRGB(64, 224, 208)
				speedKeyText.TextScaled = true
				speedKeyText.Font = Enum.Font.SourceSansBold
				speedKeyText.Parent = speedKeyRow

				local speedKeyButton = Instance.new("TextButton")
				speedKeyButton.Size = UDim2.new(0, 60, 0, 24)
				speedKeyButton.Position = UDim2.new(1, -4, 0.5, 0)
				speedKeyButton.AnchorPoint = Vector2.new(1, 0.5)
				speedKeyButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				speedKeyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
				speedKeyButton.Text = globalSpeedKey.Name
				speedKeyButton.Font = Enum.Font.SourceSans
				speedKeyButton.TextScaled = true
				speedKeyButton.Parent = speedKeyRow

				local speedKeyCorner = Instance.new("UICorner")
				speedKeyCorner.CornerRadius = UDim.new(0, 4)
				speedKeyCorner.Parent = speedKeyButton

				speedKeyButton.MouseButton1Click:Connect(function()
					speedKeyButton.Text = "..."
					local inputConn
					inputConn = UserInputService.InputBegan:Connect(function(input, gp)
						if not gp and input.UserInputType == Enum.UserInputType.Keyboard then
							globalSpeedKey = input.KeyCode
							speedKeyButton.Text = globalSpeedKey.Name
							inputConn:Disconnect()
							savedSettings.speedKey = globalSpeedKey.Name
						end
					end)
				end)

				-- Spin Character
				local spinRow = Instance.new("Frame")
				spinRow.Size = UDim2.new(1, -16, 0, 36)
				spinRow.BackgroundTransparency = 1
				spinRow.Parent = subFrame

				local spinText = Instance.new("TextLabel")
				spinText.Size = UDim2.new(1, -120, 1, 0)
				spinText.BackgroundTransparency = 1
				spinText.Text = "Spin Character"
				spinText.TextXAlignment = Enum.TextXAlignment.Left
				spinText.TextColor3 = Color3.fromRGB(64, 224, 208)
				spinText.TextScaled = true
				spinText.Font = Enum.Font.SourceSansBold
				spinText.Parent = spinRow

				local spinToggle = Instance.new("ImageButton")
				spinToggle.Size = UDim2.new(0, 36, 0, 21)
				spinToggle.Position = UDim2.new(1, -4, 0.5, 0)
				spinToggle.AnchorPoint = Vector2.new(1, 0.5)
				spinToggle.BackgroundTransparency = 1
				spinToggle.Image = "rbxassetid://82936764863537"
				spinToggle.Parent = spinRow

				spinToggle.MouseButton1Click:Connect(function()
					isSpinning = not isSpinning
					spinToggle.Image = isSpinning and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"

					if isSpinning then
						if spinConnection then spinConnection:Disconnect() end
						spinConnection = RunService.Heartbeat:Connect(function()
							local character = LocalPlayer.Character
							if character and character:FindFirstChild("HumanoidRootPart") then
								local rootPart = character.HumanoidRootPart
								rootPart.CFrame = rootPart.CFrame * CFrame.Angles(0, math.rad(spinSpeed), 0)
							end
						end)
					else
						if spinConnection then
							spinConnection:Disconnect()
							spinConnection = nil
						end
					end
				end)

				local spinSpeedBox = createSlider(subFrame, "Spin Speed", 0, 2000, spinSpeed)
				spinSpeedBox.Changed:Connect(function()
					local val = tonumber(spinSpeedBox.Text)
					if val then
						spinSpeed = val
						savedSettings.spinSpeed = val
					end
				end)

				-- Server Rejoin
				local rejoinRow = Instance.new("Frame")
				rejoinRow.Size = UDim2.new(1, -16, 0, 36)
				rejoinRow.BackgroundTransparency = 1
				rejoinRow.Parent = subFrame

				local rejoinText = Instance.new("TextLabel")
				rejoinText.Size = UDim2.new(1, -120, 1, 0)
				rejoinText.BackgroundTransparency = 1
				rejoinText.Text = "Server Rejoin"
				rejoinText.TextXAlignment = Enum.TextXAlignment.Left
				rejoinText.TextColor3 = Color3.fromRGB(64, 224, 208)
				rejoinText.TextScaled = true
				rejoinText.Font = Enum.Font.SourceSansBold
				rejoinText.Parent = rejoinRow

				local rejoinButton = Instance.new("ImageButton")
				rejoinButton.Size = UDim2.new(0, 26, 0, 26)
				rejoinButton.Position = UDim2.new(1, -4, 0.5, 0)
				rejoinButton.AnchorPoint = Vector2.new(1, 0.5)
				rejoinButton.BackgroundTransparency = 1
				rejoinButton.Image = "rbxassetid://101366472762102"
				rejoinButton.Parent = rejoinRow

				rejoinButton.MouseButton1Click:Connect(function()
					local TeleportService = game:GetService("TeleportService")
					local success, err = pcall(function()
						TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, LocalPlayer)
					end)
					if not success then
						warn("[Vyrxis] Rejoin failed: " .. tostring(err))
					end
				end)

				-- Anti-AFK
				local antiAFKRow = Instance.new("Frame")
				antiAFKRow.Size = UDim2.new(1, -16, 0, 36)
				antiAFKRow.BackgroundTransparency = 1
				antiAFKRow.Parent = subFrame

				local antiAFKText = Instance.new("TextLabel")
				antiAFKText.Size = UDim2.new(1, -120, 1, 0)
				antiAFKText.BackgroundTransparency = 1
				antiAFKText.Text = "Anti-AFK"
				antiAFKText.TextXAlignment = Enum.TextXAlignment.Left
				antiAFKText.TextColor3 = Color3.fromRGB(64, 224, 208)
				antiAFKText.TextScaled = true
				antiAFKText.Font = Enum.Font.SourceSansBold
				antiAFKText.Parent = antiAFKRow

				local antiAFKToggle = Instance.new("ImageButton")
				antiAFKToggle.Size = UDim2.new(0, 36, 0, 21)
				antiAFKToggle.Position = UDim2.new(1, -4, 0.5, 0)
				antiAFKToggle.AnchorPoint = Vector2.new(1, 0.5)
				antiAFKToggle.BackgroundTransparency = 1
				antiAFKToggle.Image = "rbxassetid://82936764863537"
				antiAFKToggle.Parent = antiAFKRow

				local antiAFKConnection = nil

				antiAFKToggle.MouseButton1Click:Connect(function()
					local isEnabled = antiAFKConnection ~= nil
					
					if isEnabled then
						if antiAFKConnection then
							antiAFKConnection:Disconnect()
							antiAFKConnection = nil
						end
						antiAFKToggle.Image = "rbxassetid://82936764863537"
					else
						local vu = game:GetService("VirtualUser")
						antiAFKConnection = game:GetService("Players").LocalPlayer.Idled:Connect(function()
							vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
							wait(1)
							vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
						end)
						antiAFKToggle.Image = "rbxassetid://133008101695657"
					end
				end)

				-- Save/Load Position
				local resetPosRow = Instance.new("Frame")
				resetPosRow.Size = UDim2.new(1, -16, 0, 36)
				resetPosRow.BackgroundTransparency = 1
				resetPosRow.Parent = subFrame

				local resetPosText = Instance.new("TextLabel")
				resetPosText.Size = UDim2.new(1, -120, 1, 0)
				resetPosText.BackgroundTransparency = 1
				resetPosText.Text = "Save/Load Position"
				resetPosText.TextXAlignment = Enum.TextXAlignment.Left
				resetPosText.TextColor3 = Color3.fromRGB(64, 224, 208)
				resetPosText.TextScaled = true
				resetPosText.Font = Enum.Font.SourceSansBold
				resetPosText.Parent = resetPosRow

				local savedPosition = nil

				local savePosButton = Instance.new("ImageButton")
				savePosButton.Size = UDim2.new(0, 26, 0, 26)
				savePosButton.Position = UDim2.new(1, -34, 0.5, 0)
				savePosButton.AnchorPoint = Vector2.new(1, 0.5)
				savePosButton.BackgroundTransparency = 1
				savePosButton.Image = "rbxassetid://101366472762102"
				savePosButton.Parent = resetPosRow

				local loadPosButton = Instance.new("ImageButton")
				loadPosButton.Size = UDim2.new(0, 26, 0, 26)
				loadPosButton.Position = UDim2.new(1, -4, 0.5, 0)
				loadPosButton.AnchorPoint = Vector2.new(1, 0.5)
				loadPosButton.BackgroundTransparency = 1
				loadPosButton.Image = "rbxassetid://101366472762102"
				loadPosButton.Parent = resetPosRow

				savePosButton.MouseButton1Click:Connect(function()
					local character = LocalPlayer.Character
					if character and character:FindFirstChild("HumanoidRootPart") then
						savedPosition = character.HumanoidRootPart.CFrame
						print("[Vyrxis] Position saved!")
					end
				end)

				loadPosButton.MouseButton1Click:Connect(function()
					if savedPosition then
						local character = LocalPlayer.Character
						if character and character:FindFirstChild("HumanoidRootPart") then
							character.HumanoidRootPart.CFrame = savedPosition
							print("[Vyrxis] Position loaded!")
						end
					end
				end)

				-- Infinite Jump
				local infJumpRow = Instance.new("Frame")
				infJumpRow.Size = UDim2.new(1, -16, 0, 36)
				infJumpRow.BackgroundTransparency = 1
				infJumpRow.Parent = subFrame

				local infJumpText = Instance.new("TextLabel")
				infJumpText.Size = UDim2.new(1, -120, 1, 0)
				infJumpText.BackgroundTransparency = 1
				infJumpText.Text = "Infinite Jump"
				infJumpText.TextXAlignment = Enum.TextXAlignment.Left
				infJumpText.TextColor3 = Color3.fromRGB(64, 224, 208)
				infJumpText.TextScaled = true
				infJumpText.Font = Enum.Font.SourceSansBold
				infJumpText.Parent = infJumpRow

				local infJumpToggle = Instance.new("ImageButton")
				infJumpToggle.Size = UDim2.new(0, 36, 0, 21)
				infJumpToggle.Position = UDim2.new(1, -4, 0.5, 0)
				infJumpToggle.AnchorPoint = Vector2.new(1, 0.5)
				infJumpToggle.BackgroundTransparency = 1
				infJumpToggle.Image = "rbxassetid://82936764863537"
				infJumpToggle.Parent = infJumpRow

				local infJumpEnabled = false
				local infJumpConnection = nil

				infJumpToggle.MouseButton1Click:Connect(function()
					infJumpEnabled = not infJumpEnabled
					infJumpToggle.Image = infJumpEnabled and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"

					if infJumpEnabled then
						if infJumpConnection then infJumpConnection:Disconnect() end
						infJumpConnection = UserInputService.JumpRequest:Connect(function()
							local character = LocalPlayer.Character
							if character then
								local humanoid = character:FindFirstChildOfClass("Humanoid")
								if humanoid then
									humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
								end
							end
						end)
					else
						if infJumpConnection then
							infJumpConnection:Disconnect()
							infJumpConnection = nil
						end
					end
				end)
			end

			-- PLAYER TAB
			if name == "PlayerButton" then
				local playerContent = Instance.new("ScrollingFrame")
				playerContent.Size = UDim2.new(1, -16, 1, -16)
				playerContent.BackgroundTransparency = 1
				playerContent.ScrollBarThickness = 6
				playerContent.Parent = subFrame

				local playerLayout = Instance.new("UIListLayout")
				playerLayout.Parent = playerContent
				playerLayout.SortOrder = Enum.SortOrder.LayoutOrder
				playerLayout.Padding = UDim.new(0, 8)

				local searchBox = Instance.new("TextBox")
				searchBox.Size = UDim2.new(1, 0, 0, 28)
				searchBox.PlaceholderText = "Search Player..."
				searchBox.Text = ""
				searchBox.ClearTextOnFocus = false
				searchBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
				searchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
				searchBox.TextScaled = true
				searchBox.Font = Enum.Font.SourceSans
				searchBox.Parent = playerContent

				local searchCorner = Instance.new("UICorner")
				searchCorner.CornerRadius = UDim.new(0, 6)
				searchCorner.Parent = searchBox

				local playerListFrame = Instance.new("Frame")
				playerListFrame.Size = UDim2.new(1, 0, 0, 150)
				playerListFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				playerListFrame.BorderSizePixel = 0
				playerListFrame.Parent = playerContent

				local playerListCorner = Instance.new("UICorner")
				playerListCorner.CornerRadius = UDim.new(0, 6)
				playerListCorner.Parent = playerListFrame

				local playerList = Instance.new("ScrollingFrame")
				playerList.Size = UDim2.new(1, -4, 1, -4)
				playerList.Position = UDim2.new(0, 2, 0, 2)
				playerList.BackgroundTransparency = 1
				playerList.ScrollBarThickness = 6
				playerList.Parent = playerListFrame

				local listLayout = Instance.new("UIListLayout")
				listLayout.Parent = playerList
				listLayout.SortOrder = Enum.SortOrder.LayoutOrder
				listLayout.Padding = UDim.new(0, 4)

				local function refreshPlayerList()
					for _, c in pairs(playerList:GetChildren()) do
						if c:IsA("TextButton") then c:Destroy() end
					end
					
					local searchTerm = searchBox.Text:lower()
					
					for _, plr in pairs(Players:GetPlayers()) do
						if plr ~= LocalPlayer then
							local playerName = plr.Name:lower()
							local displayName = plr.DisplayName and plr.DisplayName ~= plr.Name and plr.DisplayName:lower() or ""
							
							local matchesSearch = searchTerm == "" or 
								string.find(playerName, searchTerm) or 
								(displayName ~= "" and string.find(displayName, searchTerm))
							
							if matchesSearch then
								local btn = Instance.new("TextButton")
								btn.Size = UDim2.new(1, -4, 0, 24)
								
								if plr.DisplayName and plr.DisplayName ~= plr.Name then
									btn.Text = plr.DisplayName .. " (@" .. plr.Name .. ")"
								else
									btn.Text = plr.Name
								end
								
								btn.BackgroundColor3 = (selectedPlayer == plr.Name) and Color3.fromRGB(0, 180, 220) or Color3.fromRGB(64, 224, 208)
								btn.TextColor3 = Color3.fromRGB(0, 0, 0)
								btn.TextScaled = true
								btn.Font = Enum.Font.SourceSansBold
								btn.Parent = playerList

								local corner = Instance.new("UICorner")
								corner.CornerRadius = UDim.new(0, 5)
								corner.Parent = btn

								btn.MouseButton1Click:Connect(function()
									selectedPlayer = plr.Name
									refreshPlayerList()
								end)
							end
						end
					end
				end

				searchBox:GetPropertyChangedSignal("Text"):Connect(refreshPlayerList)
				Players.PlayerAdded:Connect(refreshPlayerList)
				Players.PlayerRemoving:Connect(refreshPlayerList)
				refreshPlayerList()

				-- View Player
				local viewRow = Instance.new("Frame")
				viewRow.Size = UDim2.new(1, 0, 0, 36)
				viewRow.BackgroundTransparency = 1
				viewRow.Parent = playerContent

				local viewText = Instance.new("TextLabel")
				viewText.Size = UDim2.new(1, -120, 1, 0)
				viewText.BackgroundTransparency = 1
				viewText.Text = "View Player"
				viewText.TextXAlignment = Enum.TextXAlignment.Left
				viewText.TextColor3 = Color3.fromRGB(64, 224, 208)
				viewText.TextScaled = true
				viewText.Font = Enum.Font.SourceSansBold
				viewText.Parent = viewRow

				local viewToggle = Instance.new("ImageButton")
				viewToggle.Size = UDim2.new(0, 36, 0, 21)
				viewToggle.Position = UDim2.new(1, -4, 0.5, 0)
				viewToggle.AnchorPoint = Vector2.new(1, 0.5)
				viewToggle.BackgroundTransparency = 1
				viewToggle.Image = categoryStates.viewEnabled and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"
				viewToggle.Parent = viewRow

				viewToggle.MouseButton1Click:Connect(function()
					isViewingPlayer = not isViewingPlayer
					categoryStates.viewEnabled = isViewingPlayer
					viewToggle.Image = isViewingPlayer and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"

					if isViewingPlayer and selectedPlayer ~= "" then
						local targetPlayer = Players:FindFirstChild(selectedPlayer)
						if targetPlayer and targetPlayer.Character then
							local targetHum = targetPlayer.Character:FindFirstChild("Humanoid")
							if targetHum then
								Camera.CameraSubject = targetHum
							end
						end
					else
						local playerHum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid")
						if playerHum then
							Camera.CameraSubject = playerHum
						end
					end
				end)

				-- Follow Player
				local followRow = Instance.new("Frame")
				followRow.Size = UDim2.new(1, 0, 0, 36)
				followRow.BackgroundTransparency = 1
				followRow.Parent = playerContent

				local followText = Instance.new("TextLabel")
				followText.Size = UDim2.new(1, -120, 1, 0)
				followText.BackgroundTransparency = 1
				followText.Text = "Follow Player"
				followText.TextXAlignment = Enum.TextXAlignment.Left
				followText.TextColor3 = Color3.fromRGB(64, 224, 208)
				followText.TextScaled = true
				followText.Font = Enum.Font.SourceSansBold
				followText.Parent = followRow

				local followToggle = Instance.new("ImageButton")
				followToggle.Size = UDim2.new(0, 36, 0, 21)
				followToggle.Position = UDim2.new(1, -4, 0.5, 0)
				followToggle.AnchorPoint = Vector2.new(1, 0.5)
				followToggle.BackgroundTransparency = 1
				followToggle.Image = "rbxassetid://82936764863537"
				followToggle.Parent = followRow

				-- Walk Animation IDs (Roblox Standard Animations)
				local walkAnimations = {
					["Default"] = nil,
					["Astronaut"] = "rbxassetid://891621366",
					["Bubbly"] = "rbxassetid://910034870",
					["Cartoony"] = "rbxassetid://742637744",
					["Elder"] = "rbxassetid://845403856",
					["Knight"] = "rbxassetid://657564596",
					["Mage"] = "rbxassetid://657564596",
					["Ninja"] = "rbxassetid://656118852",
					["Pirate"] = "rbxassetid://750783738",
					["Robot"] = "rbxassetid://656121766",
					["Stylish"] = "rbxassetid://616140096",
					["Superhero"] = "rbxassetid://616111295",
					["Toy"] = "rbxassetid://782842708",
					["Vampire"] = "rbxassetid://1083216690",
					["Werewolf"] = "rbxassetid://1083178339",
					["Zombie"] = "rbxassetid://616163682"
				}

				local currentAnimationTrack = nil

				local function applyWalkAnimation(character, animName)
					if not character then return end
					local humanoid = character:FindFirstChildOfClass("Humanoid")
					if not humanoid then return end

					-- Remove current animation
					if currentAnimationTrack then
						currentAnimationTrack:Stop()
						currentAnimationTrack = nil
					end

					-- Apply new animation if not default
					if animName ~= "Default" and walkAnimations[animName] then
						local animator = humanoid:FindFirstChildOfClass("Animator")
						if not animator then
							animator = Instance.new("Animator")
							animator.Parent = humanoid
						end

						local animation = Instance.new("Animation")
						animation.AnimationId = walkAnimations[animName]
						
						pcall(function()
							currentAnimationTrack = animator:LoadAnimation(animation)
							if currentAnimationTrack then
								currentAnimationTrack.Priority = Enum.AnimationPriority.Movement
								currentAnimationTrack.Looped = true
								currentAnimationTrack:Play()
							end
						end)
					end
				end

				-- Animation Selector
				local animSelectorRow = Instance.new("Frame")
				animSelectorRow.Size = UDim2.new(1, 0, 0, 36)
				animSelectorRow.BackgroundTransparency = 1
				animSelectorRow.Parent = playerContent

				local animSelectorText = Instance.new("TextLabel")
				animSelectorText.Size = UDim2.new(1, -120, 1, 0)
				animSelectorText.BackgroundTransparency = 1
				animSelectorText.Text = "Walk Animation"
				animSelectorText.TextXAlignment = Enum.TextXAlignment.Left
				animSelectorText.TextColor3 = Color3.fromRGB(64, 224, 208)
				animSelectorText.TextScaled = true
				animSelectorText.Font = Enum.Font.SourceSansBold
				animSelectorText.Parent = animSelectorRow

				local animDropdown = Instance.new("TextButton")
				animDropdown.Size = UDim2.new(0, 100, 0, 24)
				animDropdown.Position = UDim2.new(1, -4, 0.5, 0)
				animDropdown.AnchorPoint = Vector2.new(1, 0.5)
				animDropdown.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				animDropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
				animDropdown.Text = followWalkAnimation
				animDropdown.Font = Enum.Font.SourceSans
				animDropdown.TextScaled = true
				animDropdown.Parent = animSelectorRow

				local animDropdownCorner = Instance.new("UICorner")
				animDropdownCorner.CornerRadius = UDim.new(0, 4)
				animDropdownCorner.Parent = animDropdown

				-- Dropdown Menu
				local animDropdownMenu = Instance.new("ScrollingFrame")
				animDropdownMenu.Size = UDim2.new(0, 100, 0, 200)
				animDropdownMenu.Position = UDim2.new(1, -4, 1, 2)
				animDropdownMenu.AnchorPoint = Vector2.new(1, 0)
				animDropdownMenu.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				animDropdownMenu.BorderSizePixel = 0
				animDropdownMenu.ScrollBarThickness = 4
				animDropdownMenu.Visible = false
				animDropdownMenu.ZIndex = 100
				animDropdownMenu.Parent = animSelectorRow

				local animDropdownMenuCorner = Instance.new("UICorner")
				animDropdownMenuCorner.CornerRadius = UDim.new(0, 4)
				animDropdownMenuCorner.Parent = animDropdownMenu

				local animMenuLayout = Instance.new("UIListLayout")
				animMenuLayout.Parent = animDropdownMenu
				animMenuLayout.SortOrder = Enum.SortOrder.Name
				animMenuLayout.Padding = UDim.new(0, 2)

				local animNames = {}
				for name, _ in pairs(walkAnimations) do
					table.insert(animNames, name)
				end
				table.sort(animNames)

				for _, animName in ipairs(animNames) do
					local animOption = Instance.new("TextButton")
					animOption.Size = UDim2.new(1, -4, 0, 24)
					animOption.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					animOption.TextColor3 = Color3.fromRGB(255, 255, 255)
					animOption.Text = animName
					animOption.Font = Enum.Font.SourceSans
					animOption.TextScaled = true
					animOption.ZIndex = 101
					animOption.Parent = animDropdownMenu

					local animOptionCorner = Instance.new("UICorner")
					animOptionCorner.CornerRadius = UDim.new(0, 3)
					animOptionCorner.Parent = animOption

					animOption.MouseButton1Click:Connect(function()
						followWalkAnimation = animName
						animDropdown.Text = animName
						animDropdownMenu.Visible = false
						savedSettings.followAnimation = animName
						
						if isFollowingPlayer then
							local character = LocalPlayer.Character
							applyWalkAnimation(character, animName)
						end
					end)
				end

				animDropdown.MouseButton1Click:Connect(function()
					animDropdownMenu.Visible = not animDropdownMenu.Visible
				end)

				-- Follow Distance Slider
				local followDistanceBox = createSlider(playerContent, "Follow Distance", 0, 500, followDistance)
				followDistanceBox.Changed:Connect(function()
					local val = tonumber(followDistanceBox.Text)
					if val then
						followDistance = val
						savedSettings.followDistance = val
					end
				end)

				-- Variablen fÃ¼r Jump-Synchronisation
				local lastTargetJumpState = false

				followToggle.MouseButton1Click:Connect(function()
					isFollowingPlayer = not isFollowingPlayer
					followToggle.Image = isFollowingPlayer and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"

					if isFollowingPlayer and selectedPlayer ~= "" then
						local character = LocalPlayer.Character
						
						-- Stelle sicher, dass Character steht
						if character then
							local humanoid = character:FindFirstChildOfClass("Humanoid")
							if humanoid then
								humanoid.Sit = false
								wait(0.1)
							end
						end
						
						applyWalkAnimation(character, followWalkAnimation)

						if followConnection then followConnection:Disconnect() end

						-- Hauptloop
						followConnection = RunService.Heartbeat:Connect(function()
							if not isFollowingPlayer then
								if followConnection then followConnection:Disconnect() end
								if currentAnimationTrack then
									currentAnimationTrack:Stop()
									currentAnimationTrack = nil
								end
								return
							end

							local targetPlayer = Players:FindFirstChild(selectedPlayer)
							local character = LocalPlayer.Character
							
							if targetPlayer and targetPlayer.Character and character then
								local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
								local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
								local myRoot = character:FindFirstChild("HumanoidRootPart")
								local myHumanoid = character:FindFirstChildOfClass("Humanoid")
								
								if targetRoot and myRoot and myHumanoid and targetHumanoid then
									-- Verhindere Fallen wÃ¤hrend Follow
									if myHumanoid:GetState() == Enum.HumanoidStateType.Physics or 
									   myHumanoid:GetState() == Enum.HumanoidStateType.Ragdoll then
										myHumanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
									end

									-- Berechne Zielposition mit eingestelltem Abstand
									local distance = (myRoot.Position - targetRoot.Position).Magnitude
									local direction = (targetRoot.Position - myRoot.Position).Unit
									local targetPosition = targetRoot.Position - (direction * followDistance)

									if distance > followDistance + 2 then
										myHumanoid:MoveTo(targetPosition)
									end

									-- Synchronisiere Sprung
									local targetJumpState = targetHumanoid:GetState() == Enum.HumanoidStateType.Jumping or 
															targetHumanoid:GetState() == Enum.HumanoidStateType.Freefall

									if targetJumpState and not lastTargetJumpState and distance <= followDistance + 10 then
										myHumanoid:ChangeState(Enum.HumanoidStateType.Jumping)
									end

									lastTargetJumpState = targetJumpState

									-- Synchronisiere Sitzen nur wenn Ziel sitzt
									if targetHumanoid.Sit and not myHumanoid.Sit then
										myHumanoid.Sit = true
									elseif not targetHumanoid.Sit and myHumanoid.Sit then
										myHumanoid.Sit = false
									end
								end
							else
								isFollowingPlayer = false
								followToggle.Image = "rbxassetid://82936764863537"
								if followConnection then followConnection:Disconnect() end
								if currentAnimationTrack then
									currentAnimationTrack:Stop()
									currentAnimationTrack = nil
								end
							end
						end)
					else
						if followConnection then
							followConnection:Disconnect()
							followConnection = nil
						end
						if targetSpeedConnection then
							targetSpeedConnection:Disconnect()
							targetSpeedConnection = nil
						end
						if targetJumpConnection then
							targetJumpConnection:Disconnect()
							targetJumpConnection = nil
						end
						if currentAnimationTrack then
							currentAnimationTrack:Stop()
							currentAnimationTrack = nil
						end
					end
				end)

				-- Orbit Player
				local orbitRow = Instance.new("Frame")
				orbitRow.Size = UDim2.new(1, 0, 0, 36)
				orbitRow.BackgroundTransparency = 1
				orbitRow.Parent = playerContent

				local orbitText = Instance.new("TextLabel")
				orbitText.Size = UDim2.new(1, -120, 1, 0)
				orbitText.BackgroundTransparency = 1
				orbitText.Text = "Orbit Player"
				orbitText.TextXAlignment = Enum.TextXAlignment.Left
				orbitText.TextColor3 = Color3.fromRGB(64, 224, 208)
				orbitText.TextScaled = true
				orbitText.Font = Enum.Font.SourceSansBold
				orbitText.Parent = orbitRow

				local orbitToggle = Instance.new("ImageButton")
				orbitToggle.Size = UDim2.new(0, 36, 0, 21)
				orbitToggle.Position = UDim2.new(1, -4, 0.5, 0)
				orbitToggle.AnchorPoint = Vector2.new(1, 0.5)
				orbitToggle.BackgroundTransparency = 1
				orbitToggle.Image = "rbxassetid://82936764863537"
				orbitToggle.Parent = orbitRow

				orbitToggle.MouseButton1Click:Connect(function()
					isOrbitingPlayer = not isOrbitingPlayer
					orbitToggle.Image = isOrbitingPlayer and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"

					if isOrbitingPlayer and selectedPlayer ~= "" then
						orbitAngle = 0
						if orbitConnection then orbitConnection:Disconnect() end
						orbitConnection = RunService.Heartbeat:Connect(function(dt)
							if not isOrbitingPlayer then
								if orbitConnection then orbitConnection:Disconnect() end
								return
							end

							local targetPlayer = Players:FindFirstChild(selectedPlayer)
							local character = LocalPlayer.Character
							
							if targetPlayer and targetPlayer.Character and character then
								local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
								local myRoot = character:FindFirstChild("HumanoidRootPart")
								
								if targetRoot and myRoot then
									orbitAngle = orbitAngle + (orbitSpeed * dt)
									local x = math.cos(orbitAngle) * orbitRadius
									local z = math.sin(orbitAngle) * orbitRadius
									
									local targetPos = targetRoot.Position + Vector3.new(x, 0, z)
									myRoot.CFrame = CFrame.new(targetPos, targetRoot.Position)
								end
							else
								isOrbitingPlayer = false
								orbitToggle.Image = "rbxassetid://82936764863537"
								if orbitConnection then orbitConnection:Disconnect() end
							end
						end)
					else
						if orbitConnection then
							orbitConnection:Disconnect()
							orbitConnection = nil
						end
					end
				end)

				local orbitSpeedBox = createSlider(playerContent, "Orbit Speed", 0, 2000, orbitSpeed)
				orbitSpeedBox.Changed:Connect(function()
					local val = tonumber(orbitSpeedBox.Text)
					if val then
						orbitSpeed = val
						savedSettings.orbitSpeed = val
					end
				end)

				local orbitRadiusBox = createSlider(playerContent, "Orbit Radius", 1, 1000, orbitRadius)
				orbitRadiusBox.Changed:Connect(function()
					local val = tonumber(orbitRadiusBox.Text)
					if val then
						orbitRadius = val
						savedSettings.orbitRadius = val
					end
				end)

				-- Goto Player
				local gotoRow = Instance.new("Frame")
				gotoRow.Size = UDim2.new(1, 0, 0, 36)
				gotoRow.BackgroundTransparency = 1
				gotoRow.Parent = playerContent

				local gotoText = Instance.new("TextLabel")
				gotoText.Size = UDim2.new(1, -120, 1, 0)
				gotoText.BackgroundTransparency = 1
				gotoText.Text = "Goto Player"
				gotoText.TextXAlignment = Enum.TextXAlignment.Left
				gotoText.TextColor3 = Color3.fromRGB(64, 224, 208)
				gotoText.TextScaled = true
				gotoText.Font = Enum.Font.SourceSansBold
				gotoText.Parent = gotoRow

				local gotoButton = Instance.new("ImageButton")
				gotoButton.Size = UDim2.new(0, 26, 0, 26)
				gotoButton.Position = UDim2.new(1, -4, 0.5, 0)
				gotoButton.AnchorPoint = Vector2.new(1, 0.5)
				gotoButton.BackgroundTransparency = 1
				gotoButton.Image = "rbxassetid://101366472762102"
				gotoButton.Parent = gotoRow

				gotoButton.MouseButton1Click:Connect(function()
					if selectedPlayer ~= "" then
						local targetPlayer = Players:FindFirstChild(selectedPlayer)
						local character = LocalPlayer.Character
						if targetPlayer and targetPlayer.Character and character and character:FindFirstChild("HumanoidRootPart") then
							local targetCharacter = targetPlayer.Character
							if targetCharacter:FindFirstChild("HumanoidRootPart") then
								character.HumanoidRootPart.CFrame = targetCharacter.HumanoidRootPart.CFrame
							end
						end
					end
				end)

				-- Clone Items (NEU)
				local cloneItemsRow = Instance.new("Frame")
				cloneItemsRow.Size = UDim2.new(1, 0, 0, 36)
				cloneItemsRow.BackgroundTransparency = 1
				cloneItemsRow.Parent = playerContent

				local cloneItemsText = Instance.new("TextLabel")
				cloneItemsText.Size = UDim2.new(1, -120, 1, 0)
				cloneItemsText.BackgroundTransparency = 1
				cloneItemsText.Text = "Clone Items"
				cloneItemsText.TextXAlignment = Enum.TextXAlignment.Left
				cloneItemsText.TextColor3 = Color3.fromRGB(64, 224, 208)
				cloneItemsText.TextScaled = true
				cloneItemsText.Font = Enum.Font.SourceSansBold
				cloneItemsText.Parent = cloneItemsRow

				local cloneItemsButton = Instance.new("ImageButton")
				cloneItemsButton.Size = UDim2.new(0, 26, 0, 26)
				cloneItemsButton.Position = UDim2.new(1, -4, 0.5, 0)
				cloneItemsButton.AnchorPoint = Vector2.new(1, 0.5)
				cloneItemsButton.BackgroundTransparency = 1
				cloneItemsButton.Image = "rbxassetid://101366472762102"
				cloneItemsButton.Parent = cloneItemsRow

				cloneItemsButton.MouseButton1Click:Connect(function()
					if selectedPlayer ~= "" then
						local targetPlayer = Players:FindFirstChild(selectedPlayer)
						local character = LocalPlayer.Character
						
						if targetPlayer and character then
							local backpack = LocalPlayer.Backpack
							local itemsCloned = 0
							
							-- Funktion um zu prÃ¼fen ob Item bereits vorhanden ist
							local function hasItem(itemName)
								if backpack:FindFirstChild(itemName) then
									return true
								end
								if character:FindFirstChild(itemName) then
									return true
								end
								return false
							end
							
							-- Items aus dem Character des Zielspielers klonen
							if targetPlayer.Character then
								for _, item in pairs(targetPlayer.Character:GetChildren()) do
									if item:IsA("Tool") and not hasItem(item.Name) then
										local success, clonedTool = pcall(function()
											local clone = item:Clone()
											clone.Parent = backpack
											return clone
										end)
										if success then
											itemsCloned = itemsCloned + 1
										end
									end
								end
							end
							
							-- Items aus dem Backpack des Zielspielers klonen
							if targetPlayer:FindFirstChild("Backpack") then
								for _, item in pairs(targetPlayer.Backpack:GetChildren()) do
									if item:IsA("Tool") and not hasItem(item.Name) then
										local success, clonedTool = pcall(function()
											local clone = item:Clone()
											clone.Parent = backpack
											return clone
										end)
										if success then
											itemsCloned = itemsCloned + 1
										end
									end
								end
							end
							
							print("[Vyrxis] Cloned " .. itemsCloned .. " items from " .. targetPlayer.Name)
						end
					end
				end)

				-- Player Sit
				local sitRow = Instance.new("Frame")
				sitRow.Size = UDim2.new(1, 0, 0, 36)
				sitRow.BackgroundTransparency = 1
				sitRow.Parent = playerContent

				local sitText = Instance.new("TextLabel")
				sitText.Size = UDim2.new(1, -120, 1, 0)
				sitText.BackgroundTransparency = 1
				sitText.Text = "Player Sit"
				sitText.TextXAlignment = Enum.TextXAlignment.Left
				sitText.TextColor3 = Color3.fromRGB(64, 224, 208)
				sitText.TextScaled = true
				sitText.Font = Enum.Font.SourceSansBold
				sitText.Parent = sitRow

				local sitToggle = Instance.new("ImageButton")
				sitToggle.Size = UDim2.new(0, 36, 0, 21)
				sitToggle.Position = UDim2.new(1, -4, 0.5, 0)
				sitToggle.AnchorPoint = Vector2.new(1, 0.5)
				sitToggle.BackgroundTransparency = 1
				sitToggle.Image = "rbxassetid://82936764863537"
				sitToggle.Parent = sitRow

				local isSitting = false
				local sitConnection

				sitToggle.MouseButton1Click:Connect(function()
					isSitting = not isSitting
					sitToggle.Image = isSitting and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"

					if isSitting and selectedPlayer ~= "" then
						local targetPlayer = Players:FindFirstChild(selectedPlayer)
						local character = LocalPlayer.Character
						
						if targetPlayer and targetPlayer.Character and character then
							local targetHead = targetPlayer.Character:FindFirstChild("Head")
							local humanoid = character:FindFirstChild("Humanoid")
							local rootPart = character:FindFirstChild("HumanoidRootPart")
							
							if targetHead and humanoid and rootPart then
								humanoid.Sit = true
								humanoid.WalkSpeed = 0
								humanoid.JumpHeight = 0
								
								if sitConnection then sitConnection:Disconnect() end
								sitConnection = RunService.Heartbeat:Connect(function()
									if not isSitting then
										if sitConnection then sitConnection:Disconnect() end
										return
									end
									
									local target = Players:FindFirstChild(selectedPlayer)
									if target and target.Character and target.Character:FindFirstChild("Head") then
										local tHead = target.Character.Head
										rootPart.CFrame = tHead.CFrame * CFrame.new(0, 2, 0)
										rootPart.Velocity = Vector3.new(0, 0, 0)
										rootPart.RotVelocity = Vector3.new(0, 0, 0)
									else
										isSitting = false
										sitToggle.Image = "rbxassetid://82936764863537"
										if sitConnection then sitConnection:Disconnect() end
										
										if humanoid then
											humanoid.WalkSpeed = 16
											humanoid.JumpHeight = 7.2
										end
									end
								end)
							end
						end
					else
						if sitConnection then
							sitConnection:Disconnect()
							sitConnection = nil
						end
						
						local character = LocalPlayer.Character
						if character and character:FindFirstChild("Humanoid") then
							local humanoid = character.Humanoid
							humanoid.Sit = false
							humanoid.WalkSpeed = 16
							humanoid.JumpHeight = 7.2
						end
					end
				end)
			end

			-- ESP TAB
			if name == "ESPButton" then
				local colors = {
					Color3.fromRGB(255, 0, 0),
					Color3.fromRGB(0, 255, 0),
					Color3.fromRGB(0, 0, 255),
					Color3.fromRGB(255, 255, 0),
					Color3.fromRGB(255, 0, 255),
					Color3.fromRGB(0, 255, 255),
					Color3.fromRGB(255, 255, 255),
				}

				local espRow = Instance.new("Frame")
				espRow.Size = UDim2.new(1, -16, 0, 36)
				espRow.BackgroundTransparency = 1
				espRow.Parent = subFrame

				local espText = Instance.new("TextLabel")
				espText.Text = "ESP Highlight"
				espText.Size = UDim2.new(1, -120, 1, 0)
				espText.BackgroundTransparency = 1
				espText.TextColor3 = Color3.fromRGB(64, 224, 208)
				espText.TextScaled = true
				espText.Font = Enum.Font.SourceSansBold
				espText.TextXAlignment = Enum.TextXAlignment.Left
				espText.Parent = espRow

				local espToggle = Instance.new("ImageButton")
				espToggle.Size = UDim2.new(0, 36, 0, 21)
				espToggle.AnchorPoint = Vector2.new(1, 0.5)
				espToggle.Position = UDim2.new(1, -4, 0.5, 0)
				espToggle.Image = categoryStates.espEnabled and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"
				espToggle.BackgroundTransparency = 1
				espToggle.Parent = espRow

				local function createESPHighlight(character)
					if not character or not character.Parent then return nil end

					for _, child in pairs(character:GetChildren()) do
						if child.Name == "VyrxisESP" then child:Destroy() end
					end

					local highlight = Instance.new("Highlight")
					highlight.Name = "VyrxisESP"
					highlight.FillColor = espColor
					highlight.OutlineColor = espColor
					highlight.FillTransparency = espTransparency
					highlight.OutlineTransparency = 0
					highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
					highlight.Parent = character

					return highlight
				end

				local function createHealthbar(character)
					if not character or not character.Parent then return nil end

					local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
					local humanoid = character:FindFirstChild("Humanoid")
					if not humanoidRootPart or not humanoid then return nil end

					for _, child in pairs(humanoidRootPart:GetChildren()) do
						if child:IsA("BillboardGui") and child.Name == "VyrxisHealthbar" then
							child:Destroy()
						end
					end

					local characterHeight = 5
					if character:FindFirstChild("Head") then
						local head = character.Head
						characterHeight = math.abs(head.Position.Y - humanoidRootPart.Position.Y) + head.Size.Y/2 + humanoidRootPart.Size.Y/2
					end

					local billboardGui = Instance.new("BillboardGui")
					billboardGui.Name = "VyrxisHealthbar"
					billboardGui.Size = UDim2.new(0, 0, characterHeight * 0.8, 0)
					billboardGui.StudsOffset = Vector3.new(2.5, 0, 0)
					billboardGui.Parent = humanoidRootPart
					billboardGui.AlwaysOnTop = true
					billboardGui.LightInfluence = 0

					local background = Instance.new("Frame")
					background.Size = UDim2.new(1, 0, 1, 0)
					background.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
					background.BorderSizePixel = 1
					background.BorderColor3 = Color3.fromRGB(255, 255, 255)
					background.Parent = billboardGui

					local backgroundCorner = Instance.new("UICorner")
					backgroundCorner.CornerRadius = UDim.new(0, 2)
					backgroundCorner.Parent = background

					local currentHealthPercent = math.max(humanoid.Health / humanoid.MaxHealth, 0.05)
					local healthBar = Instance.new("Frame")
					healthBar.Size = UDim2.new(1, -2, currentHealthPercent, -2)
					healthBar.Position = UDim2.new(0, 1, 1, -1)
					healthBar.AnchorPoint = Vector2.new(0, 1)
					healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
					healthBar.BorderSizePixel = 0
					healthBar.Parent = background

					local healthBarCorner = Instance.new("UICorner")
					healthBarCorner.CornerRadius = UDim.new(0, 1)
					healthBarCorner.Parent = healthBar

					humanoid.HealthChanged:Connect(function()
						if healthBar and healthBar.Parent then
							local healthPercent = math.max(humanoid.Health / humanoid.MaxHealth, 0.05)
							healthBar.Size = UDim2.new(1, -2, healthPercent, -2)

							if healthPercent > 0.6 then
								healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
							elseif healthPercent > 0.3 then
								healthBar.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
							else
								healthBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
							end
						end
					end)

					return billboardGui
				end

				local function enableESPForAllPlayers()
					for player, highlight in pairs(espHighlights) do
						if highlight and highlight.Parent then highlight:Destroy() end
					end
					for player, healthbar in pairs(healthbars) do
						if healthbar and healthbar.Parent then healthbar:Destroy() end
					end
					espHighlights = {}
					healthbars = {}

					for _, player in pairs(Players:GetPlayers()) do
						if player ~= LocalPlayer and player.Character and player.Character.Parent then
							local highlight = createESPHighlight(player.Character)
							if highlight then espHighlights[player] = highlight end

							local healthbar = createHealthbar(player.Character)
							if healthbar then healthbars[player] = healthbar end
						end
					end
				end

				local function disableESPForAllPlayers()
					for player, highlight in pairs(espHighlights) do
						if highlight and highlight.Parent then highlight:Destroy() end
					end
					for player, healthbar in pairs(healthbars) do
						if healthbar and healthbar.Parent then healthbar:Destroy() end
					end
					espHighlights = {}
					healthbars = {}
				end

				espToggle.MouseButton1Click:Connect(function()
					isESPEnabled = not isESPEnabled
					categoryStates.espEnabled = isESPEnabled
					espToggle.Image = isESPEnabled and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"

					if isESPEnabled then
						enableESPForAllPlayers()
					else
						disableESPForAllPlayers()
					end
				end)

				local colorPreview = Instance.new("TextButton")
				colorPreview.Size = UDim2.new(0, 40, 0, 24)
				colorPreview.BackgroundColor3 = espColor
				colorPreview.Text = ""
				colorPreview.ZIndex = 5
				colorPreview.Parent = subFrame

				local colorPickerFrame = Instance.new("Frame")
				colorPickerFrame.Size = UDim2.new(0, 120, 0, 60)
				colorPickerFrame.Position = UDim2.new(0, 0, 0, 40)
				colorPickerFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
				colorPickerFrame.Visible = false
				colorPickerFrame.ZIndex = 10
				colorPickerFrame.Parent = subFrame

				local grid = Instance.new("UIGridLayout")
				grid.CellSize = UDim2.new(0, 30, 0, 30)
				grid.Parent = colorPickerFrame

				for _, col in ipairs(colors) do
					local b = Instance.new("TextButton")
					b.Size = UDim2.new(0, 30, 0, 30)
					b.BackgroundColor3 = col
					b.Text = ""
					b.ZIndex = 11
					b.Parent = colorPickerFrame
					b.MouseButton1Click:Connect(function()
						espColor = col
						colorPreview.BackgroundColor3 = col
						colorPickerFrame.Visible = false
						for player, highlight in pairs(espHighlights) do
							if highlight then
								highlight.FillColor = espColor
								highlight.OutlineColor = espColor
							end
						end
						savedSettings.espColorR = col.R * 255
						savedSettings.espColorG = col.G * 255
						savedSettings.espColorB = col.B * 255
					end)
				end

				colorPreview.MouseButton1Click:Connect(function()
					colorPickerFrame.Visible = not colorPickerFrame.Visible
				end)

				local transBox = createSlider(subFrame, "ESP Transparency", 0, 100, savedSettings.espTransparency or 50)
				transBox.Changed:Connect(function()
					local val = tonumber(transBox.Text)
					if val then
						espTransparency = val / 100
						for player, highlight in pairs(espHighlights) do
							if highlight then
								highlight.FillTransparency = espTransparency
							end
						end
						savedSettings.espTransparency = val
					end
				end)

				local nameRow = Instance.new("Frame")
				nameRow.Size = UDim2.new(1, -16, 0, 36)
				nameRow.BackgroundTransparency = 1
				nameRow.Parent = subFrame

				local nameText = Instance.new("TextLabel")
				nameText.Text = "ESP Nametag"
				nameText.Size = UDim2.new(1, -120, 1, 0)
				nameText.BackgroundTransparency = 1
				nameText.TextColor3 = Color3.fromRGB(64, 224, 208)
				nameText.TextScaled = true
				nameText.Font = Enum.Font.SourceSansBold
				nameText.TextXAlignment = Enum.TextXAlignment.Left
				nameText.Parent = nameRow

				local nameToggle = Instance.new("ImageButton")
				nameToggle.Size = UDim2.new(0, 36, 0, 21)
				nameToggle.AnchorPoint = Vector2.new(1, 0.5)
				nameToggle.Position = UDim2.new(1, -4, 0.5, 0)
				nameToggle.Image = "rbxassetid://82936764863537"
				nameToggle.BackgroundTransparency = 1
				nameToggle.Parent = nameRow

				local function createNametag(character, playerName)
					if not character or not character.Parent then return nil end

					local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
					if not humanoidRootPart then return nil end

					for _, child in pairs(humanoidRootPart:GetChildren()) do
						if child.Name == "VyrxisNametag" then child:Destroy() end
					end

					local billboardGui = Instance.new("BillboardGui")
					billboardGui.Name = "VyrxisNametag"
					billboardGui.Size = UDim2.new(0, 200, 0, 50)
					billboardGui.StudsOffset = Vector3.new(0, -4, 0)
					billboardGui.Parent = humanoidRootPart
					billboardGui.AlwaysOnTop = true
					billboardGui.LightInfluence = 0

					local textLabel = Instance.new("TextLabel")
					textLabel.Size = UDim2.new(1, 0, 1, 0)
					textLabel.BackgroundTransparency = 1
					textLabel.Text = playerName
					textLabel.TextColor3 = nametagColor
					textLabel.TextSize = nametagSize
					textLabel.Font = Enum.Font.GothamBold
					textLabel.TextStrokeTransparency = 0
					textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
					textLabel.Parent = billboardGui

					return billboardGui
				end

				nameToggle.MouseButton1Click:Connect(function()
					nametagsEnabled = not nametagsEnabled
					nameToggle.Image = nametagsEnabled and "rbxassetid://133008101695657" or "rbxassetid://82936764863537"

					if nametagsEnabled then
						for _, player in pairs(Players:GetPlayers()) do
							if player ~= LocalPlayer and player.Character then
								local nametag = createNametag(player.Character, player.Name)
								nametags[player] = nametag
							end
						end
					else
						for player, nametag in pairs(nametags) do
							if nametag then nametag:Destroy() end
						end
						nametags = {}
					end
				end)

				local sizeBox = createSlider(subFrame, "Nametag Size", 8, 30, savedSettings.nametagSize or 14)
				sizeBox.Changed:Connect(function()
					local val = tonumber(sizeBox.Text)
					if val then
						nametagSize = val
						for player, nametag in pairs(nametags) do
							if nametag and nametag:FindFirstChild("TextLabel") then
								nametag.TextLabel.TextSize = nametagSize
							end
						end
						savedSettings.nametagSize = val
					end
				end)

				Players.PlayerAdded:Connect(function(player)
					if player == LocalPlayer then return end

					player.CharacterAdded:Connect(function(character)
						wait(0.5)

						if isESPEnabled then
							local highlight = createESPHighlight(character)
							if highlight then espHighlights[player] = highlight end

							local healthbar = createHealthbar(character)
							if healthbar then healthbars[player] = healthbar end
						end

						if nametagsEnabled then
							local nametag = createNametag(character, player.Name)
							if nametag then nametags[player] = nametag end
						end
					end)
					
					if player.Character then
						wait(0.5)
						
						if isESPEnabled then
							local highlight = createESPHighlight(player.Character)
							if highlight then espHighlights[player] = highlight end

							local healthbar = createHealthbar(player.Character)
							if healthbar then healthbars[player] = healthbar end
						end

						if nametagsEnabled then
							local nametag = createNametag(player.Character, player.Name)
							if nametag then nametags[player] = nametag end
						end
					end
				end)

				Players.PlayerRemoving:Connect(function(player)
					if espHighlights[player] then
						espHighlights[player]:Destroy()
						espHighlights[player] = nil
					end
					if healthbars[player] then
						healthbars[player]:Destroy()
						healthbars[player] = nil
					end
					if nametags[player] then
						nametags[player]:Destroy()
						nametags[player] = nil
					end
				end)
			end
		end)

		return button
	end

	createButton("FlyButton", "Fly")
	createButton("MeButton", "Me")
	createButton("PlayerButton", "Player")
	createButton("ESPButton", "ESP")

	UserInputService.InputBegan:Connect(function(input, gp)
		if not gp and input.KeyCode == toggleKey then
			mainFrame.Visible = not mainFrame.Visible
		end
	end)

	RunService.Heartbeat:Connect(function()
		local character = LocalPlayer.Character
		if character and character:FindFirstChild("Humanoid") and character:FindFirstChild("HumanoidRootPart") then
			local humanoid = character.Humanoid
			local rootPart = character.HumanoidRootPart
			
			rootPart.CustomPhysicalProperties = PhysicalProperties.new(0.7, 1.0, 0.0, 1.0, 1.0)
		end
	end)
end

task.spawn(function()
	createLoadScreen()
end)

task.wait(9)
createMenu()

print("[Vyrxis] Extended Menu loaded successfully!")
print("[Vyrxis] New Features: Follow Player, Orbit Player, Spin Character, Anti-AFK, Infinite Jump")
