-- ====== ESP SYSTEM KOMPLETT ÜBERARBEITET ======

local player = game.Players.LocalPlayer
local uis = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

local flying = false
local flySpeed = 50
local flyKey = Enum.KeyCode.E
local noclip = false
local bv, bg

-- ====== ESP VARIABLEN - ERWEITERT ======
local espEnabled = false
local espColor = Color3.fromRGB(255, 255, 255)
local espObjects = {}
local espUpdateConnection = nil
local playerConnections = {} -- Für Event-Cleanup

-- ====== ROBUSTES ESP SYSTEM ======
local function createESPForPlayer(targetPlayer)
	if not targetPlayer or targetPlayer == player then 
		return 
	end

	local playerName = targetPlayer.Name
	print("ESP Debug: Attempting to create ESP for " .. playerName)

	-- Cleanup alte ESP-Objekte
	if espObjects[playerName] then
		if espObjects[playerName].highlight and espObjects[playerName].highlight.Parent then
			espObjects[playerName].highlight:Destroy()
		end
		espObjects[playerName] = nil
	end

	-- Warte auf Character mit Timeout
	local character = targetPlayer.Character
	if not character then
		print("ESP Debug: Waiting for character for " .. playerName)
		local startTime = tick()
		repeat
			wait(0.1)
			character = targetPlayer.Character
		until character or tick() - startTime > 10 -- 10 Sekunden Timeout

		if not character then
			print("ESP Debug: Timeout waiting for character for " .. playerName)
			return
		end
	end

	-- Warte auf HumanoidRootPart mit mehreren Versuchen
	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	if not humanoidRootPart then
		print("ESP Debug: Waiting for HumanoidRootPart for " .. playerName)
		local attempts = 0
		while not humanoidRootPart and attempts < 50 do -- 5 Sekunden bei 0.1s pro Versuch
			wait(0.1)
			humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
			attempts = attempts + 1
		end

		if not humanoidRootPart then
			print("ESP Debug: HumanoidRootPart not found for " .. playerName)
			return
		end
	end

	-- Entferne alle existierenden ESP Highlights vom Character
	for _, child in pairs(character:GetChildren()) do
		if child:IsA("Highlight") and (child.Name:find("ESPHighlight") or child.Name == "ESP_Highlight") then
			child:Destroy()
		end
	end

	-- Erstelle neues ESP Highlight
	local espHighlight = Instance.new("Highlight")
	espHighlight.Name = "ESP_Highlight_" .. playerName
	espHighlight.Adornee = character
	espHighlight.FillColor = espColor
	espHighlight.OutlineColor = espColor
	espHighlight.FillTransparency = 0.5
	espHighlight.OutlineTransparency = 0
	espHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
	espHighlight.Parent = character

	-- Speichere ESP-Objekt
	espObjects[playerName] = {
		highlight = espHighlight,
		player = targetPlayer,
		character = character,
		lastUpdate = tick()
	}

	print("ESP Debug: Successfully created ESP for " .. playerName)
	return true
end

local function removeESPForPlayer(targetPlayer)
	local playerName = targetPlayer.Name
	if espObjects[playerName] then
		if espObjects[playerName].highlight and espObjects[playerName].highlight.Parent then
			espObjects[playerName].highlight:Destroy()
		end
		espObjects[playerName] = nil
		print("ESP Debug: Removed ESP for " .. playerName)
	end
end

local function updateESPColors()
	for playerName, espData in pairs(espObjects) do
		if espData.highlight and espData.highlight.Parent then
			espData.highlight.FillColor = espColor
			espData.highlight.OutlineColor = espColor
		end
	end
end

local function cleanupInvalidESP()
	local toRemove = {}
	for playerName, espData in pairs(espObjects) do
		local targetPlayer = game.Players:FindFirstChild(playerName)
		if not targetPlayer or 
		   not targetPlayer.Character or 
		   espData.character ~= targetPlayer.Character or
		   not espData.highlight or
		   not espData.highlight.Parent then
			table.insert(toRemove, playerName)
		end
	end

	for _, playerName in ipairs(toRemove) do
		if espObjects[playerName] and espObjects[playerName].highlight then
			espObjects[playerName].highlight:Destroy()
		end
		espObjects[playerName] = nil
		print("ESP Debug: Cleaned up invalid ESP for " .. playerName)
	end
end

local function enableESPForAllPlayers()
	print("ESP Debug: Enabling ESP for all players")
	
	-- Erstelle ESP für alle aktuellen Spieler
	for _, targetPlayer in pairs(game.Players:GetPlayers()) do
		if targetPlayer ~= player then
			spawn(function()
				createESPForPlayer(targetPlayer)
			end)
		end
	end
end

local function disableESPForAllPlayers()
	print("ESP Debug: Disabling ESP for all players")
	
	-- Entferne alle ESP-Objekte
	for playerName, espData in pairs(espObjects) do
		if espData.highlight then 
			espData.highlight:Destroy() 
		end
	end
	espObjects = {}

	-- Zusätzliche Sicherheit: Entferne alle ESP-Highlights im Spiel
	for _, targetPlayer in pairs(game.Players:GetPlayers()) do
		if targetPlayer.Character then
			for _, child in pairs(targetPlayer.Character:GetChildren()) do
				if child:IsA("Highlight") and (child.Name:find("ESPHighlight") or child.Name:find("ESP_Highlight")) then
					child:Destroy()
				end
			end
		end
	end
end

-- ====== VERBESSERTER ESP UPDATE LOOP ======
local function startESPUpdateLoop()
	if espUpdateConnection then
		espUpdateConnection:Disconnect()
	end

	local lastUpdateTime = 0
	espUpdateConnection = runService.Heartbeat:Connect(function()
		if not espEnabled then return end

		local currentTime = tick()
		
		-- Aktualisiere alle 0.5 Sekunden
		if currentTime - lastUpdateTime >= 0.5 then
			lastUpdateTime = currentTime

			-- Cleanup ungültige ESP-Objekte
			cleanupInvalidESP()

			-- Prüfe jeden Spieler
			for _, targetPlayer in pairs(game.Players:GetPlayers()) do
				if targetPlayer ~= player and targetPlayer.Character then
					local playerName = targetPlayer.Name
					local needsESP = false

					if not espObjects[playerName] then
						needsESP = true
					else
						local espData = espObjects[playerName]
						-- Prüfe ob ESP noch gültig ist
						if not espData.highlight or 
						   not espData.highlight.Parent or
						   espData.character ~= targetPlayer.Character then
							needsESP = true
						end
					end

					if needsESP then
						spawn(function()
							createESPForPlayer(targetPlayer)
						end)
					end
				end
			end
		end
	end)
end

local function stopESPUpdateLoop()
	if espUpdateConnection then
		espUpdateConnection:Disconnect()
		espUpdateConnection = nil
	end
end

-- ====== PLAYER EVENT MANAGEMENT - VERBESSERT ======
local function setupPlayerEvents()
	-- Cleanup alte Connections
	for playerName, connections in pairs(playerConnections) do
		for _, connection in pairs(connections) do
			if connection then connection:Disconnect() end
		end
	end
	playerConnections = {}

	-- Setup Events für alle aktuellen Spieler
	for _, targetPlayer in pairs(game.Players:GetPlayers()) do
		if targetPlayer ~= player then
			local connections = {}

			-- CharacterAdded Event
			connections.characterAdded = targetPlayer.CharacterAdded:Connect(function()
				if espEnabled then
					print("ESP Debug: Character added for " .. targetPlayer.Name)
					wait(1) -- Warte bis Character vollständig geladen ist
					spawn(function()
						createESPForPlayer(targetPlayer)
					end)
				end
			end)

			-- CharacterRemoving Event
			connections.characterRemoving = targetPlayer.CharacterRemoving:Connect(function()
				removeESPForPlayer(targetPlayer)
			end)

			playerConnections[targetPlayer.Name] = connections
		end
	end
end

-- Event für neue Spieler
local newPlayerConnection = game.Players.PlayerAdded:Connect(function(newPlayer)
	-- Setup Events für neuen Spieler
	local connections = {}

	connections.characterAdded = newPlayer.CharacterAdded:Connect(function()
		if espEnabled then
			print("ESP Debug: New player character added: " .. newPlayer.Name)
			wait(1)
			spawn(function()
				createESPForPlayer(newPlayer)
			end)
		end
	end)

	connections.characterRemoving = newPlayer.CharacterRemoving:Connect(function()
		removeESPForPlayer(newPlayer)
	end)

	playerConnections[newPlayer.Name] = connections

	-- Erstelle sofort ESP falls bereits aktiviert
	if espEnabled and newPlayer.Character then
		spawn(function()
			wait(1)
			createESPForPlayer(newPlayer)
		end)
	end
end)

-- Event für verlassende Spieler
local playerLeavingConnection = game.Players.PlayerRemoving:Connect(function(leavingPlayer)
	-- Cleanup ESP
	removeESPForPlayer(leavingPlayer)
	
	-- Cleanup Connections
	if playerConnections[leavingPlayer.Name] then
		for _, connection in pairs(playerConnections[leavingPlayer.Name]) do
			if connection then connection:Disconnect() end
		end
		playerConnections[leavingPlayer.Name] = nil
	end
end)

-- Setup Events beim Start
setupPlayerEvents()

-- ====== REST DES URSPRÜNGLICHEN CODES (unverändert bis zur ESP Button Functionality) ======

-- ====== Farben ======
local primaryDark = Color3.fromRGB(30,30,30)
local primaryMedium = Color3.fromRGB(50,50,50)
local primaryLight = Color3.fromRGB(70,70,70)
local secondary = Color3.fromRGB(128,0,255)
local textColor = Color3.fromRGB(255,255,255)

-- ====== GUI erstellen ======
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TabletGUI"
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0,400,0,300)
mainFrame.Position = UDim2.new(0.3,0,0.3,0)
mainFrame.BackgroundColor3 = primaryMedium
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0,12)

local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1,0,0,30)
topBar.BackgroundColor3 = primaryLight
topBar.Parent = mainFrame
Instance.new("UICorner", topBar).CornerRadius = UDim.new(0,12)

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1,0,1,0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Tablet Menu"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 18
titleLabel.TextColor3 = textColor
titleLabel.Parent = topBar

-- [Dragging Code bleibt unverändert...]
local dragging, dragInput, mousePos, framePos = false, nil, nil, nil
topBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		mousePos = input.Position
		framePos = mainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
topBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)
uis.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - mousePos
		mainFrame.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
	end
end)

-- [Rest der GUI Creation Code...]
local leftScroll = Instance.new("ScrollingFrame")
leftScroll.Size = UDim2.new(0,150,1,-30)
leftScroll.Position = UDim2.new(0,0,0,30)
leftScroll.BackgroundColor3 = primaryDark
leftScroll.ScrollBarThickness = 6
leftScroll.Parent = mainFrame
Instance.new("UICorner", leftScroll).CornerRadius = UDim.new(0,8)

local espScroll = Instance.new("ScrollingFrame")
espScroll.Size = UDim2.new(0,240,1,-30)
espScroll.Position = UDim2.new(1,0,0,30)
espScroll.BackgroundColor3 = primaryMedium
espScroll.ScrollBarThickness = 6
espScroll.Visible = false
espScroll.CanvasSize = UDim2.new(0,0,0,800)
espScroll.Parent = mainFrame
Instance.new("UICorner", espScroll).CornerRadius = UDim.new(0,8)

local espButton = Instance.new("TextButton")
espButton.Text = "ESP Settings"
espButton.Size = UDim2.new(1,-10,0,50)
espButton.BackgroundColor3 = primaryMedium
espButton.TextColor3 = textColor
espButton.Parent = leftScroll
Instance.new("UICorner", espButton).CornerRadius = UDim.new(0,6)

-- ====== ESP PLAYER BUTTON - VERBESSERT ======
local espPlayerButton = Instance.new("TextButton")
espPlayerButton.Text = "ESP Player: Off"
espPlayerButton.Size = UDim2.new(0,220,0,30)
espPlayerButton.Position = UDim2.new(0,10,0,10)
espPlayerButton.BackgroundColor3 = primaryMedium
espPlayerButton.TextColor3 = textColor
espPlayerButton.Font = Enum.Font.Gotham
espPlayerButton.TextSize = 14
espPlayerButton.Parent = espScroll
Instance.new("UICorner", espPlayerButton).CornerRadius = UDim.new(0,6)

-- ====== ESP BUTTON FUNKTIONALITÄT - KOMPLETT NEU ======
espPlayerButton.MouseButton1Click:Connect(function()
	espEnabled = not espEnabled
	
	if espEnabled then
		espPlayerButton.Text = "ESP Player: On"
		espPlayerButton.BackgroundColor3 = secondary
		print("ESP Debug: ESP enabled - starting systems")
		
		-- Starte alle ESP-Systeme
		enableESPForAllPlayers()
		startESPUpdateLoop()
		
	else
		espPlayerButton.Text = "ESP Player: Off"
		espPlayerButton.BackgroundColor3 = primaryMedium
		print("ESP Debug: ESP disabled - stopping systems")
		
		-- Stoppe alle ESP-Systeme
		stopESPUpdateLoop()
		disableESPForAllPlayers()
	end
end)

-- ====== ESP COLOR PICKER (bleibt größtenteils unverändert) ======
local espColorLabel = Instance.new("TextLabel")
espColorLabel.Size = UDim2.new(0,200,0,20)
espColorLabel.Position = UDim2.new(0,10,0,60)
espColorLabel.BackgroundTransparency = 1
espColorLabel.TextColor3 = textColor
espColorLabel.TextXAlignment = Enum.TextXAlignment.Left
espColorLabel.Text = "ESP Color:"
espColorLabel.Font = Enum.Font.Gotham
espColorLabel.TextSize = 12
espColorLabel.Parent = espScroll

local espColorBox = Instance.new("TextButton")
espColorBox.Size = UDim2.new(0,200,0,30)
espColorBox.Position = UDim2.new(0,10,0,80)
espColorBox.BackgroundColor3 = espColor
espColorBox.Text = ""
espColorBox.BorderSizePixel = 2
espColorBox.BorderColor3 = Color3.fromRGB(100,100,100)
espColorBox.Parent = espScroll
Instance.new("UICorner", espColorBox).CornerRadius = UDim.new(0,6)

local espPickerOpen = false
local espPickerFrame

local espColors = {
	Color3.fromRGB(255,255,255), Color3.fromRGB(255,0,0), Color3.fromRGB(0,255,0),
	Color3.fromRGB(0,0,255), Color3.fromRGB(255,255,0), Color3.fromRGB(255,0,255),
	Color3.fromRGB(0,255,255), Color3.fromRGB(255,128,0), Color3.fromRGB(128,0,255),
	Color3.fromRGB(255,192,203), Color3.fromRGB(128,128,128), Color3.fromRGB(64,64,64),
	Color3.fromRGB(255,69,0), Color3.fromRGB(50,205,50), Color3.fromRGB(30,144,255)
}

espColorBox.MouseButton1Click:Connect(function()
	if espPickerOpen then
		if espPickerFrame then espPickerFrame:Destroy() end
		espPickerOpen = false
		return
	end

	espPickerOpen = true
	espPickerFrame = Instance.new("Frame")
	espPickerFrame.Size = UDim2.new(0,200,0,160)
	espPickerFrame.Position = UDim2.new(0,10,0,120)
	espPickerFrame.BackgroundColor3 = primaryDark
	espPickerFrame.BorderSizePixel = 1
	espPickerFrame.BorderColor3 = Color3.fromRGB(100,100,100)
	espPickerFrame.Parent = espScroll
	Instance.new("UICorner", espPickerFrame).CornerRadius = UDim.new(0,8)

	-- Close Button
	local espCloseBtn = Instance.new("TextButton")
	espCloseBtn.Size = UDim2.new(0,20,0,20)
	espCloseBtn.Position = UDim2.new(1,-25,0,5)
	espCloseBtn.BackgroundColor3 = Color3.fromRGB(255,0,0)
	espCloseBtn.Text = "X"
	espCloseBtn.TextColor3 = Color3.fromRGB(255,255,255)
	espCloseBtn.Font = Enum.Font.GothamBold
	espCloseBtn.TextSize = 12
	espCloseBtn.Parent = espPickerFrame
	Instance.new("UICorner", espCloseBtn).CornerRadius = UDim.new(0,4)

	espCloseBtn.MouseButton1Click:Connect(function()
		espPickerFrame:Destroy()
		espPickerOpen = false
	end)

	-- Color Buttons
	for i, c in ipairs(espColors) do
		local colorBtn = Instance.new("TextButton")
		colorBtn.Size = UDim2.new(0,30,0,30)
		colorBtn.Position = UDim2.new(0, 5 + ((i-1)%5)*35, 0, 30 + math.floor((i-1)/5)*35)
		colorBtn.BackgroundColor3 = c
		colorBtn.Text = ""
		colorBtn.BorderSizePixel = 1
		colorBtn.BorderColor3 = Color3.fromRGB(200,200,200)
		colorBtn.Parent = espPickerFrame
		Instance.new("UICorner", colorBtn).CornerRadius = UDim.new(0,4)

		colorBtn.MouseButton1Click:Connect(function()
			espColor = c
			espColorBox.BackgroundColor3 = c
			if espEnabled then
				updateESPColors()
			end
			espPickerFrame:Destroy()
			espPickerOpen = false
		end)
	end

	espScroll.CanvasSize = UDim2.new(0,0,0,300)
end)

-- ====== TOGGLE FUNCTION ======
local function toggleScrollingFrame(frame)
	frame.Visible = not frame.Visible
	frame.Position = frame.Visible and UDim2.new(0.38,0,0,30) or UDim2.new(1,0,0,30)
end

espButton.MouseButton1Click:Connect(function() 
	toggleScrollingFrame(espScroll) 
end)

-- ====== CLEANUP BEI SCRIPT BEENDIGUNG ======
game:GetService("Players").LocalPlayer.PlayerGui.ChildRemoved:Connect(function(child)
	if child == screenGui then
		-- Cleanup alle Connections
		if newPlayerConnection then newPlayerConnection:Disconnect() end
		if playerLeavingConnection then playerLeavingConnection:Disconnect() end
		stopESPUpdateLoop()
		disableESPForAllPlayers()
		
		for playerName, connections in pairs(playerConnections) do
			for _, connection in pairs(connections) do
				if connection then connection:Disconnect() end
			end
		end
	end
end)
