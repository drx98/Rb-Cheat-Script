local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Mouse = LocalPlayer:GetMouse()

-- Globale Variablen
local VyrxisGui = nil
local MainFrame = nil
local MainRahmen = nil
local SettingsFrame = nil
local Liste = nil
local ContentFrame = nil
local currentCategoryFrame = nil
local loadScreenShown = false

-- Settings
local settings = {
    menuKey = Enum.KeyCode.Insert,
    flyEnabled = false,
    flySpeed = 50,
    walkSpeed = 16,
    jumpHeight = 50,
    noclipEnabled = false,
    espEnabled = false,
    espColor = Color3.fromRGB(255, 0, 0),
    espTransparency = 0.5,
    nametagsEnabled = false,
    nametagColor = Color3.fromRGB(255, 255, 255),
    nametagSize = 20,
    selectedPlayer = nil
}

-- States
local flyConnection = nil
local noclipConnection = nil
local espObjects = {}
local nametagObjects = {}
local viewConnection = nil
local viewingPlayer = false

-- Design Constants
local COLORS = {
    BACKGROUND = Color3.fromRGB(25, 25, 30),
    SURFACE = Color3.fromRGB(35, 35, 42),
    SURFACE_LIGHT = Color3.fromRGB(45, 45, 55),
    PRIMARY = Color3.fromRGB(88, 101, 242),
    PRIMARY_HOVER = Color3.fromRGB(78, 91, 232),
    SUCCESS = Color3.fromRGB(87, 242, 135),
    DANGER = Color3.fromRGB(237, 66, 69),
    WARNING = Color3.fromRGB(255, 193, 7),
    TEXT_PRIMARY = Color3.fromRGB(255, 255, 255),
    TEXT_SECONDARY = Color3.fromRGB(185, 187, 190),
    TEXT_MUTED = Color3.fromRGB(114, 118, 125),
    ACCENT = Color3.fromRGB(64, 224, 208),
    BORDER = Color3.fromRGB(60, 63, 65)
}

-- Utility Functions
local function createTween(object, info, properties)
    local tween = TweenService:Create(object, info, properties)
    tween:Play()
    return tween
end

local function round(num, places)
    local mult = 10^(places or 0)
    return math.floor(num * mult + 0.5) / mult
end

local function createCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 8)
    corner.Parent = parent
    return corner
end

local function createStroke(parent, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or COLORS.BORDER
    stroke.Thickness = thickness or 1
    stroke.Parent = parent
    return stroke
end

local function createShadow(parent)
    local shadow = Instance.new("Frame")
    shadow.Name = "Shadow"
    shadow.Size = UDim2.new(1, 8, 1, 8)
    shadow.Position = UDim2.new(0, -4, 0, -4)
    shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    shadow.BackgroundTransparency = 0.8
    shadow.BorderSizePixel = 0
    shadow.ZIndex = parent.ZIndex - 1
    shadow.Parent = parent.Parent
    
    createCorner(shadow, 12)
    return shadow
end

-- Load Screen
local function createLoadScreen()
    if loadScreenShown then return end
    loadScreenShown = true
    
    local loadGui = Instance.new("ScreenGui")
    loadGui.Name = "VyrxisLoadScreen"
    loadGui.Parent = PlayerGui
    loadGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    local loadFrame = Instance.new("Frame")
    loadFrame.Size = UDim2.new(1, 0, 1, 0)
    loadFrame.Position = UDim2.new(0, 0, 0, 0)
    loadFrame.BackgroundTransparency = 1  -- Komplett transparent
    loadFrame.Parent = loadGui
    
    local loadContainer = Instance.new("Frame")
    loadContainer.Size = UDim2.new(0, 500, 0, 300)
    loadContainer.Position = UDim2.new(0.5, -250, 0.5, -150)
    loadContainer.BackgroundColor3 = COLORS.BACKGROUND
    loadContainer.BorderSizePixel = 0
    loadContainer.Parent = loadFrame
    
    createCorner(loadContainer, 16)
    createStroke(loadContainer, COLORS.ACCENT, 2)
    
    local logo = Instance.new("TextLabel")
    logo.Size = UDim2.new(1, -40, 0, 80)
    logo.Position = UDim2.new(0, 20, 0, 40)
    logo.BackgroundTransparency = 1
    logo.Text = "VYRXIS"
    logo.TextColor3 = COLORS.ACCENT
    logo.TextScaled = true
    logo.Font = Enum.Font.GothamBold
    logo.Parent = loadContainer
    
    local subtitle = Instance.new("TextLabel")
    subtitle.Size = UDim2.new(1, -40, 0, 30)
    subtitle.Position = UDim2.new(0, 20, 0, 120)
    subtitle.BackgroundTransparency = 1
    subtitle.Text = "Advanced Game Enhancement Suite"
    subtitle.TextColor3 = COLORS.TEXT_SECONDARY
    subtitle.TextScaled = true
    subtitle.Font = Enum.Font.Gotham
    subtitle.Parent = loadContainer
    
    local statusText = Instance.new("TextLabel")
    statusText.Size = UDim2.new(1, -40, 0, 25)
    statusText.Position = UDim2.new(0, 20, 0, 180)
    statusText.BackgroundTransparency = 1
    statusText.Text = "Initializing components..."
    statusText.TextColor3 = COLORS.TEXT_MUTED
    statusText.TextScaled = true
    statusText.Font = Enum.Font.Gotham
    statusText.Parent = loadContainer
    
    -- Progress Bar
    local progressBg = Instance.new("Frame")
    progressBg.Size = UDim2.new(1, -40, 0, 6)
    progressBg.Position = UDim2.new(0, 20, 0, 220)
    progressBg.BackgroundColor3 = COLORS.SURFACE
    progressBg.BorderSizePixel = 0
    progressBg.Parent = loadContainer
    createCorner(progressBg, 3)
    
    local progressBar = Instance.new("Frame")
    progressBar.Size = UDim2.new(0, 0, 1, 0)
    progressBar.Position = UDim2.new(0, 0, 0, 0)
    progressBar.BackgroundColor3 = COLORS.ACCENT
    progressBar.BorderSizePixel = 0
    progressBar.Parent = progressBg
    createCorner(progressBar, 3)
    
    -- Animated effects
    for i = 1, 6 do
        local particle = Instance.new("Frame")
        particle.Size = UDim2.new(0, 8, 0, 8)
        particle.BackgroundColor3 = COLORS.ACCENT
        particle.BackgroundTransparency = 0.5
        particle.BorderSizePixel = 0
        particle.Position = UDim2.new(math.random(10, 90)/100, 0, math.random(10, 90)/100, 0)
        particle.Parent = loadFrame
        createCorner(particle, 4)
        
        -- Floating animation
        spawn(function()
            while particle.Parent do
                createTween(particle, TweenInfo.new(2 + math.random()/2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
                    Position = UDim2.new(math.random(10, 90)/100, 0, math.random(10, 90)/100, 0),
                    BackgroundTransparency = 0.2 + math.random() * 0.6
                })
                wait(2 + math.random())
            end
        end)
    end
    
    -- Loading sequence
    local loadingSteps = {
        "Loading user interface...",
        "Connecting to game services...",
        "Initializing features...",
        "Preparing environment...",
        "Starting Vyrxis Menu..."
    }
    
    spawn(function()
        for i, step in ipairs(loadingSteps) do
            statusText.Text = step
            createTween(progressBar, TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
                Size = UDim2.new(i / #loadingSteps, 0, 1, 0)
            })
            wait(0.8)
        end
        
        wait(0.5)
        createTween(loadFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
            BackgroundTransparency = 1
        })
        createTween(loadContainer, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            Size = UDim2.new(0, 0, 0, 0)
        })
        
        wait(0.5)
        loadGui:Destroy()
    end)
end

-- Enhanced UI Creation
local function createMainUI()
    VyrxisGui = Instance.new("ScreenGui")
    VyrxisGui.Name = "VyrxisMenu"
    VyrxisGui.Parent = PlayerGui
    VyrxisGui.ResetOnSpawn = false
    VyrxisGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- MainRahmen (Title Bar)
    MainRahmen = Instance.new("Frame")
    MainRahmen.Name = "MainRahmen"
    MainRahmen.Size = UDim2.new(0, 800, 0, 50)
    MainRahmen.Position = UDim2.new(0.5, -400, 0.5, -250)
    MainRahmen.BackgroundColor3 = COLORS.SURFACE
    MainRahmen.BorderSizePixel = 0
    MainRahmen.ZIndex = 10
    MainRahmen.Parent = VyrxisGui
    
    createCorner(MainRahmen, 12)
    createStroke(MainRahmen, COLORS.ACCENT, 2)
    createShadow(MainRahmen)
    
    -- Title with icon
    local titleContainer = Instance.new("Frame")
    titleContainer.Size = UDim2.new(0, 300, 1, 0)
    titleContainer.Position = UDim2.new(0, 15, 0, 0)
    titleContainer.BackgroundTransparency = 1
    titleContainer.Parent = MainRahmen
    
    local icon = Instance.new("TextLabel")
    icon.Size = UDim2.new(0, 30, 0, 30)
    icon.Position = UDim2.new(0, 0, 0, 10)
    icon.BackgroundTransparency = 1
    icon.Text = "⚡"
    icon.TextColor3 = COLORS.ACCENT
    icon.TextScaled = true
    icon.Font = Enum.Font.GothamBold
    icon.Parent = titleContainer
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0, 200, 1, 0)
    title.Position = UDim2.new(0, 40, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "Vyrxis Menu"
    title.TextColor3 = COLORS.TEXT_PRIMARY
    title.TextScaled = true
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = titleContainer
    
    local version = Instance.new("TextLabel")
    version.Size = UDim2.new(0, 60, 0, 15)
    version.Position = UDim2.new(0, 240, 0, 18)
    version.BackgroundTransparency = 1
    version.Text = "v2.0"
    version.TextColor3 = COLORS.TEXT_MUTED
    version.TextScaled = true
    version.Font = Enum.Font.Gotham
    version.Parent = titleContainer
    
    -- Control buttons
    local controlsContainer = Instance.new("Frame")
    controlsContainer.Size = UDim2.new(0, 150, 1, 0)
    controlsContainer.Position = UDim2.new(1, -165, 0, 0)
    controlsContainer.BackgroundTransparency = 1
    controlsContainer.Parent = MainRahmen
    
    local minimizeBtn = Instance.new("TextButton")
    minimizeBtn.Size = UDim2.new(0, 35, 0, 35)
    minimizeBtn.Position = UDim2.new(0, 0, 0, 7.5)
    minimizeBtn.BackgroundColor3 = COLORS.SURFACE_LIGHT
    minimizeBtn.Text = "−"
    minimizeBtn.TextColor3 = COLORS.TEXT_PRIMARY
    minimizeBtn.TextScaled = true
    minimizeBtn.Font = Enum.Font.GothamBold
    minimizeBtn.BorderSizePixel = 0
    minimizeBtn.Parent = controlsContainer
    createCorner(minimizeBtn, 6)
    createStroke(minimizeBtn, COLORS.BORDER)
    
    local settingsBtn = Instance.new("TextButton")
    settingsBtn.Size = UDim2.new(0, 80, 0, 35)
    settingsBtn.Position = UDim2.new(0, 45, 0, 7.5)
    settingsBtn.BackgroundColor3 = COLORS.PRIMARY
    settingsBtn.Text = "Settings"
    settingsBtn.TextColor3 = COLORS.TEXT_PRIMARY
    settingsBtn.TextScaled = true
    settingsBtn.Font = Enum.Font.GothamSemibold
    settingsBtn.BorderSizePixel = 0
    settingsBtn.Parent = controlsContainer
    createCorner(settingsBtn, 6)
    
    -- MainFrame (Content Area)
    MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 800, 0, 450)
    MainFrame.Position = UDim2.new(0, 0, 1, 5)
    MainFrame.BackgroundColor3 = COLORS.BACKGROUND
    MainFrame.BorderSizePixel = 0
    MainFrame.ZIndex = 9
    MainFrame.Parent = MainRahmen
    
    createCorner(MainFrame, 12)
    createStroke(MainFrame, COLORS.BORDER)
    createShadow(MainFrame)
    
    -- Sidebar (Categories)
    Liste = Instance.new("ScrollingFrame")
    Liste.Name = "Liste"
    Liste.Size = UDim2.new(0, 200, 1, -20)
    Liste.Position = UDim2.new(0, 10, 0, 10)
    Liste.BackgroundColor3 = COLORS.SURFACE
    Liste.BorderSizePixel = 0
    Liste.ScrollBarThickness = 6
    Liste.ScrollBarImageColor3 = COLORS.ACCENT
    Liste.CanvasSize = UDim2.new(0, 0, 0, 0)
    Liste.Parent = MainFrame
    
    createCorner(Liste, 8)
    createStroke(Liste, COLORS.BORDER)
    
    local listeLayout = Instance.new("UIListLayout")
    listeLayout.Padding = UDim.new(0, 8)
    listeLayout.Parent = Liste
    
    local listePadding = Instance.new("UIPadding")
    listePadding.PaddingTop = UDim.new(0, 10)
    listePadding.PaddingBottom = UDim.new(0, 10)
    listePadding.PaddingLeft = UDim.new(0, 10)
    listePadding.PaddingRight = UDim.new(0, 10)
    listePadding.Parent = Liste
    
    -- Content Frame
    ContentFrame = Instance.new("Frame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.Size = UDim2.new(0, 570, 1, -20)
    ContentFrame.Position = UDim2.new(0, 220, 0, 10)
    ContentFrame.BackgroundColor3 = COLORS.SURFACE
    ContentFrame.BorderSizePixel = 0
    ContentFrame.Parent = MainFrame
    
    createCorner(ContentFrame, 8)
    createStroke(ContentFrame, COLORS.BORDER)
    
    -- Welcome message
    local welcomeText = Instance.new("TextLabel")
    welcomeText.Size = UDim2.new(1, -40, 0, 100)
    welcomeText.Position = UDim2.new(0, 20, 0, 20)
    welcomeText.BackgroundTransparency = 1
    welcomeText.Text = "Welcome to Vyrxis Menu\nSelect a category to get started"
    welcomeText.TextColor3 = COLORS.TEXT_SECONDARY
    welcomeText.TextScaled = true
    welcomeText.Font = Enum.Font.Gotham
    welcomeText.Parent = ContentFrame
    
    -- Button hover effects
    minimizeBtn.MouseEnter:Connect(function()
        createTween(minimizeBtn, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = COLORS.DANGER})
    end)
    minimizeBtn.MouseLeave:Connect(function()
        createTween(minimizeBtn, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = COLORS.SURFACE_LIGHT})
    end)
    
    settingsBtn.MouseEnter:Connect(function()
        createTween(settingsBtn, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = COLORS.PRIMARY_HOVER})
    end)
    settingsBtn.MouseLeave:Connect(function()
        createTween(settingsBtn, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = COLORS.PRIMARY})
    end)
    
    -- Drag functionality
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    MainRahmen.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainRahmen.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            MainRahmen.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Minimize functionality
    minimizeBtn.MouseButton1Click:Connect(function()
        if MainFrame.Visible then
            createTween(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
                Size = UDim2.new(0, 800, 0, 0)
            })
            wait(0.3)
            MainFrame.Visible = false
        else
            MainFrame.Visible = true
            MainFrame.Size = UDim2.new(0, 800, 0, 0)
            createTween(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
                Size = UDim2.new(0, 800, 0, 450)
            })
        end
    end)
    
    -- Settings functionality
    settingsBtn.MouseButton1Click:Connect(function()
        if SettingsFrame then
            SettingsFrame.Visible = true
        end
    end)
end

-- Enhanced Settings Frame
local function createSettingsFrame()
    SettingsFrame = Instance.new("Frame")
    SettingsFrame.Name = "SettingsFrame"
    SettingsFrame.Size = UDim2.new(0, 400, 0, 300)
    SettingsFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    SettingsFrame.BackgroundColor3 = COLORS.BACKGROUND
    SettingsFrame.BorderSizePixel = 0
    SettingsFrame.Visible = false
    SettingsFrame.ZIndex = 20
    SettingsFrame.Parent = VyrxisGui
    
    createCorner(SettingsFrame, 12)
    createStroke(SettingsFrame, COLORS.ACCENT, 2)
    createShadow(SettingsFrame)
    
    -- Header
    local header = Instance.new("Frame")
    header.Size = UDim2.new(1, 0, 0, 60)
    header.Position = UDim2.new(0, 0, 0, 0)
    header.BackgroundColor3 = COLORS.SURFACE
    header.BorderSizePixel = 0
    header.Parent = SettingsFrame
    createCorner(header, 12)
    
    local headerTitle = Instance.new("TextLabel")
    headerTitle.Size = UDim2.new(1, -60, 1, 0)
    headerTitle.Position = UDim2.new(0, 20, 0, 0)
    headerTitle.BackgroundTransparency = 1
    headerTitle.Text = "Settings"
    headerTitle.TextColor3 = COLORS.TEXT_PRIMARY
    headerTitle.TextScaled = true
    headerTitle.Font = Enum.Font.GothamBold
    headerTitle.TextXAlignment = Enum.TextXAlignment.Left
    headerTitle.Parent = header
    
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, 35, 0, 35)
    closeBtn.Position = UDim2.new(1, -50, 0, 12.5)
    closeBtn.BackgroundColor3 = COLORS.DANGER
    closeBtn.Text = "✕"
    closeBtn.TextColor3 = COLORS.TEXT_PRIMARY
    closeBtn.TextScaled = true
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.BorderSizePixel = 0
    closeBtn.Parent = header
    createCorner(closeBtn, 6)
    
    -- Content
    local content = Instance.new("Frame")
    content.Size = UDim2.new(1, -40, 1, -100)
    content.Position = UDim2.new(0, 20, 0, 80)
    content.BackgroundTransparency = 1
    content.Parent = SettingsFrame
    
    local keybindLabel = Instance.new("TextLabel")
    keybindLabel.Size = UDim2.new(1, 0, 0, 30)
    keybindLabel.Position = UDim2.new(0, 0, 0, 0)
    keybindLabel.BackgroundTransparency = 1
    keybindLabel.Text = "Toggle Key: " .. settings.menuKey.Name
    keybindLabel.TextColor3 = COLORS.TEXT_PRIMARY
    keybindLabel.TextScaled = true
    keybindLabel.Font = Enum.Font.GothamSemibold
    keybindLabel.TextXAlignment = Enum.TextXAlignment.Left
    keybindLabel.Parent = content
    
    local keybindBtn = Instance.new("TextButton")
    keybindBtn.Size = UDim2.new(0, 150, 0, 40)
    keybindBtn.Position = UDim2.new(0, 0, 0, 40)
    keybindBtn.BackgroundColor3 = COLORS.PRIMARY
    keybindBtn.Text = "Change Key"
    keybindBtn.TextColor3 = COLORS.TEXT_PRIMARY
    keybindBtn.TextScaled = true
    keybindBtn.Font = Enum.Font.GothamSemibold
    keybindBtn.BorderSizePixel = 0
    keybindBtn.Parent = content
    createCorner(keybindBtn, 8)
    
    -- Button events
    closeBtn.MouseButton1Click:Connect(function()
        SettingsFrame.Visible = false
    end)
    
    keybindBtn.MouseButton1Click:Connect(function()
        keybindBtn.Text = "Press any key..."
        keybindBtn.BackgroundColor3 = COLORS.WARNING
        local connection
        connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed and input.UserInputType == Enum.UserInputType.Keyboard then
                settings.menuKey = input.KeyCode
                keybindLabel.Text = "Toggle Key: " .. settings.menuKey.Name
                keybindBtn.Text = "Change Key"
                keybindBtn.BackgroundColor3 = COLORS.PRIMARY
                connection:Disconnect()
            end
        end)
    end)
end

-- Enhanced UI Elements
local function createModernButton(parent, text, callback, style)
    style = style or "default"
    
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -20, 0, 45)
    btn.BackgroundColor3 = style == "success" and COLORS.SUCCESS or 
                          style == "danger" and COLORS.DANGER or 
                          style == "primary" and COLORS.PRIMARY or
                          COLORS.SURFACE_LIGHT
    btn.Text = ""
    btn.BorderSizePixel = 0
    btn.AutoButtonColor = false  -- Schnellere Reaktion
    btn.Parent = parent
    
    createCorner(btn, 8)
    createStroke(btn, COLORS.BORDER)
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -20, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = COLORS.TEXT_PRIMARY
    label.TextScaled = true
    label.Font = Enum.Font.GothamSemibold
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = btn
    
    local indicator = Instance.new("Frame")
    indicator.Size = UDim2.new(0, 8, 0, 8)
    indicator.Position = UDim2.new(1, -20, 0.5, -4)
    indicator.BackgroundColor3 = COLORS.DANGER
    indicator.BorderSizePixel = 0
    indicator.Parent = btn
    createCorner(indicator, 4)
    
    -- Sofortige Hover-Effekte
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = Color3.new(
            math.min(1, btn.BackgroundColor3.R + 0.1),
            math.min(1, btn.BackgroundColor3.G + 0.1),
            math.min(1, btn.BackgroundColor3.B + 0.1)
        )
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = style == "success" and COLORS.SUCCESS or 
                              style == "danger" and COLORS.DANGER or 
                              style == "primary" and COLORS.PRIMARY or
                              COLORS.SURFACE_LIGHT
    end)
    
    if callback then
        btn.MouseButton1Click:Connect(function()
            callback()
        end)
    end
    
    return btn, label, indicator
end

local function createModernSlider(parent, text, min, max, current, callback)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, -20, 0, 80)
    container.BackgroundTransparency = 1
    container.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 25)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text .. ": " .. current
    label.TextColor3 = COLORS.TEXT_PRIMARY
    label.TextScaled = true
    label.Font = Enum.Font.GothamSemibold
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container
    
    local sliderBg = Instance.new("Frame")
    sliderBg.Size = UDim2.new(1, 0, 0, 25)
    sliderBg.Position = UDim2.new(0, 0, 0, 35)
    sliderBg.BackgroundColor3 = COLORS.SURFACE
    sliderBg.BorderSizePixel = 0
    sliderBg.Parent = container
    createCorner(sliderBg, 12)
    createStroke(sliderBg, COLORS.BORDER)
    
    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((current - min) / (max - min), 0, 1, 0)
    sliderFill.Position = UDim2.new(0, 0, 0, 0)
    sliderFill.BackgroundColor3 = COLORS.ACCENT
    sliderFill.BorderSizePixel = 0
    sliderFill.Parent = sliderBg
    createCorner(sliderFill, 12)
    
    local handle = Instance.new("Frame")
    handle.Size = UDim2.new(0, 20, 0, 30)
    handle.Position = UDim2.new((current - min) / (max - min), -10, 0, -2.5)
    handle.BackgroundColor3 = COLORS.TEXT_PRIMARY
    handle.BorderSizePixel = 0
    handle.Parent = sliderBg
    createCorner(handle, 10)
    createStroke(handle, COLORS.ACCENT, 2)
    
    local dragging = false
    
    sliderBg.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local pos = math.clamp((Mouse.X - sliderBg.AbsolutePosition.X) / sliderBg.AbsoluteSize.X, 0, 1)
            local value = min + (max - min) * pos
            
            sliderFill.Size = UDim2.new(pos, 0, 1, 0)
            handle.Position = UDim2.new(pos, -10, 0, -2.5)
            label.Text = text .. ": " .. round(value, 1)
            callback(value)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    return container
end

local function createModernColorPicker(parent, text, currentColor, callback)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, -20, 0, 60)
    container.BackgroundTransparency = 1
    container.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 120, 0, 25)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text .. ":"
    label.TextColor3 = COLORS.TEXT_PRIMARY
    label.TextScaled = true
    label.Font = Enum.Font.GothamSemibold
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container
    
    local colors = {
        {Color3.fromRGB(255, 92, 92), "Red"},
        {Color3.fromRGB(92, 255, 92), "Green"},
        {Color3.fromRGB(92, 92, 255), "Blue"},
        {Color3.fromRGB(255, 255, 92), "Yellow"},
        {Color3.fromRGB(255, 92, 255), "Magenta"},
        {Color3.fromRGB(92, 255, 255), "Cyan"},
        {Color3.fromRGB(255, 255, 255), "White"},
        {Color3.fromRGB(50, 50, 50), "Black"}
    }
    
    for i, colorData in ipairs(colors) do
        local colorBtn = Instance.new("TextButton")
        colorBtn.Size = UDim2.new(0, 35, 0, 35)
        colorBtn.Position = UDim2.new(0, 130 + (i-1) * 42, 0, 15)
        colorBtn.BackgroundColor3 = colorData[1]
        colorBtn.Text = ""
        colorBtn.BorderSizePixel = 0
        colorBtn.Parent = container
        
        createCorner(colorBtn, 6)
        
        local selected = Instance.new("Frame")
        selected.Size = UDim2.new(1, 8, 1, 8)
        selected.Position = UDim2.new(0, -4, 0, -4)
        selected.BackgroundTransparency = 1
        selected.BorderSizePixel = 0
        selected.Parent = colorBtn
        createCorner(selected, 8)
        createStroke(selected, COLORS.ACCENT, 3)
        
        selected.Visible = currentColor == colorData[1]
        
        colorBtn.MouseButton1Click:Connect(function()
            for _, child in ipairs(container:GetChildren()) do
                if child:IsA("TextButton") and child ~= colorBtn then
                    child.Frame.Visible = false
                end
            end
            selected.Visible = true
            callback(colorData[1])
        end)
    end
    
    return container
end

-- Category System
local function closeCategoryFrame()
    if currentCategoryFrame then
        currentCategoryFrame:Destroy()
        currentCategoryFrame = nil
    end
end

local function createCategoryFrame(name)
    closeCategoryFrame()
    
    currentCategoryFrame = Instance.new("ScrollingFrame")
    currentCategoryFrame.Name = name .. "Frame"
    currentCategoryFrame.Size = UDim2.new(1, -20, 1, -20)
    currentCategoryFrame.Position = UDim2.new(0, 10, 0, 10)
    currentCategoryFrame.BackgroundTransparency = 1
    currentCategoryFrame.BorderSizePixel = 0
    currentCategoryFrame.ScrollBarThickness = 6
    currentCategoryFrame.ScrollBarImageColor3 = COLORS.ACCENT
    currentCategoryFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    currentCategoryFrame.Parent = ContentFrame
    
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 15)
    layout.Parent = currentCategoryFrame
    
    local padding = Instance.new("UIPadding")
    padding.PaddingTop = UDim.new(0, 10)
    padding.PaddingBottom = UDim.new(0, 10)
    padding.PaddingLeft = UDim.new(0, 10)
    padding.PaddingRight = UDim.new(0, 20)
    padding.Parent = currentCategoryFrame
    
    -- Category title
    local categoryTitle = Instance.new("TextLabel")
    categoryTitle.Size = UDim2.new(1, -20, 0, 40)
    categoryTitle.BackgroundTransparency = 1
    categoryTitle.Text = name .. " Settings"
    categoryTitle.TextColor3 = COLORS.ACCENT
    categoryTitle.TextScaled = true
    categoryTitle.Font = Enum.Font.GothamBold
    categoryTitle.TextXAlignment = Enum.TextXAlignment.Left
    categoryTitle.Parent = currentCategoryFrame
    
    return currentCategoryFrame
end

local function createCategoryButton(name, callback, icon)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -20, 0, 50)
    btn.BackgroundColor3 = COLORS.SURFACE_LIGHT
    btn.Text = ""
    btn.BorderSizePixel = 0
    btn.Parent = Liste
    
    createCorner(btn, 8)
    createStroke(btn, COLORS.BORDER)
    
    local iconLabel = Instance.new("TextLabel")
    iconLabel.Size = UDim2.new(0, 30, 0, 30)
    iconLabel.Position = UDim2.new(0, 15, 0, 10)
    iconLabel.BackgroundTransparency = 1
    iconLabel.Text = icon or "⚪"
    iconLabel.TextColor3 = COLORS.ACCENT
    iconLabel.TextScaled = true
    iconLabel.Font = Enum.Font.GothamBold
    iconLabel.Parent = btn
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, -60, 1, 0)
    nameLabel.Position = UDim2.new(0, 55, 0, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = name
    nameLabel.TextColor3 = COLORS.TEXT_PRIMARY
    nameLabel.TextScaled = true
    nameLabel.Font = Enum.Font.GothamSemibold
    nameLabel.TextXAlignment = Enum.TextXAlignment.Left
    nameLabel.Parent = btn
    
    -- Hover effects
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = COLORS.PRIMARY
        iconLabel.TextColor3 = COLORS.TEXT_PRIMARY
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = COLORS.SURFACE_LIGHT
        iconLabel.TextColor3 = COLORS.ACCENT
    end)
    
    btn.MouseButton1Click:Connect(function()
        callback()
    end)
    
    Liste.CanvasSize = UDim2.new(0, 0, 0, (#Liste:GetChildren() - 2) * 58 + 20)
end

-- Fly Functions
local function enableFly()
    if flyConnection then return end
    
    local character = LocalPlayer.Character
    if not character then return end
    
    local humanoid = character:FindFirstChild("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoid or not rootPart then return end
    
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.Parent = rootPart
    
    local bodyAngularVelocity = Instance.new("BodyAngularVelocity")
    bodyAngularVelocity.MaxTorque = Vector3.new(0, math.huge, 0)
    bodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
    bodyAngularVelocity.Parent = rootPart
    
    flyConnection = RunService.Heartbeat:Connect(function()
        if not rootPart.Parent then
            flyConnection:Disconnect()
            flyConnection = nil
            return
        end
        
        local camera = Workspace.CurrentCamera
        local moveVector = Vector3.new(0, 0, 0)
        
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveVector = moveVector + camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveVector = moveVector - camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveVector = moveVector - camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveVector = moveVector + camera.CFrame.RightVector
        end
        
        bodyVelocity.Velocity = moveVector * settings.flySpeed
    end)
end

local function disableFly()
    if flyConnection then
        flyConnection:Disconnect()
        flyConnection = nil
    end
    
    local character = LocalPlayer.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            for _, obj in ipairs(rootPart:GetChildren()) do
                if obj:IsA("BodyVelocity") or obj:IsA("BodyAngularVelocity") then
                    obj:Destroy()
                end
            end
        end
    end
end

-- Noclip Functions
local function enableNoclip()
    if noclipConnection then return end
    
    noclipConnection = RunService.Stepped:Connect(function()
        local character = LocalPlayer.Character
        if character then
            for _, part in ipairs(character:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end)
end

local function disableNoclip()
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
    local character = LocalPlayer.Character
    if character then
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                part.CanCollide = true
            end
        end
    end
end

-- ESP Functions
local function createHealthBar(player)
    if not player.Character then return end
    
    local character = player.Character
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoidRootPart or not humanoid then return end
    
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Size = UDim2.new(0, 8, 0, 100)
    billboardGui.StudsOffset = Vector3.new(3, 0, 0)
    billboardGui.AlwaysOnTop = true
    billboardGui.LightInfluence = 0
    billboardGui.Parent = humanoidRootPart
    
    local backgroundFrame = Instance.new("Frame")
    backgroundFrame.Size = UDim2.new(1, 0, 1, 0)
    backgroundFrame.Position = UDim2.new(0, 0, 0, 0)
    backgroundFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    backgroundFrame.BorderSizePixel = 1
    backgroundFrame.BorderColor3 = Color3.fromRGB(255, 255, 255)
    backgroundFrame.Parent = billboardGui
    
    local healthFrame = Instance.new("Frame")
    healthFrame.Size = UDim2.new(1, 0, humanoid.Health / humanoid.MaxHealth, 0)
    healthFrame.Position = UDim2.new(0, 0, 1 - (humanoid.Health / humanoid.MaxHealth), 0)
    healthFrame.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    healthFrame.BorderSizePixel = 0
    healthFrame.Parent = backgroundFrame
    
    local sizeConnection = RunService.Heartbeat:Connect(function()
        if humanoidRootPart.Parent then
            local camera = Workspace.CurrentCamera
            local distance = (camera.CFrame.Position - humanoidRootPart.Position).Magnitude
            local scale = math.max(0.3, math.min(1, 30 / distance))
            billboardGui.Size = UDim2.new(0, 8 * scale, 0, 100 * scale)
        end
    end)
    
    local healthConnection = humanoid.HealthChanged:Connect(function(health)
        local healthPercent = health / humanoid.MaxHealth
        healthFrame.Size = UDim2.new(1, 0, healthPercent, 0)
        healthFrame.Position = UDim2.new(0, 0, 1 - healthPercent, 0)
        
        if healthPercent > 0.6 then
            healthFrame.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        elseif healthPercent > 0.3 then
            healthFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
        else
            healthFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        end
    end)
    
    billboardGui.AncestryChanged:Connect(function()
        if not billboardGui.Parent then
            healthConnection:Disconnect()
            sizeConnection:Disconnect()
        end
    end)
    
    return {
        gui = billboardGui,
        sizeConnection = sizeConnection,
        healthConnection = healthConnection
    }
end

local function createHighlight(player)
    if espObjects[player] or not player.Character then return end
    
    local highlight = Instance.new("Highlight")
    highlight.FillColor = settings.espColor
    highlight.OutlineColor = settings.espColor
    highlight.FillTransparency = settings.espTransparency
    highlight.OutlineTransparency = 0
    highlight.Parent = player.Character
    
    local healthBar = createHealthBar(player)
    
    espObjects[player] = {
        highlight = highlight,
        healthBar = healthBar
    }
end

local function removeHighlight(player)
    if espObjects[player] then
        if espObjects[player].highlight then
            espObjects[player].highlight:Destroy()
        end
        if espObjects[player].healthBar then
            if espObjects[player].healthBar.gui then
                espObjects[player].healthBar.gui:Destroy()
            end
            if espObjects[player].healthBar.sizeConnection then
                espObjects[player].healthBar.sizeConnection:Disconnect()
            end
            if espObjects[player].healthBar.healthConnection then
                espObjects[player].healthBar.healthConnection:Disconnect()
            end
        end
        espObjects[player] = nil
    end
end

local function updateESP()
    if settings.espEnabled then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                createHighlight(player)
            end
        end
    else
        for player, objects in pairs(espObjects) do
            if objects.highlight then objects.highlight:Destroy() end
            if objects.healthBar then
                if objects.healthBar.gui then objects.healthBar.gui:Destroy() end
                if objects.healthBar.sizeConnection then objects.healthBar.sizeConnection:Disconnect() end
                if objects.healthBar.healthConnection then objects.healthBar.healthConnection:Disconnect() end
            end
        end
        espObjects = {}
    end
end

-- Nametags Functions
local function createNametag(player)
    if nametagObjects[player] or not player.Character then return end
    
    local character = player.Character
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Size = UDim2.new(0, settings.nametagSize * 10, 0, settings.nametagSize * 2)
    billboardGui.StudsOffset = Vector3.new(0, -3, 0)
    billboardGui.AlwaysOnTop = true
    billboardGui.LightInfluence = 0
    billboardGui.Parent = humanoidRootPart
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = player.Name
    textLabel.TextColor3 = settings.nametagColor
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.GothamBold
    textLabel.TextStrokeTransparency = 0
    textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.Parent = billboardGui
    
    local sizeConnection = RunService.Heartbeat:Connect(function()
        if humanoidRootPart.Parent then
            local camera = Workspace.CurrentCamera
            local distance = (camera.CFrame.Position - humanoidRootPart.Position).Magnitude
            local scale = math.max(0.5, math.min(2, 50 / distance))
            billboardGui.Size = UDim2.new(0, settings.nametagSize * 10 * scale, 0, settings.nametagSize * 2 * scale)
        end
    end)
    
    billboardGui.AncestryChanged:Connect(function()
        if not billboardGui.Parent then
            sizeConnection:Disconnect()
        end
    end)
    
    nametagObjects[player] = {
        gui = billboardGui,
        connection = sizeConnection
    }
end

local function removeNametag(player)
    if nametagObjects[player] then
        if nametagObjects[player].connection then
            nametagObjects[player].connection:Disconnect()
        end
        if nametagObjects[player].gui then
            nametagObjects[player].gui:Destroy()
        end
        nametagObjects[player] = nil
    end
end

local function updateNametags()
    if settings.nametagsEnabled then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                createNametag(player)
            end
        end
    else
        for player, objects in pairs(nametagObjects) do
            if objects.connection then objects.connection:Disconnect() end
            if objects.gui then objects.gui:Destroy() end
        end
        nametagObjects = {}
    end
end

-- Player Functions
local function getAllPlayers()
    local playerList = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(playerList, player)
        end
    end
    return playerList
end

local function teleportToPlayer(targetPlayer)
    if not targetPlayer or not targetPlayer.Character then return end
    
    local character = LocalPlayer.Character
    local targetCharacter = targetPlayer.Character
    
    if character and targetCharacter then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        local targetRootPart = targetCharacter:FindFirstChild("HumanoidRootPart")
        
        if humanoidRootPart and targetRootPart then
            humanoidRootPart.CFrame = targetRootPart.CFrame + Vector3.new(0, 0, -5)
        end
    end
end

local function viewPlayer(targetPlayer)
    local camera = Workspace.CurrentCamera
    
    if viewingPlayer then
        if viewConnection then
            viewConnection:Disconnect()
            viewConnection = nil
        end
        camera.CameraSubject = LocalPlayer.Character.Humanoid
        viewingPlayer = false
        return false
    else
        if not targetPlayer or not targetPlayer.Character then return false end
        
        camera.CameraSubject = targetPlayer.Character.Humanoid
        viewingPlayer = true
        
        viewConnection = RunService.Heartbeat:Connect(function()
            if not targetPlayer.Character or not targetPlayer.Character.Humanoid then
                viewConnection:Disconnect()
                viewConnection = nil
                camera.CameraSubject = LocalPlayer.Character.Humanoid
                viewingPlayer = false
            end
        end)
        
        return true
    end
end

local function giveAllItems()
    local character = LocalPlayer.Character
    if not character then return end
    
    local backpack = LocalPlayer:FindFirstChild("Backpack")
    if not backpack then return end
    
    for _, obj in ipairs(ReplicatedStorage:GetDescendants()) do
        if obj:IsA("Tool") then
            local hasItem = false
            for _, item in ipairs(backpack:GetChildren()) do
                if item.Name == obj.Name then
                    hasItem = true
                    break
                end
            end
            
            if not hasItem then
                local newTool = obj:Clone()
                newTool.Parent = backpack
            end
        end
    end
    
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if obj:IsA("Tool") and obj.Parent ~= character and obj.Parent ~= backpack then
            local hasItem = false
            for _, item in ipairs(backpack:GetChildren()) do
                if item.Name == obj.Name then
                    hasItem = true
                    break
                end
            end
            
            if not hasItem then
                local newTool = obj:Clone()
                newTool.Parent = backpack
            end
        end
    end
end

-- Category Frames
local function createFlyFrame()
    local frame = createCategoryFrame("Flight")
    
    local flyBtn, flyLabel, flyIndicator = createModernButton(frame, "Flight Mode", function()
        settings.flyEnabled = not settings.flyEnabled
        flyLabel.Text = "Flight Mode"
        
        if settings.flyEnabled then
            flyBtn.BackgroundColor3 = COLORS.SUCCESS
            flyIndicator.BackgroundColor3 = COLORS.SUCCESS
            enableFly()
        else
            flyBtn.BackgroundColor3 = COLORS.SURFACE_LIGHT
            flyIndicator.BackgroundColor3 = COLORS.DANGER
            disableFly()
        end
    end, settings.flyEnabled and "success" or "default")
    
    if settings.flyEnabled then
        flyIndicator.BackgroundColor3 = COLORS.SUCCESS
        enableFly()
    end
    
    createModernSlider(frame, "Flight Speed", 10, 200, settings.flySpeed, function(value)
        settings.flySpeed = value
    end)
    
    frame.CanvasSize = UDim2.new(0, 0, 0, 200)
end

local function createMeFrame()
    local frame = createCategoryFrame("Character")
    
    createModernButton(frame, "Give All Items", function()
        giveAllItems()
    end, "primary")
    
    createModernSlider(frame, "Walk Speed", 16, 100, settings.walkSpeed, function(value)
        settings.walkSpeed = value
        local character = LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = value
            end
        end
    end)
    
    createModernSlider(frame, "Jump Height", 50, 200, settings.jumpHeight, function(value)
        settings.jumpHeight = value
        local character = LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.JumpPower = value
            end
        end
    end)
    
    local noclipBtn, noclipLabel, noclipIndicator = createModernButton(frame, "No Clip", function()
        settings.noclipEnabled = not settings.noclipEnabled
        noclipLabel.Text = "No Clip"
        
        if settings.noclipEnabled then
            noclipBtn.BackgroundColor3 = COLORS.SUCCESS
            noclipIndicator.BackgroundColor3 = COLORS.SUCCESS
            enableNoclip()
        else
            noclipBtn.BackgroundColor3 = COLORS.SURFACE_LIGHT
            noclipIndicator.BackgroundColor3 = COLORS.DANGER
            disableNoclip()
        end
    end, settings.noclipEnabled and "success" or "default")
    
    if settings.noclipEnabled then
        noclipIndicator.BackgroundColor3 = COLORS.SUCCESS
        enableNoclip()
    end
    
    frame.CanvasSize = UDim2.new(0, 0, 0, 350)
end

local function createPlayerFrame()
    local frame = createCategoryFrame("Player")
    
    -- Kleines ScrollingFrame für Player-Auswahl
    local playerContainer = Instance.new("Frame")
    playerContainer.Size = UDim2.new(1, -20, 0, 200)
    playerContainer.BackgroundColor3 = COLORS.SURFACE
    playerContainer.BorderSizePixel = 0
    playerContainer.Parent = frame
    createCorner(playerContainer, 8)
    createStroke(playerContainer, COLORS.BORDER)
    
    local containerPadding = Instance.new("UIPadding")
    containerPadding.PaddingAll = UDim.new(0, 8)
    containerPadding.Parent = playerContainer
    
    -- Suchleiste mit Vorschlägen
    local searchBox = Instance.new("TextBox")
    searchBox.Size = UDim2.new(1, 0, 0, 30)
    searchBox.Position = UDim2.new(0, 0, 0, 0)
    searchBox.BackgroundColor3 = COLORS.BACKGROUND
    searchBox.PlaceholderText = "Search players..."
    searchBox.Text = ""
    searchBox.TextColor3 = COLORS.TEXT_PRIMARY
    searchBox.PlaceholderColor3 = COLORS.TEXT_MUTED
    searchBox.TextScaled = true
    searchBox.Font = Enum.Font.Gotham
    searchBox.BorderSizePixel = 0
    searchBox.Parent = playerContainer
    createCorner(searchBox, 6)
    createStroke(searchBox, COLORS.BORDER)
    
    -- Kleines Player ScrollingFrame
    local playerScrollFrame = Instance.new("ScrollingFrame")
    playerScrollFrame.Size = UDim2.new(1, 0, 0, 120)
    playerScrollFrame.Position = UDim2.new(0, 0, 0, 38)
    playerScrollFrame.BackgroundColor3 = COLORS.BACKGROUND
    playerScrollFrame.BorderSizePixel = 0
    playerScrollFrame.ScrollBarThickness = 4
    playerScrollFrame.ScrollBarImageColor3 = COLORS.ACCENT
    playerScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    playerScrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    playerScrollFrame.Parent = playerContainer
    createCorner(playerScrollFrame, 6)
    createStroke(playerScrollFrame, COLORS.BORDER)
    
    local listLayout = Instance.new("UIListLayout")
    listLayout.Padding = UDim.new(0, 2)
    listLayout.Parent = playerScrollFrame
    
    local listPadding = Instance.new("UIPadding")
    listPadding.PaddingAll = UDim.new(0, 4)
    listPadding.Parent = playerScrollFrame
    
    -- Buttons unter dem Container
    local viewBtn = Instance.new("TextButton")
    viewBtn.Size = UDim2.new(0, 120, 0, 35)
    viewBtn.Position = UDim2.new(0, 0, 0, 220)
    viewBtn.BackgroundColor3 = COLORS.SURFACE_LIGHT
    viewBtn.Text = "View: OFF"
    viewBtn.TextColor3 = COLORS.TEXT_PRIMARY
    viewBtn.TextScaled = true
    viewBtn.Font = Enum.Font.GothamSemibold
    viewBtn.BorderSizePixel = 0
    viewBtn.AutoButtonColor = false
    viewBtn.Parent = frame
    createCorner(viewBtn, 6)
    createStroke(viewBtn, COLORS.BORDER)
    
    local gotoBtn = Instance.new("TextButton")
    gotoBtn.Size = UDim2.new(0, 100, 0, 35)
    gotoBtn.Position = UDim2.new(0, 140, 0, 220)
    gotoBtn.BackgroundColor3 = COLORS.PRIMARY
    gotoBtn.Text = "Goto"
    gotoBtn.TextColor3 = COLORS.TEXT_PRIMARY
    gotoBtn.TextScaled = true
    gotoBtn.Font = Enum.Font.GothamSemibold
    gotoBtn.BorderSizePixel = 0
    gotoBtn.AutoButtonColor = false
    gotoBtn.Parent = frame
    createCorner(gotoBtn, 6)
    
    -- Selected Player Label
    local selectedLabel = Instance.new("TextLabel")
    selectedLabel.Size = UDim2.new(1, -20, 0, 25)
    selectedLabel.Position = UDim2.new(0, 0, 0, 270)
    selectedLabel.BackgroundTransparency = 1
    selectedLabel.Text = "Selected: None"
    selectedLabel.TextColor3 = COLORS.TEXT_SECONDARY
    selectedLabel.TextScaled = true
    selectedLabel.Font = Enum.Font.Gotham
    selectedLabel.TextXAlignment = Enum.TextXAlignment.Left
    selectedLabel.Parent = frame
    
    -- Funktionen
    local function getSimilarPlayers(input)
        local players = getAllPlayers()
        local similar = {}
        
        for _, player in ipairs(players) do
            local name = player.Name:lower()
            local search = input:lower()
            
            if string.find(name, search, 1, true) then
                table.insert(similar, player)
            end
        end
        
        -- Sortiere nach Ähnlichkeit (beginnt mit Suchtext zuerst)
        table.sort(similar, function(a, b)
            local aStarts = string.sub(a.Name:lower(), 1, #input) == input:lower()
            local bStarts = string.sub(b.Name:lower(), 1, #input) == input:lower()
            
            if aStarts and not bStarts then
                return true
            elseif bStarts and not aStarts then
                return false
            else
                return a.Name < b.Name
            end
        end)
        
        return similar
    end
    
    local function updatePlayerList(searchText)
        -- Lösche alle bestehenden Player-Buttons
        for _, child in ipairs(playerScrollFrame:GetChildren()) do
            if child:IsA("TextButton") then
                child:Destroy()
            end
        end
        
        local playersToShow = searchText and #searchText > 0 and getSimilarPlayers(searchText) or getAllPlayers()
        
        for _, player in ipairs(playersToShow) do
            local playerBtn = Instance.new("TextButton")
            playerBtn.Size = UDim2.new(1, -8, 0, 25)
            playerBtn.BackgroundColor3 = COLORS.SURFACE_LIGHT
            playerBtn.Text = player.Name
            playerBtn.TextColor3 = COLORS.TEXT_PRIMARY
            playerBtn.TextScaled = true
            playerBtn.Font = Enum.Font.Gotham
            playerBtn.BorderSizePixel = 0
            playerBtn.AutoButtonColor = false
            playerBtn.Parent = playerScrollFrame
            createCorner(playerBtn, 4)
            
            -- Hover-Effekt
            playerBtn.MouseEnter:Connect(function()
                if settings.selectedPlayer ~= player then
                    playerBtn.BackgroundColor3 = COLORS.PRIMARY
                end
            end)
            
            playerBtn.MouseLeave:Connect(function()
                if settings.selectedPlayer ~= player then
                    playerBtn.BackgroundColor3 = COLORS.SURFACE_LIGHT
                end
            end)
            
            -- Auswahl-Funktion
            playerBtn.MouseButton1Click:Connect(function()
                -- Deselektiere alle anderen
                for _, btn in ipairs(playerScrollFrame:GetChildren()) do
                    if btn:IsA("TextButton") and btn ~= playerBtn then
                        btn.BackgroundColor3 = COLORS.SURFACE_LIGHT
                    end
                end
                
                settings.selectedPlayer = player
                selectedLabel.Text = "Selected: " .. player.Name
                playerBtn.BackgroundColor3 = COLORS.ACCENT
            end)
        end
    end
    
    -- Suchfunktion mit Vorschlägen
    searchBox:GetPropertyChangedSignal("Text"):Connect(function()
        updatePlayerList(searchBox.Text)
    end)
    
    -- View Button Toggle-Funktionalität
    local function updateViewButton(viewing)
        if viewing then
            viewBtn.Text = "View: ON"
            viewBtn.BackgroundColor3 = COLORS.SUCCESS
        else
            viewBtn.Text = "View: OFF"
            viewBtn.BackgroundColor3 = COLORS.SURFACE_LIGHT
        end
    end
    
    viewBtn.MouseButton1Click:Connect(function()
        if settings.selectedPlayer then
            local viewing = viewPlayer(settings.selectedPlayer)
            updateViewButton(viewing)
        end
    end)
    
    -- Goto Button Funktionalität
    gotoBtn.MouseButton1Click:Connect(function()
        if settings.selectedPlayer then
            teleportToPlayer(settings.selectedPlayer)
        end
    end)
    
    -- Button Hover-Effekte
    viewBtn.MouseEnter:Connect(function()
        if viewBtn.BackgroundColor3 ~= COLORS.SUCCESS then
            viewBtn.BackgroundColor3 = Color3.new(
                math.min(1, viewBtn.BackgroundColor3.R + 0.1),
                math.min(1, viewBtn.BackgroundColor3.G + 0.1),
                math.min(1, viewBtn.BackgroundColor3.B + 0.1)
            )
        end
    end)
    
    viewBtn.MouseLeave:Connect(function()
        if viewBtn.Text == "View: OFF" then
            viewBtn.BackgroundColor3 = COLORS.SURFACE_LIGHT
        end
    end)
    
    gotoBtn.MouseEnter:Connect(function()
        gotoBtn.BackgroundColor3 = COLORS.PRIMARY_HOVER
    end)
    
    gotoBtn.MouseLeave:Connect(function()
        gotoBtn.BackgroundColor3 = COLORS.PRIMARY
    end)
    
    -- Events für Player Join/Leave
    local function onPlayerAdded()
        wait(0.1)
        updatePlayerList(searchBox.Text)
    end
    
    local function onPlayerRemoving(player)
        if settings.selectedPlayer == player then
            settings.selectedPlayer = nil
            selectedLabel.Text = "Selected: None"
            updateViewButton(false)
        end
        updatePlayerList(searchBox.Text)
    end
    
    Players.PlayerAdded:Connect(onPlayerAdded)
    Players.PlayerRemoving:Connect(onPlayerRemoving)
    
    -- Initiale Player-Liste
    updatePlayerList()
    
    frame.CanvasSize = UDim2.new(0, 0, 0, 310)
end

local function createESPFrame()
    local frame = createCategoryFrame("ESP")
    
    local espBtn, espLabel, espIndicator = createModernButton(frame, "ESP Highlight", function()
        settings.espEnabled = not settings.espEnabled
        espLabel.Text = "ESP Highlight"
        
        if settings.espEnabled then
            espBtn.BackgroundColor3 = COLORS.SUCCESS
            espIndicator.BackgroundColor3 = COLORS.SUCCESS
        else
            espBtn.BackgroundColor3 = COLORS.SURFACE_LIGHT
            espIndicator.BackgroundColor3 = COLORS.DANGER
        end
        
        updateESP()
    end, settings.espEnabled and "success" or "default")
    
    if settings.espEnabled then
        espIndicator.BackgroundColor3 = COLORS.SUCCESS
        updateESP()
    end
    
    createModernColorPicker(frame, "Highlight Color", settings.espColor, function(color)
        settings.espColor = color
        for player, objects in pairs(espObjects) do
            if objects.highlight then
                objects.highlight.FillColor = color
                objects.highlight.OutlineColor = color
            end
        end
    end)
    
    createModernSlider(frame, "Highlight Transparency", 0, 1, settings.espTransparency, function(value)
        settings.espTransparency = value
        for player, objects in pairs(espObjects) do
            if objects.highlight then
                objects.highlight.FillTransparency = value
            end
        end
    end)
    
    local nametagBtn, nametagLabel, nametagIndicator = createModernButton(frame, "Player Nametags", function()
        settings.nametagsEnabled = not settings.nametagsEnabled
        nametagLabel.Text = "Player Nametags"
        
        if settings.nametagsEnabled then
            nametagBtn.BackgroundColor3 = COLORS.SUCCESS
            nametagIndicator.BackgroundColor3 = COLORS.SUCCESS
        else
            nametagBtn.BackgroundColor3 = COLORS.SURFACE_LIGHT
            nametagIndicator.BackgroundColor3 = COLORS.DANGER
        end
        
        updateNametags()
    end, settings.nametagsEnabled and "success" or "default")
    
    if settings.nametagsEnabled then
        nametagIndicator.BackgroundColor3 = COLORS.SUCCESS
        updateNametags()
    end
    
    createModernColorPicker(frame, "Nametag Color", settings.nametagColor, function(color)
        settings.nametagColor = color
        for player, objects in pairs(nametagObjects) do
            if objects.gui and objects.gui:FindFirstChild("TextLabel") then
                objects.gui.TextLabel.TextColor3 = color
            end
        end
    end)
    
    createModernSlider(frame, "Nametag Size", 1, 50, settings.nametagSize, function(value)
        settings.nametagSize = value
        for player, objects in pairs(nametagObjects) do
            if objects.gui then
                local camera = Workspace.CurrentCamera
                local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                if camera and humanoidRootPart then
                    local distance = (camera.CFrame.Position - humanoidRootPart.Position).Magnitude
                    local scale = math.max(0.5, math.min(2, 50 / distance))
                    objects.gui.Size = UDim2.new(0, value * 10 * scale, 0, value * 2 * scale)
                end
            end
        end
    end)
    
    frame.CanvasSize = UDim2.new(0, 0, 0, 500)
end

-- Initialize Categories
local function initializeCategories()
    createCategoryButton("Flight", createFlyFrame, "✈️")
    createCategoryButton("Character", createMeFrame, "👤")
    createCategoryButton("Players", createPlayerFrame, "👥")
    createCategoryButton("ESP", createESPFrame, "👁️")
end

-- Event Handlers
local function onCharacterAdded(character)
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.WalkSpeed = settings.walkSpeed
    humanoid.JumpPower = settings.jumpHeight
    
    if settings.flyEnabled then
        wait(1)
        enableFly()
    end
    
    if settings.noclipEnabled then
        enableNoclip()
    end
end

-- Player Events
Players.PlayerAdded:Connect(function(player)
    if settings.espEnabled and player ~= LocalPlayer then
        player.CharacterAdded:Connect(function()
            wait(0.5)
            createHighlight(player)
        end)
    end
    
    if settings.nametagsEnabled and player ~= LocalPlayer then
        player.CharacterAdded:Connect(function()
            wait(0.5)
            createNametag(player)
        end)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    removeHighlight(player)
    removeNametag(player)
end)

-- Character Respawn
if LocalPlayer.Character then
    onCharacterAdded(LocalPlayer.Character)
end

LocalPlayer.CharacterAdded:Connect(onCharacterAdded)

-- Menu Toggle
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == settings.menuKey then
        if VyrxisGui then
            VyrxisGui.Enabled = not VyrxisGui.Enabled
        end
    end
end)

-- Cleanup on disconnect
game.Players.PlayerRemoving:Connect(function(player)
    if player == LocalPlayer then
        disableFly()
        disableNoclip()
        for p, objects in pairs(espObjects) do
            if objects.highlight then objects.highlight:Destroy() end
            if objects.healthBar then
                if objects.healthBar.gui then objects.healthBar.gui:Destroy() end
                if objects.healthBar.sizeConnection then objects.healthBar.sizeConnection:Disconnect() end
                if objects.healthBar.healthConnection then objects.healthBar.healthConnection:Disconnect() end
            end
        end
        for p, objects in pairs(nametagObjects) do
            if objects.connection then objects.connection:Disconnect() end
            if objects.gui then objects.gui:Destroy() end
        end
    end
end)

-- Initialize
spawn(function()
    createLoadScreen()
    wait(5.5)
    createMainUI()
    createSettingsFrame()
    initializeCategories()
end)
