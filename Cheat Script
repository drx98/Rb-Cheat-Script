local player = game.Players.LocalPlayer
local uis = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local tweenService = game:GetService("TweenService")
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

local flying = false
local flySpeed = 50
local flyKey = Enum.KeyCode.E
local noclip = false
local bv, bg

-- ====== ESP VARIABLEN (Improved System) ======
local espEnabled = false
local espColor = Color3.fromRGB(255, 0, 0)
local espObjects = {}

-- ====== Farben ======
local primaryDark = Color3.fromRGB(30,30,30)
local primaryMedium = Color3.fromRGB(50,50,50)
local primaryLight = Color3.fromRGB(70,70,70)
local secondary = Color3.fromRGB(128,0,255)
local textColor = Color3.fromRGB(255,255,255)

-- ====== GUI erstellen ======
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TabletGUI"
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0,400,0,300)
mainFrame.Position = UDim2.new(0.3,0,0.3,0)
mainFrame.BackgroundColor3 = primaryMedium
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0,12)

local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1,0,0,30)
topBar.BackgroundColor3 = primaryLight
topBar.Parent = mainFrame
Instance.new("UICorner", topBar).CornerRadius = UDim.new(0,12)

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1,0,1,0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Character ESP - Advanced System"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 16
titleLabel.TextColor3 = textColor
titleLabel.Parent = topBar

-- ====== Dragging ======
local dragging, dragInput, mousePos, framePos = false, nil, nil, nil
topBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		mousePos = input.Position
		framePos = mainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
topBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)
uis.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - mousePos
		mainFrame.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
	end
end)

-- ====== Left Buttons ======
local leftScroll = Instance.new("ScrollingFrame")
leftScroll.Size = UDim2.new(0,150,1,-30)
leftScroll.Position = UDim2.new(0,0,0,30)
leftScroll.BackgroundColor3 = primaryDark
leftScroll.ScrollBarThickness = 6
leftScroll.Parent = mainFrame
Instance.new("UICorner", leftScroll).CornerRadius = UDim.new(0,8)

local flyButton = Instance.new("TextButton")
flyButton.Text = "Fly Settings"
flyButton.Size = UDim2.new(1,-10,0,50)
flyButton.BackgroundColor3 = primaryMedium
flyButton.TextColor3 = textColor
flyButton.Parent = leftScroll
Instance.new("UICorner", flyButton).CornerRadius = UDim.new(0,6)

local espButton = Instance.new("TextButton")
espButton.Text = "ESP Settings"
espButton.Size = UDim2.new(1,-10,0,50)
espButton.BackgroundColor3 = primaryMedium
espButton.TextColor3 = textColor
espButton.Parent = leftScroll
Instance.new("UICorner", espButton).CornerRadius = UDim.new(0,6)

local playerButton = Instance.new("TextButton")
playerButton.Text = "Player Settings"
playerButton.Size = UDim2.new(1,-10,0,50)
playerButton.BackgroundColor3 = primaryMedium
playerButton.TextColor3 = textColor
playerButton.Parent = leftScroll
Instance.new("UICorner", playerButton).CornerRadius = UDim.new(0,6)

local guiButton = Instance.new("TextButton")
guiButton.Text = "Gui Settings"
guiButton.Size = UDim2.new(1,-10,0,50)
guiButton.BackgroundColor3 = primaryMedium
guiButton.TextColor3 = textColor
guiButton.Parent = leftScroll
Instance.new("UICorner", guiButton).CornerRadius = UDim.new(0,6)

local function updateLeftButtonPositions()
	local lastY = 5
	flyButton.Position = UDim2.new(0,5,0,lastY)
	lastY = lastY + flyButton.Size.Y.Offset + 5
	espButton.Position = UDim2.new(0,5,0,lastY)
	lastY = lastY + espButton.Size.Y.Offset + 5
	playerButton.Position = UDim2.new(0,5,0,lastY)
	lastY = lastY + playerButton.Size.Y.Offset + 5
	guiButton.Position = UDim2.new(0,5,0,lastY)
end
updateLeftButtonPositions()

-- ====== Right Panels ======
local flyScroll = Instance.new("ScrollingFrame")
flyScroll.Size = UDim2.new(0,240,1,-30)
flyScroll.Position = UDim2.new(1,0,0,30)
flyScroll.BackgroundColor3 = primaryMedium
flyScroll.ScrollBarThickness = 6
flyScroll.Visible = false
flyScroll.Parent = mainFrame
Instance.new("UICorner", flyScroll).CornerRadius = UDim.new(0,8)

local espScroll = Instance.new("ScrollingFrame")
espScroll.Size = UDim2.new(0,240,1,-30)
espScroll.Position = UDim2.new(1,0,0,30)
espScroll.BackgroundColor3 = primaryMedium
espScroll.ScrollBarThickness = 6
espScroll.Visible = false
espScroll.CanvasSize = UDim2.new(0,0,0,350)
espScroll.Parent = mainFrame
Instance.new("UICorner", espScroll).CornerRadius = UDim.new(0,8)

local playerScroll = Instance.new("ScrollingFrame")
playerScroll.Size = UDim2.new(0,240,1,-30)
playerScroll.Position = UDim2.new(1,0,0,30)
playerScroll.BackgroundColor3 = primaryMedium
playerScroll.ScrollBarThickness = 6
playerScroll.Visible = false
playerScroll.CanvasSize = UDim2.new(0,0,0,450)
playerScroll.Parent = mainFrame
Instance.new("UICorner", playerScroll).CornerRadius = UDim.new(0,8)

local guiScroll = Instance.new("ScrollingFrame")
guiScroll.Size = UDim2.new(0,240,1,-30)
guiScroll.Position = UDim2.new(1,0,0,30)
guiScroll.BackgroundColor3 = primaryMedium
guiScroll.ScrollBarThickness = 6
guiScroll.Visible = false
guiScroll.Parent = mainFrame
Instance.new("UICorner", guiScroll).CornerRadius = UDim.new(0,8)

-- ====== ESP PLAYER BUTTON ======
local espPlayerButton = Instance.new("TextButton")
espPlayerButton.Text = "Character ESP: Off"
espPlayerButton.Size = UDim2.new(0,220,0,40)
espPlayerButton.Position = UDim2.new(0,10,0,20)
espPlayerButton.BackgroundColor3 = primaryMedium
espPlayerButton.TextColor3 = textColor
espPlayerButton.Font = Enum.Font.GothamBold
espPlayerButton.TextSize = 16
espPlayerButton.Parent = espScroll
Instance.new("UICorner", espPlayerButton).CornerRadius = UDim.new(0,6)

-- ====== ESP COLOR PICKER ======
local espColorLabel = Instance.new("TextLabel")
espColorLabel.Size = UDim2.new(0,200,0,20)
espColorLabel.Position = UDim2.new(0,10,0,80)
espColorLabel.BackgroundTransparency = 1
espColorLabel.TextColor3 = textColor
espColorLabel.TextXAlignment = Enum.TextXAlignment.Left
espColorLabel.Text = "ESP Color:"
espColorLabel.Font = Enum.Font.Gotham
espColorLabel.TextSize = 12
espColorLabel.Parent = espScroll

local espColorBox = Instance.new("TextButton")
espColorBox.Size = UDim2.new(0,200,0,30)
espColorBox.Position = UDim2.new(0,10,0,100)
espColorBox.BackgroundColor3 = espColor
espColorBox.Text = ""
espColorBox.BorderSizePixel = 2
espColorBox.BorderColor3 = Color3.fromRGB(100,100,100)
espColorBox.Parent = espScroll
Instance.new("UICorner", espColorBox).CornerRadius = UDim.new(0,6)

-- ====== ESP TRANSPARENCY SLIDER ======
local transparencyLabel = Instance.new("TextLabel")
transparencyLabel.Size = UDim2.new(0,200,0,20)
transparencyLabel.Position = UDim2.new(0,10,0,150)
transparencyLabel.BackgroundTransparency = 1
transparencyLabel.TextColor3 = textColor
transparencyLabel.TextXAlignment = Enum.TextXAlignment.Left
transparencyLabel.Text = "Transparency: 0.3"
transparencyLabel.Font = Enum.Font.Gotham
transparencyLabel.TextSize = 12
transparencyLabel.Parent = espScroll

local transparencySlider = Instance.new("Frame")
transparencySlider.Size = UDim2.new(0,200,0,20)
transparencySlider.Position = UDim2.new(0,10,0,170)
transparencySlider.BackgroundColor3 = primaryDark
transparencySlider.Parent = espScroll
Instance.new("UICorner", transparencySlider).CornerRadius = UDim.new(0,10)

local transparencyKnob = Instance.new("TextButton")
transparencyKnob.Size = UDim2.new(0,20,0,20)
transparencyKnob.Position = UDim2.new(0.3,0,0,0)
transparencyKnob.BackgroundColor3 = secondary
transparencyKnob.Text = ""
transparencyKnob.Parent = transparencySlider
Instance.new("UICorner", transparencyKnob).CornerRadius = UDim.new(0.5,0)

local espTransparency = 0.3
local draggingSlider = false

transparencyKnob.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingSlider = true
	end
end)

uis.InputChanged:Connect(function(input)
	if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
		local sliderPos = transparencySlider.AbsolutePosition.X
		local sliderSize = transparencySlider.AbsoluteSize.X
		local mouseX = input.Position.X
		local relativeX = math.max(0, math.min(sliderSize - 20, mouseX - sliderPos))
		local percentage = relativeX / (sliderSize - 20)

		espTransparency = percentage
		transparencyKnob.Position = UDim2.new(percentage, 0, 0, 0)
		transparencyLabel.Text = "Transparency: " .. string.format("%.2f", espTransparency)

		-- Update alle ESP Objekte
		for _, espData in pairs(espObjects) do
			if espData.outline and espData.outline.Parent then
				espData.outline.Transparency = espTransparency
			end
			if espData.healthBarBack and espData.healthBarBack.Parent then
				espData.healthBarBack.Transparency = espTransparency * 0.5
			end
		end
	end
end)

uis.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingSlider = false
	end
end)

-- ====== ADVANCED ESP SYSTEM WITH OUTLINE AND HEALTH BAR ======

-- Funktion um alle ESP eines Spielers zu bereinigen
local function cleanupPlayerESP(targetPlayer)
	local playerName = targetPlayer.Name

	if espObjects[playerName] then
		local espData = espObjects[playerName]

		-- Bereinige alle ESP-Komponenten
		for _, component in pairs({"outline", "healthBarBack", "healthBarFront", "nameLabel", "anchorPart"}) do
			if espData[component] and espData[component].Parent then
				espData[component]:Destroy()
			end
		end

		if espData.updateConnection then
			espData.updateConnection:Disconnect()
		end

		espObjects[playerName] = nil
	end

	print("[ESP] Cleaned up ESP for: " .. playerName)
end

-- Erweiterte ESP-Erstellung mit Outline und Health Bar
local function createAdvancedCharacterESP(targetPlayer)
	if not targetPlayer or targetPlayer == player then return end
	if not targetPlayer.Character then return end

	local playerName = targetPlayer.Name

	-- Bereinige alte ESP-Objekte
	cleanupPlayerESP(targetPlayer)

	local character = targetPlayer.Character
	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	local targetHumanoid = character:FindFirstChild("Humanoid")
	if not humanoidRootPart or not targetHumanoid then return end

	-- Erstelle unsichtbaren Anchor-Part
	local anchorPart = Instance.new("Part")
	anchorPart.Name = "ESP_Anchor_" .. playerName
	anchorPart.Size = Vector3.new(0.1, 0.1, 0.1)
	anchorPart.Transparency = 1
	anchorPart.CanCollide = false
	anchorPart.Anchored = true
	anchorPart.Parent = workspace

	-- Erstelle Character Outline (CircleHandleAdornment für bessere Performance)
	local outline = Instance.new("SphereHandleAdornment")
	outline.Name = "ESP_Outline_" .. playerName
	outline.Adornee = anchorPart
	outline.Color3 = espColor
	outline.Transparency = espTransparency
	outline.AlwaysOnTop = true
	outline.ZIndex = 10
	outline.Radius = 3.5
	outline.Parent = anchorPart

	-- Health Bar Background
	local healthBarBack = Instance.new("BoxHandleAdornment")
	healthBarBack.Name = "HealthBar_Back_" .. playerName
	healthBarBack.Adornee = anchorPart
	healthBarBack.Color3 = Color3.fromRGB(50, 50, 50)
	healthBarBack.Transparency = espTransparency * 0.5
	healthBarBack.AlwaysOnTop = true
	healthBarBack.ZIndex = 11
	healthBarBack.Size = Vector3.new(0.3, 6, 0.1)
	healthBarBack.Parent = anchorPart

	-- Health Bar Foreground
	local healthBarFront = Instance.new("BoxHandleAdornment")
	healthBarFront.Name = "HealthBar_Front_" .. playerName
	healthBarFront.Adornee = anchorPart
	healthBarFront.Color3 = Color3.fromRGB(0, 255, 0)
	healthBarFront.Transparency = 0
	healthBarFront.AlwaysOnTop = true
	healthBarFront.ZIndex = 12
	healthBarFront.Size = Vector3.new(0.25, 6, 0.05)
	healthBarFront.Parent = anchorPart

	-- Player Name Label
	local nameLabel = Instance.new("BillboardGui")
	nameLabel.Name = "ESP_Name_" .. playerName
	nameLabel.Adornee = anchorPart
	nameLabel.Size = UDim2.new(0, 200, 0, 30)
	nameLabel.StudsOffset = Vector3.new(0, 4, 0)
	nameLabel.AlwaysOnTop = true
	nameLabel.Parent = anchorPart

	local nameText = Instance.new("TextLabel")
	nameText.Size = UDim2.new(1, 0, 1, 0)
	nameText.BackgroundTransparency = 1
	nameText.Text = playerName
	nameText.TextColor3 = espColor
	nameText.TextScaled = true
	nameText.Font = Enum.Font.GothamBold
	nameText.Parent = nameLabel

	-- Optimierte Update-Loop mit Tween für smooth movement
	local lastUpdate = 0
	local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	
	local updateConnection = runService.Heartbeat:Connect(function()
		local now = tick()
		if now - lastUpdate < 0.05 then return end -- Update alle 0.05 Sekunden für smoothness
		lastUpdate = now

		if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
			cleanupPlayerESP(targetPlayer)
			return
		end

		local currentHRP = targetPlayer.Character.HumanoidRootPart
		local currentHumanoid = targetPlayer.Character:FindFirstChild("Humanoid")
		
		-- Smooth position update with tween
		local tween = tweenService:Create(anchorPart, tweenInfo, {CFrame = currentHRP.CFrame})
		tween:Play()

		-- Health bar update
		if currentHumanoid then
			local healthPercentage = currentHumanoid.Health / currentHumanoid.MaxHealth
			local healthBarHeight = 6 * healthPercentage
			
			-- Health bar positioning (rechts vom Charakter)
			healthBarBack.CFrame = CFrame.new(currentHRP.Position + Vector3.new(4, 0, 0))
			healthBarFront.CFrame = CFrame.new(currentHRP.Position + Vector3.new(4, (6 - healthBarHeight) * -0.5, 0))
			healthBarFront.Size = Vector3.new(0.25, healthBarHeight, 0.05)
			
			-- Health bar color based on health percentage
			if healthPercentage > 0.6 then
				healthBarFront.Color3 = Color3.fromRGB(0, 255, 0) -- Grün
			elseif healthPercentage > 0.3 then
				healthBarFront.Color3 = Color3.fromRGB(255, 255, 0) -- Gelb
			else
				healthBarFront.Color3 = Color3.fromRGB(255, 0, 0) -- Rot
			end
		end
	end)

	-- Speichere ESP-Daten
	espObjects[playerName] = {
		player = targetPlayer,
		character = character,
		outline = outline,
		healthBarBack = healthBarBack,
		healthBarFront = healthBarFront,
		nameLabel = nameLabel,
		anchorPart = anchorPart,
		updateConnection = updateConnection
	}

	print("[ESP] Created Advanced ESP for: " .. playerName)
end

-- Funktion um ESP-Farben zu aktualisieren
local function updateESPColors()
	for playerName, espData in pairs(espObjects) do
		if espData.outline and espData.outline.Parent then
			espData.outline.Color3 = espColor
			espData.outline.Transparency = espTransparency
		end
		if espData.nameLabel and espData.nameLabel:FindFirstChild("TextLabel") then
			espData.nameLabel.TextLabel.TextColor3 = espColor
		end
	end
end

-- Funktion um ESP für alle Spieler zu aktivieren
local function enableESP()
	print("[ESP] Enabling Advanced Character ESP...")

	for _, targetPlayer in pairs(game.Players:GetPlayers()) do
		if targetPlayer ~= player and targetPlayer.Character then
			spawn(function()
				wait(0.1)
				createAdvancedCharacterESP(targetPlayer)
			end)
		end
	end
end

-- Funktion um alle ESP zu deaktivieren
local function disableESP()
	print("[ESP] Disabling Advanced Character ESP...")

	for playerName, espData in pairs(espObjects) do
		cleanupPlayerESP(espData.player)
	end
	espObjects = {}

	print("[ESP] All Advanced ESP removed")
end

-- ====== ESP BUTTON FUNKTIONALITÄT ======
espPlayerButton.MouseButton1Click:Connect(function()
	espEnabled = not espEnabled
	if espEnabled then
		espPlayerButton.Text = "Character ESP: On"
		espPlayerButton.BackgroundColor3 = secondary
		enableESP()
	else
		espPlayerButton.Text = "Character ESP: Off"
		espPlayerButton.BackgroundColor3 = primaryMedium
		disableESP()
	end
end)

-- ====== ESP COLOR PICKER ======
local espPickerOpen = false
local espPickerFrame

local espColors = {
	Color3.fromRGB(255,0,0), Color3.fromRGB(0,255,0), Color3.fromRGB(0,0,255),
	Color3.fromRGB(255,255,0), Color3.fromRGB(255,0,255), Color3.fromRGB(0,255,255),
	Color3.fromRGB(255,128,0), Color3.fromRGB(128,0,255), Color3.fromRGB(255,192,203),
	Color3.fromRGB(255,255,255), Color3.fromRGB(128,128,128), Color3.fromRGB(64,64,64),
	Color3.fromRGB(255,69,0), Color3.fromRGB(50,205,50), Color3.fromRGB(30,144,255)
}

espColorBox.MouseButton1Click:Connect(function()
	if espPickerOpen then
		if espPickerFrame then espPickerFrame:Destroy() end
		espPickerOpen = false
		return
	end

	espPickerOpen = true
	espPickerFrame = Instance.new("Frame")
	espPickerFrame.Size = UDim2.new(0,200,0,160)
	espPickerFrame.Position = UDim2.new(0,10,0,140)
	espPickerFrame.BackgroundColor3 = primaryDark
	espPickerFrame.BorderSizePixel = 1
	espPickerFrame.BorderColor3 = Color3.fromRGB(100,100,100)
	espPickerFrame.Parent = espScroll
	Instance.new("UICorner", espPickerFrame).CornerRadius = UDim.new(0,8)

	local espCloseBtn = Instance.new("TextButton")
	espCloseBtn.Size = UDim2.new(0,20,0,20)
	espCloseBtn.Position = UDim2.new(1,-25,0,5)
	espCloseBtn.BackgroundColor3 = Color3.fromRGB(255,0,0)
	espCloseBtn.Text = "X"
	espCloseBtn.TextColor3 = Color3.fromRGB(255,255,255)
	espCloseBtn.Font = Enum.Font.GothamBold
	espCloseBtn.TextSize = 12
	espCloseBtn.Parent = espPickerFrame
	Instance.new("UICorner", espCloseBtn).CornerRadius = UDim.new(0,4)

	espCloseBtn.MouseButton1Click:Connect(function()
		espPickerFrame:Destroy()
		espPickerOpen = false
	end)

	for i, c in ipairs(espColors) do
		local colorBtn = Instance.new("TextButton")
		colorBtn.Size = UDim2.new(0,30,0,30)
		colorBtn.Position = UDim2.new(0, 5 + ((i-1)%5)*35, 0, 30 + math.floor((i-1)/5)*35)
		colorBtn.BackgroundColor3 = c
		colorBtn.Text = ""
		colorBtn.BorderSizePixel = 1
		colorBtn.BorderColor3 = Color3.fromRGB(200,200,200)
		colorBtn.Parent = espPickerFrame
		Instance.new("UICorner", colorBtn).CornerRadius = UDim.new(0,4)

		colorBtn.MouseButton1Click:Connect(function()
			espColor = c
			espColorBox.BackgroundColor3 = c
			if espEnabled then
				updateESPColors()
			end
			espPickerFrame:Destroy()
			espPickerOpen = false
		end)
	end

	espScroll.CanvasSize = UDim2.new(0,0,0,370)
end)

-- ====== ESP PLAYER EVENTS ======
game.Players.PlayerAdded:Connect(function(newPlayer)
	newPlayer.CharacterAdded:Connect(function()
		if espEnabled then
			wait(1)
			createAdvancedCharacterESP(newPlayer)
		end
	end)
end)

game.Players.PlayerRemoving:Connect(function(leavingPlayer)
	cleanupPlayerESP(leavingPlayer)
end)

for _, existingPlayer in pairs(game.Players:GetPlayers()) do
	if existingPlayer ~= player then
		existingPlayer.CharacterAdded:Connect(function()
			if espEnabled then
				wait(1)
				createAdvancedCharacterESP(existingPlayer)
			end
		end)

		existingPlayer.CharacterRemoving:Connect(function()
			cleanupPlayerESP(existingPlayer)
		end)
	end
end

-- ====== PLAYER SETTINGS ======
local selectedPlayer = nil
local viewingPlayer = false
local originalCamera = nil
local cameraConnection = nil

local function toggleScrollingFrame(frame)
	for _, other in ipairs({flyScroll, espScroll, playerScroll, guiScroll}) do
		if other ~= frame then
			other.Visible = false
			other.Position = UDim2.new(1,0,0,30)
		end
	end
	frame.Visible = not frame.Visible
	frame.Position = frame.Visible and UDim2.new(0.38,0,0,30) or UDim2.new(1,0,0,30)
end

flyButton.MouseButton1Click:Connect(function() toggleScrollingFrame(flyScroll) end)
espButton.MouseButton1Click:Connect(function() toggleScrollingFrame(espScroll) end)
playerButton.MouseButton1Click:Connect(function() toggleScrollingFrame(playerScroll) end)
guiButton.MouseButton1Click:Connect(function() toggleScrollingFrame(guiScroll) end)

-- ====== PLAYER SELECT DROPDOWN ======
local playerSelectFrame = Instance.new("Frame")
playerSelectFrame.Size = UDim2.new(0,220,0,30)
playerSelectFrame.Position = UDim2.new(0,10,0,10)
playerSelectFrame.BackgroundColor3 = primaryDark
playerSelectFrame.Parent = playerScroll
Instance.new("UICorner", playerSelectFrame).CornerRadius = UDim.new(0,6)

local playerSelectButton = Instance.new("TextButton")
playerSelectButton.Size = UDim2.new(1,0,1,0)
playerSelectButton.BackgroundTransparency = 1
playerSelectButton.Text = "Select Player"
playerSelectButton.TextColor3 = textColor
playerSelectButton.Font = Enum.Font.Gotham
playerSelectButton.TextSize = 14
playerSelectButton.Parent = playerSelectFrame

local playerListFrame = Instance.new("ScrollingFrame")
playerListFrame.Size = UDim2.new(0,220,0,150)
playerListFrame.Position = UDim2.new(0,10,0,50)
playerListFrame.BackgroundColor3 = primaryDark
playerListFrame.ScrollBarThickness = 4
playerListFrame.Visible = false
playerListFrame.CanvasSize = UDim2.new(0,0,0,0)
playerListFrame.Parent = playerScroll
Instance.new("UICorner", playerListFrame).CornerRadius = UDim.new(0,6)

local searchBox = Instance.new("TextBox")
searchBox.Size = UDim2.new(1,-10,0,25)
searchBox.Position = UDim2.new(0,5,0,5)
searchBox.BackgroundColor3 = primaryMedium
searchBox.TextColor3 = textColor
searchBox.PlaceholderText = "Search players..."
searchBox.PlaceholderColor3 = Color3.fromRGB(150,150,150)
searchBox.Text = ""
searchBox.Font = Enum.Font.Gotham
searchBox.TextSize = 12
searchBox.Parent = playerListFrame
Instance.new("UICorner", searchBox).CornerRadius = UDim.new(0,4)

local dropdownOpen = false

local viewButton = Instance.new("TextButton")
viewButton.Text = "View: Off"
viewButton.Size = UDim2.new(0,220,0,30)
viewButton.Position = UDim2.new(0,10,0,50)
viewButton.BackgroundColor3 = primaryMedium
viewButton.TextColor3 = textColor
viewButton.Font = Enum.Font.Gotham
viewButton.TextSize = 14
viewButton.Parent = playerScroll
Instance.new("UICorner", viewButton).CornerRadius = UDim.new(0,6)

local gotoButton = Instance.new("TextButton")
gotoButton.Text = "Goto Player"
gotoButton.Size = UDim2.new(0,220,0,30)
gotoButton.Position = UDim2.new(0,10,0,90)
gotoButton.BackgroundColor3 = primaryMedium
gotoButton.TextColor3 = textColor
gotoButton.Font = Enum.Font.Gotham
gotoButton.TextSize = 14
gotoButton.Parent = playerScroll
Instance.new("UICorner", gotoButton).CornerRadius = UDim.new(0,6)

-- ====== IMPROVED COPY OUTFIT BUTTON ======
local copyOutfitButton = Instance.new("TextButton")
copyOutfitButton.Text = "Copy Outfit"
copyOutfitButton.Size = UDim2.new(0,220,0,30)
copyOutfitButton.Position = UDim2.new(0,10,0,130)
copyOutfitButton.BackgroundColor3 = primaryMedium
copyOutfitButton.TextColor3 = textColor
copyOutfitButton.Font = Enum.Font.Gotham
copyOutfitButton.TextSize = 14
copyOutfitButton.Parent = playerScroll
Instance.new("UICorner", copyOutfitButton).CornerRadius = UDim.new(0,6)

local function updateButtonPositions()
	local baseY = 50
	if dropdownOpen then
		baseY = 210
	end

	local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	tweenService:Create(viewButton, tweenInfo, {Position = UDim2.new(0,10,0,baseY)}):Play()
	tweenService:Create(gotoButton, tweenInfo, {Position = UDim2.new(0,10,0,baseY + 40)}):Play()
	tweenService:Create(copyOutfitButton, tweenInfo, {Position = UDim2.new(0,10,0,baseY + 80)}):Play()

	playerScroll.CanvasSize = UDim2.new(0,0,0,math.max(baseY + 120, 450))
end

function updatePlayerList(searchQuery)
	searchQuery = searchQuery or ""
	searchQuery = searchQuery:lower()

	for _, child in pairs(playerListFrame:GetChildren()) do
		if child:IsA("TextButton") and child ~= searchBox then
			child:Destroy()
		end
	end

	local yPos = 35
	local players = game.Players:GetPlayers()
	local matchingPlayers = {}

	for _, targetPlayer in pairs(players) do
		if targetPlayer ~= player then
			local playerName = targetPlayer.Name:lower()
			if searchQuery == "" or playerName:find(searchQuery, 1, true) then
				table.insert(matchingPlayers, targetPlayer)
			end
		end
	end

	for _, targetPlayer in pairs(matchingPlayers) do
		local playerBtn = Instance.new("TextButton")
		playerBtn.Size = UDim2.new(1,-10,0,30)
		playerBtn.Position = UDim2.new(0,5,0,yPos)
		playerBtn.BackgroundColor3 = primaryMedium
		playerBtn.TextColor3 = textColor
		playerBtn.Text = targetPlayer.Name
		playerBtn.Font = Enum.Font.Gotham
		playerBtn.TextSize = 12
		playerBtn.Parent = playerListFrame
		Instance.new("UICorner", playerBtn).CornerRadius = UDim.new(0,4)

		playerBtn.MouseButton1Click:Connect(function()
			selectedPlayer = targetPlayer
			playerSelectButton.Text = targetPlayer.Name
			playerListFrame.Visible = false
			dropdownOpen = false
			updateButtonPositions()
		end)

		yPos = yPos + 35
	end

	playerListFrame.CanvasSize = UDim2.new(0,0,0,yPos + 5)
	updateButtonPositions()
end

playerSelectButton.MouseButton1Click:Connect(function()
	dropdownOpen = not dropdownOpen
	playerListFrame.Visible = dropdownOpen
	if dropdownOpen then
		searchBox.Text = ""
		updatePlayerList("")
	else
		updateButtonPositions()
	end
end)

searchBox:GetPropertyChangedSignal("Text"):Connect(function()
	updatePlayerList(searchBox.Text)
end)

-- ====== IMPROVED COPY OUTFIT FUNCTIONALITY ======
local function copyPlayerOutfit(targetPlayer)
	if not targetPlayer or not targetPlayer.Character then 
		return false, "Target player or character not found"
	end

	if not player.Character then 
		return false, "Your character not found"
	end

	print("[OUTFIT] Starting outfit copy from " .. targetPlayer.Name)

	local targetCharacter = targetPlayer.Character
	local myCharacter = player.Character
	local targetUserId = targetPlayer.UserId

	-- Schritt 1: HumanoidDescription kopieren
	spawn(function()
		local success, targetDescription = pcall(function()
			return game.Players:GetHumanoidDescriptionFromUserId(targetUserId)
		end)
		
		if success and targetDescription then
			local myHumanoid = myCharacter:FindFirstChild("Humanoid")
			if myHumanoid then
				pcall(function()
					myHumanoid:ApplyDescription(targetDescription)
				end)
				print("[OUTFIT] Applied HumanoidDescription")
			end
		end
	end)

	-- Schritt 2: Warten und dann manuelle Kopie für bessere Genauigkeit
	wait(1)
	
	spawn(function()
		-- Alle Accessories entfernen
		for _, accessory in pairs(myCharacter:GetChildren()) do
			if accessory:IsA("Accessory") then
				accessory:Destroy()
			end
		end
		
		-- Kleidung entfernen
		for _, item in pairs(myCharacter:GetChildren()) do
			if item:IsA("Shirt") or item:IsA("Pants") or item:IsA("ShirtGraphic") then
				item:Destroy()
			end
		end

		wait(0.5)

		-- Kopiere Accessories vom Target
		for _, accessory in pairs(targetCharacter:GetChildren()) do
			if accessory:IsA("Accessory") then
				local clonedAccessory = accessory:Clone()
				clonedAccessory.Parent = myCharacter
			end
		end

		-- Kopiere Kleidung vom Target
		local targetShirt = targetCharacter:FindFirstChild("Shirt")
		local targetPants = targetCharacter:FindFirstChild("Pants")
		local targetShirtGraphic = targetCharacter:FindFirstChild("ShirtGraphic")

		if targetShirt then
			local newShirt = Instance.new("Shirt")
			newShirt.ShirtTemplate = targetShirt.ShirtTemplate
			newShirt.Parent = myCharacter
		end

		if targetPants then
			local newPants = Instance.new("Pants")
			newPants.PantsTemplate = targetPants.PantsTemplate
			newPants.Parent = myCharacter
		end

		if targetShirtGraphic then
			local newShirtGraphic = Instance.new("ShirtGraphic")
			newShirtGraphic.Graphic = targetShirtGraphic.Graphic
			newShirtGraphic.Parent = myCharacter
		end

		-- Kopiere Body Colors
		local targetBodyColors = targetCharacter:FindFirstChild("Body Colors")
		local myBodyColors = myCharacter:FindFirstChild("Body Colors")

		if targetBodyColors and myBodyColors then
			myBodyColors.HeadColor = targetBodyColors.HeadColor
			myBodyColors.LeftArmColor = targetBodyColors.LeftArmColor
			myBodyColors.LeftLegColor = targetBodyColors.LeftLegColor
			myBodyColors.RightArmColor = targetBodyColors.RightArmColor
			myBodyColors.RightLegColor = targetBodyColors.RightLegColor
			myBodyColors.TorsoColor = targetBodyColors.TorsoColor
		end

		-- Kopiere Körperteile (für R6/R15 Kompatibilität)
		for _, part in pairs(targetCharacter:GetChildren()) do
			if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
				local myPart = myCharacter:FindFirstChild(part.Name)
				if myPart and myPart:IsA("BasePart") then
					-- Kopiere Mesh/SpecialMesh falls vorhanden
					local targetMesh = part:FindFirstChildOfClass("SpecialMesh") or part:FindFirstChildOfClass("Mesh")
					if targetMesh then
						local existingMesh = myPart:FindFirstChildOfClass("SpecialMesh") or myPart:FindFirstChildOfClass("Mesh")
						if existingMesh then
							existingMesh:Destroy()
						end
						local newMesh = targetMesh:Clone()
						newMesh.Parent = myPart
					end

					-- Kopiere Decals/Textures
					for _, decal in pairs(part:GetChildren()) do
						if decal:IsA("Decal") or decal:IsA("Texture") then
							local existingDecal = myPart:FindFirstChild(decal.Name)
							if existingDecal then
								existingDecal:Destroy()
							end
							local newDecal = decal:Clone()
							newDecal.Parent = myPart
						end
					end
				end
			end
		end

		print("[OUTFIT] Manual outfit copy completed")
	end)

	-- Schritt 3: Finale Überprüfung und Korrekturen nach weiterer Wartezeit
	spawn(function()
		wait(3)
		
		-- Letzte Überprüfung für fehlende Teile
		for _, accessory in pairs(targetCharacter:GetChildren()) do
			if accessory:IsA("Accessory") then
				local exists = false
				for _, myAccessory in pairs(myCharacter:GetChildren()) do
					if myAccessory:IsA("Accessory") and myAccessory.Name == accessory.Name then
						exists = true
						break
					end
				end
				if not exists then
					local clonedAccessory = accessory:Clone()
					clonedAccessory.Parent = myCharacter
				end
			end
		end
		
		print("[OUTFIT] Final verification completed")
	end)

	return true, "Outfit copy initiated successfully"
end

-- ====== VIEW FUNCTIONALITY ======
local function stopViewing()
	if cameraConnection then
		cameraConnection:Disconnect()
		cameraConnection = nil
	end
	if originalCamera then
		workspace.CurrentCamera.CameraSubject = player.Character and player.Character:FindFirstChild("Humanoid")
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
	end
	viewingPlayer = false
	viewButton.Text = "View: Off"
	viewButton.BackgroundColor3 = primaryMedium
end

local function startViewing(targetPlayer)
	if not targetPlayer or not targetPlayer.Character then return end

	if not originalCamera then
		originalCamera = workspace.CurrentCamera
	end

	local targetHumanoid = targetPlayer.Character:FindFirstChild("Humanoid")
	if targetHumanoid then
		workspace.CurrentCamera.CameraSubject = targetHumanoid
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom

		cameraConnection = targetPlayer.CharacterRemoving:Connect(function()
			stopViewing()
		end)

		viewingPlayer = true
		viewButton.Text = "View: On"
		viewButton.BackgroundColor3 = secondary
	end
end

viewButton.MouseButton1Click:Connect(function()
	if not selectedPlayer then
		playerSelectButton.Text = "Please select a player first!"
		wait(2)
		playerSelectButton.Text = "Select Player"
		return
	end

	if viewingPlayer then
		stopViewing()
	else
		startViewing(selectedPlayer)
	end
end)

gotoButton.MouseButton1Click:Connect(function()
	if not selectedPlayer then
		playerSelectButton.Text = "Please select a player first!"
		wait(2)
		playerSelectButton.Text = "Select Player"
		return
	end

	if not selectedPlayer.Character or not selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
		playerSelectButton.Text = "Player not found!"
		wait(2)
		playerSelectButton.Text = selectedPlayer.Name
		return
	end

	if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
		return
	end

	local targetPosition = selectedPlayer.Character.HumanoidRootPart.Position
	player.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition + Vector3.new(0, 0, 3))
end)

-- ====== COPY OUTFIT BUTTON FUNCTIONALITY ======
copyOutfitButton.MouseButton1Click:Connect(function()
	if not selectedPlayer then
		playerSelectButton.Text = "Please select a player first!"
		wait(2)
		playerSelectButton.Text = "Select Player"
		return
	end

	if not selectedPlayer.Character then
		copyOutfitButton.Text = "Player not loaded!"
		wait(2)
		copyOutfitButton.Text = "Copy Outfit"
		return
	end

	copyOutfitButton.Text = "Copying Outfit..."
	copyOutfitButton.BackgroundColor3 = secondary

	local success, message = copyPlayerOutfit(selectedPlayer)

	if success then
		copyOutfitButton.Text = "Outfit Copied!"
		copyOutfitButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
		print("[SUCCESS] " .. message)
		wait(3)
		copyOutfitButton.Text = "Copy Outfit"
		copyOutfitButton.BackgroundColor3 = primaryMedium
	else
		copyOutfitButton.Text = "Copy Failed!"
		copyOutfitButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		print("[ERROR] " .. message)
		wait(2)
		copyOutfitButton.Text = "Copy Outfit"
		copyOutfitButton.BackgroundColor3 = primaryMedium
	end
end)

-- ====== PLAYER EVENTS ======
game.Players.PlayerAdded:Connect(function()
	if dropdownOpen then
		updatePlayerList(searchBox.Text)
	end
end)

game.Players.PlayerRemoving:Connect(function(leavingPlayer)
	if selectedPlayer == leavingPlayer then
		if viewingPlayer then
			stopViewing()
		end
		selectedPlayer = nil
		playerSelectButton.Text = "Select Player"
	end

	if dropdownOpen then
		updatePlayerList(searchBox.Text)
	end
end)

player.CharacterAdded:Connect(function()
	if viewingPlayer then
		stopViewing()
	end
	character = player.Character
	hrp = character:WaitForChild("HumanoidRootPart")
	humanoid = character:WaitForChild("Humanoid")
end)

-- ====== GUI SETTINGS ======
local closeKeyLabel = Instance.new("TextLabel")
closeKeyLabel.Size = UDim2.new(0,200,0,20)
closeKeyLabel.Position = UDim2.new(0,10,0,20)
closeKeyLabel.BackgroundTransparency = 1
closeKeyLabel.TextColor3 = textColor
closeKeyLabel.TextXAlignment = Enum.TextXAlignment.Left
closeKeyLabel.Text = "GUI Toggle Key"
closeKeyLabel.Parent = guiScroll

local closeKey = Enum.KeyCode.Q
local closeKeyBox = Instance.new("TextBox")
closeKeyBox.Size = UDim2.new(0,200,0,30)
closeKeyBox.Position = UDim2.new(0,10,0,40)
closeKeyBox.Text = "Q"
closeKeyBox.BackgroundColor3 = primaryDark
closeKeyBox.TextColor3 = textColor
closeKeyBox.Font = Enum.Font.Gotham
closeKeyBox.TextSize = 12
closeKeyBox.Parent = guiScroll
Instance.new("UICorner", closeKeyBox).CornerRadius = UDim.new(0,6)

closeKeyBox:GetPropertyChangedSignal("Text"):Connect(function()
	local text = closeKeyBox.Text
	if #text > 1 then text = text:sub(1,1) end
	text = text:upper()
	closeKeyBox.Text = text
	local success, keyEnum = pcall(function() return Enum.KeyCode[text] end)
	if success and keyEnum then closeKey = keyEnum end
end)

uis.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == closeKey then
		mainFrame.Visible = not mainFrame.Visible
	end
end)

-- ====== FLY SETTINGS ======
local flyOnOff = Instance.new("TextButton")
flyOnOff.Text = "Fly: Off"
flyOnOff.Size = UDim2.new(0,200,0,30)
flyOnOff.Position = UDim2.new(0,10,0,10)
flyOnOff.BackgroundColor3 = primaryMedium
flyOnOff.TextColor3 = textColor
flyOnOff.Parent = flyScroll
Instance.new("UICorner", flyOnOff).CornerRadius = UDim.new(0,6)

local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(0,200,0,20)
speedLabel.Position = UDim2.new(0,10,0,60)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = textColor
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.Text = "Fly Speed:"
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 12
speedLabel.Parent = flyScroll

local speedBox = Instance.new("TextBox")
speedBox.Size = UDim2.new(0,200,0,30)
speedBox.Position = UDim2.new(0,10,0,80)
speedBox.Text = tostring(flySpeed)
speedBox.BackgroundColor3 = primaryDark
speedBox.TextColor3 = textColor
speedBox.Font = Enum.Font.Gotham
speedBox.TextSize = 12
speedBox.Parent = flyScroll
Instance.new("UICorner", speedBox).CornerRadius = UDim.new(0,6)

local keyLabel = Instance.new("TextLabel")
keyLabel.Size = UDim2.new(0,200,0,20)
keyLabel.Position = UDim2.new(0,10,0,130)
keyLabel.BackgroundTransparency = 1
keyLabel.TextColor3 = textColor
keyLabel.TextXAlignment = Enum.TextXAlignment.Left
keyLabel.Text = "Fly Key:"
keyLabel.Font = Enum.Font.Gotham
keyLabel.TextSize = 12
keyLabel.Parent = flyScroll

local keyBox = Instance.new("TextBox")
keyBox.Size = UDim2.new(0,200,0,30)
keyBox.Position = UDim2.new(0,10,0,150)
keyBox.Text = flyKey.Name
keyBox.BackgroundColor3 = primaryDark
keyBox.TextColor3 = textColor
keyBox.Font = Enum.Font.Gotham
keyBox.TextSize = 12
keyBox.Parent = flyScroll
Instance.new("UICorner", keyBox).CornerRadius = UDim.new(0,6)

local noclipButton = Instance.new("TextButton")
noclipButton.Text = "Fly Noclip: Off"
noclipButton.Size = UDim2.new(0,200,0,30)
noclipButton.Position = UDim2.new(0,10,0,190)
noclipButton.BackgroundColor3 = primaryMedium
noclipButton.TextColor3 = textColor
noclipButton.Parent = flyScroll
Instance.new("UICorner", noclipButton).CornerRadius = UDim.new(0,6)

-- ====== COLOR PICKER FUNCTION ======
local function createColorPicker(labelText, defaultColor, yPos, onChange)
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(0,200,0,20)
	label.Position = UDim2.new(0,10,0,yPos)
	label.BackgroundTransparency = 1
	label.TextColor3 = textColor
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Text = labelText
	label.Font = Enum.Font.Gotham
	label.TextSize = 12
	label.Parent = guiScroll

	local colorBox = Instance.new("TextButton")
	colorBox.Size = UDim2.new(0,200,0,30)
	colorBox.Position = UDim2.new(0,10,0,yPos+20)
	colorBox.BackgroundColor3 = defaultColor
	colorBox.Text = ""
	colorBox.BorderSizePixel = 2
	colorBox.BorderColor3 = Color3.fromRGB(100,100,100)
	colorBox.Parent = guiScroll
	Instance.new("UICorner", colorBox).CornerRadius = UDim.new(0,6)

	local pickerOpen = false
	local pickerFrame

	local colors = {
		Color3.fromRGB(30,30,30), Color3.fromRGB(50,50,50), Color3.fromRGB(70,70,70),
		Color3.fromRGB(100,0,255), Color3.fromRGB(128,0,255), Color3.fromRGB(200,50,255),
		Color3.fromRGB(255,0,0), Color3.fromRGB(0,255,0), Color3.fromRGB(0,0,255),
		Color3.fromRGB(255,255,0), Color3.fromRGB(255,128,0), Color3.fromRGB(128,0,128),
		Color3.fromRGB(0,255,255), Color3.fromRGB(255,192,203), Color3.fromRGB(192,192,192)
	}

	colorBox.MouseButton1Click:Connect(function()
		if pickerOpen then
			if pickerFrame then pickerFrame:Destroy() end
			pickerOpen = false
			return
		end
		pickerOpen = true
		pickerFrame = Instance.new("Frame")
		pickerFrame.Size = UDim2.new(0,200,0,160)
		pickerFrame.Position = colorBox.Position + UDim2.new(0,0,0,35)
		pickerFrame.BackgroundColor3 = primaryMedium
		pickerFrame.Parent = guiScroll
		Instance.new("UICorner", pickerFrame).CornerRadius = UDim.new(0,8)

		local closeBtn = Instance.new("TextButton")
		closeBtn.Size = UDim2.new(0,20,0,20)
		closeBtn.Position = UDim2.new(1,-25,0,5)
		closeBtn.BackgroundColor3 = Color3.fromRGB(255,0,0)
		closeBtn.Text = "X"
		closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
		closeBtn.Font = Enum.Font.GothamBold
		closeBtn.TextSize = 12
		closeBtn.Parent = pickerFrame
		Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0,4)
		closeBtn.MouseButton1Click:Connect(function()
			pickerFrame:Destroy()
			pickerOpen = false
		end)

		for i, c in ipairs(colors) do
			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(0,30,0,30)
			btn.Position = UDim2.new(0, 5 + ((i-1)%5)*35, 0, 30 + math.floor((i-1)/5)*35)
			btn.BackgroundColor3 = c
			btn.Text = ""
			btn.BorderSizePixel = 1
			btn.BorderColor3 = Color3.fromRGB(200,200,200)
			btn.Parent = pickerFrame
			Instance.new("UICorner", btn).CornerRadius = UDim.new(0,4)
			btn.MouseButton1Click:Connect(function()
				colorBox.BackgroundColor3 = c
				onChange(c)
				pickerFrame:Destroy()
				pickerOpen = false
			end)
		end
	end)
end

createColorPicker("Primärfarbe:", primaryDark, 80, function(c)
	primaryDark = c
	primaryMedium = c:Lerp(Color3.fromRGB(50,50,50),0.5)
	primaryLight = c:Lerp(Color3.fromRGB(70,70,70),0.7)
	mainFrame.BackgroundColor3 = primaryMedium
	topBar.BackgroundColor3 = primaryLight
	leftScroll.BackgroundColor3 = primaryDark
	flyScroll.BackgroundColor3 = primaryMedium
	guiScroll.BackgroundColor3 = primaryMedium
	espScroll.BackgroundColor3 = primaryMedium
	playerScroll.BackgroundColor3 = primaryMedium
	playerSelectFrame.BackgroundColor3 = primaryDark
	playerListFrame.BackgroundColor3 = primaryDark
	flyOnOff.BackgroundColor3 = flying and secondary or primaryMedium
	noclipButton.BackgroundColor3 = (noclip and flying) and secondary or primaryMedium
	flyButton.BackgroundColor3 = primaryMedium
	guiButton.BackgroundColor3 = primaryMedium
	espButton.BackgroundColor3 = primaryMedium
	playerButton.BackgroundColor3 = primaryMedium
	viewButton.BackgroundColor3 = viewingPlayer and secondary or primaryMedium
	gotoButton.BackgroundColor3 = primaryMedium
	copyOutfitButton.BackgroundColor3 = primaryMedium
	espPlayerButton.BackgroundColor3 = espEnabled and secondary or primaryMedium
end)

createColorPicker("Sekundärfarbe:", secondary, 140, function(c)
	secondary = c
	flyOnOff.BackgroundColor3 = flying and secondary or primaryMedium
	noclipButton.BackgroundColor3 = (noclip and flying) and secondary or primaryMedium
	viewButton.BackgroundColor3 = viewingPlayer and secondary or primaryMedium
	copyOutfitButton.BackgroundColor3 = primaryMedium
	espPlayerButton.BackgroundColor3 = espEnabled and secondary or primaryMedium
end)

-- ====== FLY LOGIC ======
local function setFlyingAnimations(enabled)
	if enabled then
		for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
			track:Stop()
		end
		humanoid.WalkSpeed = 0
		humanoid.JumpPower = 0
		humanoid:ChangeState(Enum.HumanoidStateType.Physics)
	else
		humanoid.WalkSpeed = 16
		humanoid.JumpPower = 50
	end
end

local function stopFly()
	if bv then bv:Destroy() bv = nil end
	if bg then bg:Destroy() bg = nil end
	humanoid.PlatformStand = false
	setFlyingAnimations(false)
	humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
	humanoid.WalkSpeed = 16
	humanoid.JumpPower = 50
	local velocity = hrp.Velocity
	hrp.Velocity = Vector3.new(velocity.X, 0, velocity.Z)
	for _, part in pairs(character:GetChildren()) do
		if part:IsA("BasePart") then
			part.CanCollide = true
		end
	end
end

flyOnOff.MouseButton1Click:Connect(function()
	flying = not flying
	if flying then
		flyOnOff.Text = "Fly: On"
		flyOnOff.BackgroundColor3 = secondary
		if not bv then
			bv = Instance.new("BodyVelocity")
			bv.MaxForce = Vector3.new(1e5,1e5,1e5)
			bv.Velocity = Vector3.new(0,0,0)
			bv.Parent = hrp
		end
		if not bg then
			bg = Instance.new("BodyGyro")
			bg.MaxTorque = Vector3.new(1e5,1e5,1e5)
			bg.CFrame = hrp.CFrame
			bg.Parent = hrp
		end
		humanoid.PlatformStand = true
		setFlyingAnimations(true)
	else
		flyOnOff.Text = "Fly: Off"
		flyOnOff.BackgroundColor3 = primaryMedium
		stopFly()
	end
end)

uis.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == flyKey then
		flying = not flying
		if flying then
			flyOnOff.Text = "Fly: On"
			flyOnOff.BackgroundColor3 = secondary
			if not bv then
				bv = Instance.new("BodyVelocity")
				bv.MaxForce = Vector3.new(1e5,1e5,1e5)
				bv.Velocity = Vector3.new(0,0,0)
				bv.Parent = hrp
			end
			if not bg then
				bg = Instance.new("BodyGyro")
				bg.MaxTorque = Vector3.new(1e5,1e5,1e5)
				bg.CFrame = hrp.CFrame
				bg.Parent = hrp
			end
			humanoid.PlatformStand = true
			setFlyingAnimations(true)
		else
			flyOnOff.Text = "Fly: Off"
			flyOnOff.BackgroundColor3 = primaryMedium
			stopFly()
		end
	end
end)

speedBox.FocusLost:Connect(function()
	local val = tonumber(speedBox.Text)
	if val then flySpeed = val end
end)

keyBox:GetPropertyChangedSignal("Text"):Connect(function()
	local text = keyBox.Text
	if #text > 1 then text = text:sub(1,1) end
	text = text:upper()
	keyBox.Text = text
	local success, keyEnum = pcall(function() return Enum.KeyCode[text] end)
	if success and keyEnum then flyKey = keyEnum end
end)

noclipButton.MouseButton1Click:Connect(function()
	noclip = not noclip
	if noclip then
		noclipButton.Text = "Fly Noclip: On"
		noclipButton.BackgroundColor3 = secondary
	else
		noclipButton.Text = "Fly Noclip: Off"
		noclipButton.BackgroundColor3 = primaryMedium
	end
end)

-- ====== MAIN FLY LOOP ======
runService.RenderStepped:Connect(function()
	if flying and bv and bg then
		local cam = workspace.CurrentCamera
		local moveDir = Vector3.new(0,0,0)
		if uis:IsKeyDown(Enum.KeyCode.W) then moveDir += cam.CFrame.LookVector end
		if uis:IsKeyDown(Enum.KeyCode.S) then moveDir -= cam.CFrame.LookVector end
		if uis:IsKeyDown(Enum.KeyCode.A) then moveDir -= cam.CFrame.RightVector end
		if uis:IsKeyDown(Enum.KeyCode.D) then moveDir += cam.CFrame.RightVector end
		if uis:IsKeyDown(Enum.KeyCode.Space) then moveDir += Vector3.new(0,1,0) end
		if uis:IsKeyDown(Enum.KeyCode.LeftControl) then moveDir -= Vector3.new(0,1,0) end

		if moveDir.Magnitude > 0 then
			moveDir = moveDir.Unit * flySpeed
		end

		bv.Velocity = moveDir
		bg.CFrame = CFrame.new(hrp.Position, hrp.Position + cam.CFrame.LookVector)

		for _, part in pairs(character:GetChildren()) do
			if part:IsA("BasePart") then
				part.CanCollide = not noclip
			end
		end
	end
end)

print("[SCRIPT] Advanced Character ESP & Outfit Copy Script loaded successfully!")
print("[INFO] ESP Mode: Smooth Character Outline with Health Bar")
print("[INFO] Features: Character outline, health bar display, smooth movement, advanced outfit copying")
print("[CONTROLS] GUI Toggle: Q | Fly Key: E | WASD: Move | Space/LCtrl: Up/Down")
print("[OUTFIT] Copy Outfit: Select player from dropdown, then click Copy Outfit for complete transformation")
