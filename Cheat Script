local player = game.Players.LocalPlayer
local uis = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

local flying = false
local flySpeed = 50
local flyKey = Enum.KeyCode.E
local noclip = false
local bv, bg

-- ====== FLY KEY HANDLING ======
uis.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == flyKey then
		flying = not flying
		if flying then
			flyOnOff.Text = "Fly: On"
			flyOnOff.BackgroundColor3 = secondary
			if not bv then
				bv = Instance.new("BodyVelocity")
				bv.MaxForce = Vector3.new(1e5,1e5,1e5)
				bv.Velocity = Vector3.new(0,0,0)
				bv.Parent = hrp
			end
			if not bg then
				bg = Instance.new("BodyGyro")
				bg.MaxTorque = Vector3.new(1e5,1e5,1e5)
				bg.CFrame = hrp.CFrame
				bg.Parent = hrp
			end
			humanoid.PlatformStand = true
			setFlyingAnimations(true)
		else
			flyOnOff.Text = "Fly: Off"
			flyOnOff.BackgroundColor3 = primaryMedium
			stopFly()
		end
	end
end)

speedBox.FocusLost:Connect(function()
	local val = tonumber(speedBox.Text)
	if val then flySpeed = val end
end)

keyBox:GetPropertyChangedSignal("Text"):Connect(function()
	local text = keyBox.Text
	if #text > 1 then text = text:sub(1,1) end
	text = text:upper()
	keyBox.Text = text
	local success, keyEnum = pcall(function() return Enum.KeyCode[text] end)
	if success and keyEnum then flyKey = keyEnum end
end)

noclipButton.MouseButton1Click:Connect(function()
	noclip = not noclip
	if noclip then
		noclipButton.Text = "Fly Noclip: On"
		noclipButton.BackgroundColor3 = secondary
	else
		noclipButton.Text = "Fly Noclip: Off"
		noclipButton.BackgroundColor3 = primaryMedium
	end
end)

-- ====== FLY MOVEMENT LOOP ======
runService.RenderStepped:Connect(function()
	if flying and bv and bg then
		local cam = workspace.CurrentCamera
		local moveDir = Vector3.new(0,0,0)
		if uis:IsKeyDown(Enum.KeyCode.W) then moveDir += cam.CFrame.LookVector end
		if uis:IsKeyDown(Enum.KeyCode.S) then moveDir -= cam.CFrame.LookVector end
		if uis:IsKeyDown(Enum.KeyCode.A) then moveDir -= cam.CFrame.RightVector end
		if uis:IsKeyDown(Enum.KeyCode.D) then moveDir += cam.CFrame.RightVector end
		if uis:IsKeyDown(Enum.KeyCode.Space) then moveDir += Vector3.new(0,1,0) end
		if uis:IsKeyDown(Enum.KeyCode.LeftControl) then moveDir -= Vector3.new(0,1,0) end

		if moveDir.Magnitude > 0 then
			moveDir = moveDir.Unit * flySpeed
		end

		bv.Velocity = moveDir
		bg.CFrame = CFrame.new(hrp.Position, hrp.Position + cam.CFrame.LookVector)

		for _, part in pairs(character:GetChildren()) do
			if part:IsA("BasePart") then
				part.CanCollide = not noclip
			end
		end
	end
end)

-- ====== CHARACTER RESPAWN HANDLING ======
player.CharacterAdded:Connect(function()
	if viewingPlayer then
		stopViewing()
	end
	character = player.Character
	hrp = character:WaitForChild("HumanoidRootPart")
	humanoid = character:WaitForChild("Humanoid")
	
	-- Reset fly if it was enabled
	if flying then
		flying = false
		flyOnOff.Text = "Fly: Off"
		flyOnOff.BackgroundColor3 = primaryMedium
		if bv then bv:Destroy() bv = nil end
		if bg then bg:Destroy() bg = nil end
	end
end)arben ======
local primaryDark = Color3.fromRGB(30,30,30)
local primaryMedium = Color3.fromRGB(50,50,50)
local primaryLight = Color3.fromRGB(70,70,70)
local secondary = Color3.fromRGB(128,0,255)
local textColor = Color3.fromRGB(255,255,255)

-- ====== GUI erstellen ======
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TabletGUI"
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0,400,0,300)
mainFrame.Position = UDim2.new(0.3,0,0.3,0)
mainFrame.BackgroundColor3 = primaryMedium
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0,12)

local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1,0,0,30)
topBar.BackgroundColor3 = primaryLight
topBar.Parent = mainFrame
Instance.new("UICorner", topBar).CornerRadius = UDim.new(0,12)

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1,0,1,0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Tablet Menu"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 18
titleLabel.TextColor3 = textColor
titleLabel.Parent = topBar

-- ====== Dragging ======
local dragging, dragInput, mousePos, framePos = false, nil, nil, nil
topBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		mousePos = input.Position
		framePos = mainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
topBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)
uis.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - mousePos
		mainFrame.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
	end
end)

-- ====== Left Buttons ======
local leftScroll = Instance.new("ScrollingFrame")
leftScroll.Size = UDim2.new(0,150,1,-30)
leftScroll.Position = UDim2.new(0,0,0,30)
leftScroll.BackgroundColor3 = primaryDark
leftScroll.ScrollBarThickness = 6
leftScroll.Parent = mainFrame
Instance.new("UICorner", leftScroll).CornerRadius = UDim.new(0,8)

local flyButton = Instance.new("TextButton")
flyButton.Text = "Fly Settings"
flyButton.Size = UDim2.new(1,-10,0,50)
flyButton.BackgroundColor3 = primaryMedium
flyButton.TextColor3 = textColor
flyButton.Parent = leftScroll
Instance.new("UICorner", flyButton).CornerRadius = UDim.new(0,6)

local playerButton = Instance.new("TextButton")
playerButton.Text = "Player Settings"
playerButton.Size = UDim2.new(1,-10,0,50)
playerButton.BackgroundColor3 = primaryMedium
playerButton.TextColor3 = textColor
playerButton.Parent = leftScroll
Instance.new("UICorner", playerButton).CornerRadius = UDim.new(0,6)

local guiButton = Instance.new("TextButton")
guiButton.Text = "Gui Settings"
guiButton.Size = UDim2.new(1,-10,0,50)
guiButton.BackgroundColor3 = primaryMedium
guiButton.TextColor3 = textColor
guiButton.Parent = leftScroll
Instance.new("UICorner", guiButton).CornerRadius = UDim.new(0,6)

local function updateLeftButtonPositions()
	local lastY = 5
	flyButton.Position = UDim2.new(0,5,0,lastY)
	lastY = lastY + flyButton.Size.Y.Offset + 5
	playerButton.Position = UDim2.new(0,5,0,lastY)
	lastY = lastY + playerButton.Size.Y.Offset + 5
	guiButton.Position = UDim2.new(0,5,0,lastY)
end
updateLeftButtonPositions()

-- ====== Right Panels ======
local flyScroll = Instance.new("ScrollingFrame")
flyScroll.Size = UDim2.new(0,240,1,-30)
flyScroll.Position = UDim2.new(1,0,0,30)
flyScroll.BackgroundColor3 = primaryMedium
flyScroll.ScrollBarThickness = 6
flyScroll.Visible = false
flyScroll.Parent = mainFrame
Instance.new("UICorner", flyScroll).CornerRadius = UDim.new(0,8)

local playerScroll = Instance.new("ScrollingFrame")
playerScroll.Size = UDim2.new(0,240,1,-30)
playerScroll.Position = UDim2.new(1,0,0,30)
playerScroll.BackgroundColor3 = primaryMedium
playerScroll.ScrollBarThickness = 6
playerScroll.Visible = false
playerScroll.CanvasSize = UDim2.new(0,0,0,400)
playerScroll.Parent = mainFrame
Instance.new("UICorner", playerScroll).CornerRadius = UDim.new(0,8)

local guiScroll = Instance.new("ScrollingFrame")
guiScroll.Size = UDim2.new(0,240,1,-30)
guiScroll.Position = UDim2.new(1,0,0,30)
guiScroll.BackgroundColor3 = primaryMedium
guiScroll.ScrollBarThickness = 6
guiScroll.Visible = false
guiScroll.Parent = mainFrame
Instance.new("UICorner", guiScroll).CornerRadius = UDim.new(0,8)

-- ====== PLAYER SETTINGS VARIABLEN ======
local selectedPlayer = nil
local viewingPlayer = false
local originalCamera = nil
local cameraConnection = nil

-- ====== Toggle Function ======
local function toggleScrollingFrame(frame)
	for _, other in ipairs({flyScroll, playerScroll, guiScroll}) do
		if other ~= frame then
			other.Visible = false
			other.Position = UDim2.new(1,0,0,30)
		end
	end
	frame.Visible = not frame.Visible
	frame.Position = frame.Visible and UDim2.new(0.38,0,0,30) or UDim2.new(1,0,0,30)
end

-- ====== Button Connections ======
flyButton.MouseButton1Click:Connect(function() toggleScrollingFrame(flyScroll) end)
playerButton.MouseButton1Click:Connect(function() toggleScrollingFrame(playerScroll) end)
guiButton.MouseButton1Click:Connect(function() toggleScrollingFrame(guiScroll) end)

-- ====== PLAYER AUSWAHL DROPDOWN ======
local playerSelectFrame = Instance.new("Frame")
playerSelectFrame.Size = UDim2.new(0,220,0,30)
playerSelectFrame.Position = UDim2.new(0,10,0,10)
playerSelectFrame.BackgroundColor3 = primaryDark
playerSelectFrame.Parent = playerScroll
Instance.new("UICorner", playerSelectFrame).CornerRadius = UDim.new(0,6)

local playerSelectButton = Instance.new("TextButton")
playerSelectButton.Size = UDim2.new(1,0,1,0)
playerSelectButton.BackgroundTransparency = 1
playerSelectButton.Text = "Select Player"
playerSelectButton.TextColor3 = textColor
playerSelectButton.Font = Enum.Font.Gotham
playerSelectButton.TextSize = 14
playerSelectButton.Parent = playerSelectFrame

-- Dropdown Liste
local playerListFrame = Instance.new("ScrollingFrame")
playerListFrame.Size = UDim2.new(0,220,0,150)
playerListFrame.Position = UDim2.new(0,10,0,50)
playerListFrame.BackgroundColor3 = primaryDark
playerListFrame.ScrollBarThickness = 4
playerListFrame.Visible = false
playerListFrame.CanvasSize = UDim2.new(0,0,0,0)
playerListFrame.Parent = playerScroll
Instance.new("UICorner", playerListFrame).CornerRadius = UDim.new(0,6)

-- ====== SUCHLEISTE ======
local searchBox = Instance.new("TextBox")
searchBox.Size = UDim2.new(1,-10,0,25)
searchBox.Position = UDim2.new(0,5,0,5)
searchBox.BackgroundColor3 = primaryMedium
searchBox.TextColor3 = textColor
searchBox.PlaceholderText = "Search players..."
searchBox.PlaceholderColor3 = Color3.fromRGB(150,150,150)
searchBox.Text = ""
searchBox.Font = Enum.Font.Gotham
searchBox.TextSize = 12
searchBox.Parent = playerListFrame
Instance.new("UICorner", searchBox).CornerRadius = UDim.new(0,4)

local dropdownOpen = false

local viewButton = Instance.new("TextButton")
viewButton.Text = "View: Off"
viewButton.Size = UDim2.new(0,220,0,30)
viewButton.Position = UDim2.new(0,10,0,50)
viewButton.BackgroundColor3 = primaryMedium
viewButton.TextColor3 = textColor
viewButton.Font = Enum.Font.Gotham
viewButton.TextSize = 14
viewButton.Parent = playerScroll
Instance.new("UICorner", viewButton).CornerRadius = UDim.new(0,6)

local gotoButton = Instance.new("TextButton")
gotoButton.Text = "Goto Player"
gotoButton.Size = UDim2.new(0,220,0,30)
gotoButton.Position = UDim2.new(0,10,0,90)
gotoButton.BackgroundColor3 = primaryMedium
gotoButton.TextColor3 = textColor
gotoButton.Font = Enum.Font.Gotham
gotoButton.TextSize = 14
gotoButton.Parent = playerScroll
Instance.new("UICorner", gotoButton).CornerRadius = UDim.new(0,6)

-- ====== BUTTON POSITIONIERUNG ======
local function updateButtonPositions()
	local baseY = 50
	if dropdownOpen then
		baseY = 50 + 150 + 10
	end
	
	local tweenService = game:GetService("TweenService")
	local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	
	local viewTween = tweenService:Create(viewButton, tweenInfo, {Position = UDim2.new(0,10,0,baseY)})
	local gotoTween = tweenService:Create(gotoButton, tweenInfo, {Position = UDim2.new(0,10,0,baseY + 40)})
	
	viewTween:Play()
	gotoTween:Play()
	
	local totalContentHeight = baseY + 80
	playerScroll.CanvasSize = UDim2.new(0,0,0,math.max(totalContentHeight, 400))
end

-- ====== PLAYER LIST UPDATE FUNKTION ======
function updatePlayerList(searchQuery)
	searchQuery = searchQuery or ""
	searchQuery = searchQuery:lower()
	
	for _, child in pairs(playerListFrame:GetChildren()) do
		if child:IsA("TextButton") and child ~= searchBox then
			child:Destroy()
		end
	end
	
	local yPos = 35
	local players = game.Players:GetPlayers()
	local matchingPlayers = {}
	
	for _, targetPlayer in pairs(players) do
		if targetPlayer ~= player then
			local playerName = targetPlayer.Name:lower()
			if searchQuery == "" or playerName:find(searchQuery, 1, true) then
				table.insert(matchingPlayers, targetPlayer)
			end
		end
	end
	
	for _, targetPlayer in pairs(matchingPlayers) do
		local playerBtn = Instance.new("TextButton")
		playerBtn.Size = UDim2.new(1,-10,0,30)
		playerBtn.Position = UDim2.new(0,5,0,yPos)
		playerBtn.BackgroundColor3 = primaryMedium
		playerBtn.TextColor3 = textColor
		playerBtn.Text = targetPlayer.Name
		playerBtn.Font = Enum.Font.Gotham
		playerBtn.TextSize = 12
		playerBtn.Parent = playerListFrame
		Instance.new("UICorner", playerBtn).CornerRadius = UDim.new(0,4)
		
		playerBtn.MouseButton1Click:Connect(function()
			selectedPlayer = targetPlayer
			playerSelectButton.Text = targetPlayer.Name
			playerListFrame.Visible = false
			dropdownOpen = false
			updateButtonPositions()
		end)
		
		yPos = yPos + 35
	end
	
	playerListFrame.CanvasSize = UDim2.new(0,0,0,yPos + 5)
	updateButtonPositions()
end

-- ====== DROPDOWN EVENTS ======
playerSelectButton.MouseButton1Click:Connect(function()
	dropdownOpen = not dropdownOpen
	playerListFrame.Visible = dropdownOpen
	if dropdownOpen then
		searchBox.Text = ""
		updatePlayerList("")
	else
		updateButtonPositions()
	end
end)

searchBox:GetPropertyChangedSignal("Text"):Connect(function()
	updatePlayerList(searchBox.Text)
end)

-- ====== VIEW FUNKTIONALITÄT ======
local function stopViewing()
	if cameraConnection then
		cameraConnection:Disconnect()
		cameraConnection = nil
	end
	if originalCamera then
		workspace.CurrentCamera.CameraSubject = player.Character and player.Character:FindFirstChild("Humanoid")
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
	end
	viewingPlayer = false
	viewButton.Text = "View: Off"
	viewButton.BackgroundColor3 = primaryMedium
end

local function startViewing(targetPlayer)
	if not targetPlayer or not targetPlayer.Character then return end
	
	if not originalCamera then
		originalCamera = workspace.CurrentCamera
	end
	
	local targetHumanoid = targetPlayer.Character:FindFirstChild("Humanoid")
	if targetHumanoid then
		workspace.CurrentCamera.CameraSubject = targetHumanoid
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		
		cameraConnection = targetPlayer.CharacterRemoving:Connect(function()
			stopViewing()
		end)
		
		viewingPlayer = true
		viewButton.Text = "View: On"
		viewButton.BackgroundColor3 = secondary
	end
end

viewButton.MouseButton1Click:Connect(function()
	if not selectedPlayer then
		playerSelectButton.Text = "Please select a player first!"
		wait(2)
		playerSelectButton.Text = "Select Player"
		return
	end
	
	if viewingPlayer then
		stopViewing()
	else
		startViewing(selectedPlayer)
	end
end)

-- ====== GOTO FUNKTIONALITÄT ======
gotoButton.MouseButton1Click:Connect(function()
	if not selectedPlayer then
		playerSelectButton.Text = "Please select a player first!"
		wait(2)
		playerSelectButton.Text = "Select Player"
		return
	end
	
	if not selectedPlayer.Character or not selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
		playerSelectButton.Text = "Player not found!"
		wait(2)
		playerSelectButton.Text = selectedPlayer.Name
		return
	end
	
	if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
		return
	end
	
	local targetPosition = selectedPlayer.Character.HumanoidRootPart.Position
	player.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition + Vector3.new(0, 0, 3))
end)

-- ====== PLAYER EVENTS ======
game.Players.PlayerAdded:Connect(function()
	if dropdownOpen then
		updatePlayerList(searchBox.Text)
	end
end)

game.Players.PlayerRemoving:Connect(function(leavingPlayer)
	if selectedPlayer == leavingPlayer then
		if viewingPlayer then
			stopViewing()
		end
		selectedPlayer = nil
		playerSelectButton.Text = "Select Player"
	end
	
	if dropdownOpen then
		updatePlayerList(searchBox.Text)
	end
end)

-- ====== GUI SETTINGS ======
local closeKeyLabel = Instance.new("TextLabel")
closeKeyLabel.Size = UDim2.new(0,200,0,20)
closeKeyLabel.Position = UDim2.new(0,10,0,20)
closeKeyLabel.BackgroundTransparency = 1
closeKeyLabel.TextColor3 = textColor
closeKeyLabel.TextXAlignment = Enum.TextXAlignment.Left
closeKeyLabel.Text = "GUI Toggle Key"
closeKeyLabel.Parent = guiScroll

local closeKey = Enum.KeyCode.Q
local closeKeyBox = Instance.new("TextBox")
closeKeyBox.Size = UDim2.new(0,200,0,30)
closeKeyBox.Position = UDim2.new(0,10,0,40)
closeKeyBox.Text = "Q"
closeKeyBox.BackgroundColor3 = primaryDark
closeKeyBox.TextColor3 = textColor
closeKeyBox.Parent = guiScroll
Instance.new("UICorner", closeKeyBox).CornerRadius = UDim.new(0,6)

closeKeyBox:GetPropertyChangedSignal("Text"):Connect(function()
	local text = closeKeyBox.Text
	if #text > 1 then text = text:sub(1,1) end
	text = text:upper()
	closeKeyBox.Text = text
	local success, keyEnum = pcall(function() return Enum.KeyCode[text] end)
	if success and keyEnum then closeKey = keyEnum end
end)

uis.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == closeKey then
		mainFrame.Visible = not mainFrame.Visible
	end
end)

-- ====== FLY SETTINGS ======
local flyOnOff = Instance.new("TextButton")
flyOnOff.Text = "Fly: Off"
flyOnOff.Size = UDim2.new(0,200,0,30)
flyOnOff.Position = UDim2.new(0,10,0,10)
flyOnOff.BackgroundColor3 = primaryMedium
flyOnOff.TextColor3 = textColor
flyOnOff.Parent = flyScroll
Instance.new("UICorner", flyOnOff).CornerRadius = UDim.new(0,6)

local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(0,200,0,20)
speedLabel.Position = UDim2.new(0,10,0,60)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = textColor
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.Text = "Fly Speed:"
speedLabel.Parent = flyScroll

local speedBox = Instance.new("TextBox")
speedBox.Size = UDim2.new(0,200,0,30)
speedBox.Position = UDim2.new(0,10,0,80)
speedBox.Text = tostring(flySpeed)
speedBox.BackgroundColor3 = primaryDark
speedBox.TextColor3 = textColor
speedBox.Parent = flyScroll
Instance.new("UICorner", speedBox).CornerRadius = UDim.new(0,6)

local keyLabel = Instance.new("TextLabel")
keyLabel.Size = UDim2.new(0,200,0,20)
keyLabel.Position = UDim2.new(0,10,0,130)
keyLabel.BackgroundTransparency = 1
keyLabel.TextColor3 = textColor
keyLabel.TextXAlignment = Enum.TextXAlignment.Left
keyLabel.Text = "Fly Key:"
keyLabel.Parent = flyScroll

local keyBox = Instance.new("TextBox")
keyBox.Size = UDim2.new(0,200,0,30)
keyBox.Position = UDim2.new(0,10,0,150)
keyBox.Text = flyKey.Name
keyBox.BackgroundColor3 = primaryDark
keyBox.TextColor3 = textColor
keyBox.Parent = flyScroll
Instance.new("UICorner", keyBox).CornerRadius = UDim.new(0,6)

local noclipButton = Instance.new("TextButton")
noclipButton.Text = "Fly Noclip: Off"
noclipButton.Size = UDim2.new(0,200,0,30)
noclipButton.Position = UDim2.new(0,10,0,190)
noclipButton.BackgroundColor3 = primaryMedium
noclipButton.TextColor3 = textColor
noclipButton.Parent = flyScroll
Instance.new("UICorner", noclipButton).CornerRadius = UDim.new(0,6)

-- ====== Farbauswahl ======
local function createColorPicker(labelText, defaultColor, yPos, onChange)
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(0,200,0,20)
	label.Position = UDim2.new(0,10,0,yPos)
	label.BackgroundTransparency = 1
	label.TextColor3 = textColor
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Text = labelText
	label.Parent = guiScroll
	
	local colorBox = Instance.new("TextButton")
	colorBox.Size = UDim2.new(0,200,0,30)
	colorBox.Position = UDim2.new(0,10,0,yPos+20)
	colorBox.BackgroundColor3 = defaultColor
	colorBox.Text = ""
	colorBox.BorderSizePixel = 2
	colorBox.Parent = guiScroll
	Instance.new("UICorner", colorBox).CornerRadius = UDim.new(0,6)
	
	local pickerOpen = false
	local pickerFrame
	
	local colors = {
		Color3.fromRGB(30,30,30), Color3.fromRGB(50,50,50), Color3.fromRGB(70,70,70),
		Color3.fromRGB(100,0,255), Color3.fromRGB(128,0,255), Color3.fromRGB(200,50,255),
		Color3.fromRGB(255,0,0), Color3.fromRGB(0,255,0), Color3.fromRGB(0,0,255),
		Color3.fromRGB(255,255,0), Color3.fromRGB(255,128,0), Color3.fromRGB(128,0,128),
		Color3.fromRGB(0,255,255), Color3.fromRGB(255,192,203), Color3.fromRGB(192,192,192)
	}
	
	colorBox.MouseButton1Click:Connect(function()
		if pickerOpen then
			if pickerFrame then pickerFrame:Destroy() end
			pickerOpen = false
			return
		end
		pickerOpen = true
		pickerFrame = Instance.new("Frame")
		pickerFrame.Size = UDim2.new(0,200,0,160)
		pickerFrame.Position = colorBox.Position + UDim2.new(0,0,0,35)
		pickerFrame.BackgroundColor3 = primaryMedium
		pickerFrame.Parent = guiScroll
		Instance.new("UICorner", pickerFrame).CornerRadius = UDim.new(0,8)
		
		local closeBtn = Instance.new("TextButton")
		closeBtn.Size = UDim2.new(0,20,0,20)
		closeBtn.Position = UDim2.new(1,-25,0,5)
		closeBtn.BackgroundColor3 = Color3.fromRGB(255,0,0)
		closeBtn.Text = "X"
		closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
		closeBtn.Parent = pickerFrame
		closeBtn.MouseButton1Click:Connect(function()
			pickerFrame:Destroy()
			pickerOpen = false
		end)
		
		for i, c in ipairs(colors) do
			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(0,30,0,30)
			btn.Position = UDim2.new(0, 5 + ((i-1)%5)*35, 0, 30 + math.floor((i-1)/5)*35)
			btn.BackgroundColor3 = c
			btn.Text = ""
			btn.Parent = pickerFrame
			btn.MouseButton1Click:Connect(function()
				colorBox.BackgroundColor3 = c
				onChange(c)
				pickerFrame:Destroy()
				pickerOpen = false
			end)
		end
	end)
end

createColorPicker("Primärfarbe:", primaryDark, 80, function(c)
	primaryDark = c
	primaryMedium = c:Lerp(Color3.fromRGB(50,50,50),0.5)
	primaryLight = c:Lerp(Color3.fromRGB(70,70,70),0.7)
	mainFrame.BackgroundColor3 = primaryMedium
	topBar.BackgroundColor3 = primaryLight
	leftScroll.BackgroundColor3 = primaryDark
	flyScroll.BackgroundColor3 = primaryMedium
	guiScroll.BackgroundColor3 = primaryMedium
	playerScroll.BackgroundColor3 = primaryMedium
	playerSelectFrame.BackgroundColor3 = primaryDark
	playerListFrame.BackgroundColor3 = primaryDark
	flyOnOff.BackgroundColor3 = flying and secondary or primaryMedium
	noclipButton.BackgroundColor3 = (noclip and flying) and secondary or primaryMedium
	flyButton.BackgroundColor3 = primaryMedium
	guiButton.BackgroundColor3 = primaryMedium
	playerButton.BackgroundColor3 = primaryMedium
	viewButton.BackgroundColor3 = viewingPlayer and secondary or primaryMedium
	gotoButton.BackgroundColor3 = primaryMedium
end)

createColorPicker("Sekundärfarbe:", secondary, 140, function(c)
	secondary = c
	flyOnOff.BackgroundColor3 = flying and secondary or primaryMedium
	noclipButton.BackgroundColor3 = (noclip and flying) and secondary or primaryMedium
	viewButton.BackgroundColor3 = viewingPlayer and secondary or primaryMedium
end)

-- ====== ANIMATION CONTROL ======
local function setFlyingAnimations(enabled)
	if enabled then
		for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
			track:Stop()
		end
		humanoid.WalkSpeed = 0
		humanoid.JumpPower = 0
		humanoid:ChangeState(Enum.HumanoidStateType.Physics)
	else
		humanoid.WalkSpeed = 16
		humanoid.JumpPower = 50
	end
end

-- ====== FLY LOGIC ======
local function stopFly()
	if bv then bv:Destroy() bv = nil end
	if bg then bg:Destroy() bg = nil end
	humanoid.PlatformStand = false
	setFlyingAnimations(false)
	humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
	humanoid.WalkSpeed = 16
	humanoid.JumpPower = 50
	local velocity = hrp.Velocity
	hrp.Velocity = Vector3.new(velocity.X, 0, velocity.Z)
	for _, part in pairs(character:GetChildren()) do
		if part:IsA("BasePart") then
			part.CanCollide = true
		end
	end
end

flyOnOff.MouseButton1Click:Connect(function()
	flying = not flying
	if flying then
		flyOnOff.Text = "Fly: On"
		flyOnOff.BackgroundColor3 = secondary
		if not bv then
			bv = Instance.new("BodyVelocity")
			bv.MaxForce = Vector3.new(1e5,1e5,1e5)
			bv.Velocity = Vector3.new(0,0,0)
			bv.Parent = hrp
		end
		if not bg then
			bg = Instance.new("BodyGyro")
			bg.MaxTorque = Vector3.new(1e5,1e5,1e5)
			bg.CFrame = hrp.CFrame
			bg.Parent = hrp
		end
		humanoid.PlatformStand = true
		setFlyingAnimations(true)
	else
		flyOnOff.Text = "Fly: Off"
		flyOnOff.BackgroundColor3 = primaryMedium
		stopFly()
	end
end)
