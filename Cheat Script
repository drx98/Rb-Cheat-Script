local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Variablen für Funktionen
local flyEnabled = false
local flyConnection = nil
local flySpeed = 50
local invisibleEnabled = false
local espEnabled = false
local nametagsEnabled = false
local highlightColor = Color3.fromRGB(255, 255, 255)
local highlightTransparency = 0.5
local nametagColor = Color3.fromRGB(255, 255, 255)
local nametagSize = 14

-- GUI Farben (Standardwerte)
local primaryColor = Color3.fromRGB(30, 30, 30)
local secondaryColor = Color3.fromRGB(0, 120, 255)

-- Toggle-Taste (Standard: P)
local toggleKey = Enum.KeyCode.P

-- ESP/Highlight Storage
local highlights = {}
local nametags = {}

-- Hauptmenü erstellen
local function createMainGUI()
	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "VyrxisMenu"
	screenGui.Parent = playerGui
	screenGui.ResetOnSpawn = false
	screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	-- Starting Frame
	local startingFrame = Instance.new("Frame")
	startingFrame.Name = "StartingFrame"
	startingFrame.Parent = screenGui
	startingFrame.Size = UDim2.new(0, 300, 0, 150)
	startingFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
	startingFrame.BackgroundColor3 = primaryColor
	startingFrame.BorderSizePixel = 0

	local startingCorner = Instance.new("UICorner")
	startingCorner.CornerRadius = UDim.new(0, 12)
	startingCorner.Parent = startingFrame

	local startingShadow = Instance.new("Frame")
	startingShadow.Name = "Shadow"
	startingShadow.Parent = startingFrame
	startingShadow.Size = UDim2.new(1, 6, 1, 6)
	startingShadow.Position = UDim2.new(0, -3, 0, 3)
	startingShadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	startingShadow.BackgroundTransparency = 0.7
	startingShadow.ZIndex = startingFrame.ZIndex - 1

	local startingShadowCorner = Instance.new("UICorner")
	startingShadowCorner.CornerRadius = UDim.new(0, 12)
	startingShadowCorner.Parent = startingShadow

	local startingLabel = Instance.new("TextLabel")
	startingLabel.Name = "StartingLabel"
	startingLabel.Parent = startingFrame
	startingLabel.Size = UDim2.new(1, 0, 1, 0)
	startingLabel.Position = UDim2.new(0, 0, 0, 0)
	startingLabel.BackgroundTransparency = 1
	startingLabel.Text = "Starting..."
	startingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	startingLabel.TextScaled = true
	startingLabel.Font = Enum.Font.GothamBold

	-- Animation für Starting Frame
	local fadeIn = TweenService:Create(startingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {BackgroundTransparency = 0})
	local fadeOut = TweenService:Create(startingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {BackgroundTransparency = 1})
	local shadowFadeOut = TweenService:Create(startingShadow, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {BackgroundTransparency = 1})
	local textFadeOut = TweenService:Create(startingLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {TextTransparency = 1})

	startingFrame.BackgroundTransparency = 1
	startingShadow.BackgroundTransparency = 1
	startingLabel.TextTransparency = 1

	fadeIn:Play()
	TweenService:Create(startingShadow, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {BackgroundTransparency = 0.7}):Play()
	TweenService:Create(startingLabel, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {TextTransparency = 0}):Play()

	wait(2)

	fadeOut:Play()
	shadowFadeOut:Play()
	textFadeOut:Play()

	fadeOut.Completed:Connect(function()
		startingFrame:Destroy()
	end)

	wait(0.5)

	-- Hauptrahmen (Oberer Bereich)
	local topFrame = Instance.new("Frame")
	topFrame.Name = "TopFrame"
	topFrame.Parent = screenGui
	topFrame.Size = UDim2.new(0, 600, 0, 40)
	topFrame.Position = UDim2.new(0.5, -300, 0.5, -220)
	topFrame.BackgroundColor3 = primaryColor
	topFrame.BorderSizePixel = 0

	local topCorner = Instance.new("UICorner")
	topCorner.CornerRadius = UDim.new(0, 8)
	topCorner.Parent = topFrame

	local topShadow = Instance.new("Frame")
	topShadow.Name = "Shadow"
	topShadow.Parent = topFrame
	topShadow.Size = UDim2.new(1, 6, 1, 6)
	topShadow.Position = UDim2.new(0, -3, 0, 3)
	topShadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	topShadow.BackgroundTransparency = 0.7
	topShadow.ZIndex = topFrame.ZIndex - 1

	local topShadowCorner = Instance.new("UICorner")
	topShadowCorner.CornerRadius = UDim.new(0, 8)
	topShadowCorner.Parent = topShadow

	-- Titel
	local titleLabel = Instance.new("TextLabel")
	titleLabel.Name = "Title"
	titleLabel.Parent = topFrame
	titleLabel.Size = UDim2.new(0, 200, 1, 0)
	titleLabel.Position = UDim2.new(0, 15, 0, 0)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = "Vyrxis Menu"
	titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	titleLabel.TextXAlignment = Enum.TextXAlignment.Left
	titleLabel.TextScaled = true
	titleLabel.Font = Enum.Font.GothamBold

	-- Minimize Button
	local minimizeButton = Instance.new("TextButton")
	minimizeButton.Name = "MinimizeButton"
	minimizeButton.Parent = topFrame
	minimizeButton.Size = UDim2.new(0, 30, 0, 30)
	minimizeButton.Position = UDim2.new(1, -70, 0, 5)
	minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 200, 0)
	minimizeButton.Text = "-"
	minimizeButton.TextColor3 = Color3.fromRGB(0, 0, 0)
	minimizeButton.TextScaled = true
	minimizeButton.Font = Enum.Font.GothamBold
	minimizeButton.BorderSizePixel = 0

	local minimizeCorner = Instance.new("UICorner")
	minimizeCorner.CornerRadius = UDim.new(0, 6)
	minimizeCorner.Parent = minimizeButton

	-- Settings Button
	local settingsButton = Instance.new("TextButton")
	settingsButton.Name = "SettingsButton"
	settingsButton.Parent = topFrame
	settingsButton.Size = UDim2.new(0, 30, 0, 30)
	settingsButton.Position = UDim2.new(1, -35, 0, 5)
	settingsButton.BackgroundColor3 = secondaryColor
	settingsButton.Text = "⚙️"
	settingsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	settingsButton.TextScaled = true
	settingsButton.Font = Enum.Font.Gotham
	settingsButton.BorderSizePixel = 0

	local settingsCorner = Instance.new("UICorner")
	settingsCorner.CornerRadius = UDim.new(0, 6)
	settingsCorner.Parent = settingsButton

	-- Hauptframe
	local mainFrame = Instance.new("Frame")
	mainFrame.Name = "MainFrame"
	mainFrame.Parent = screenGui
	mainFrame.Size = UDim2.new(0, 600, 0, 400)
	mainFrame.Position = UDim2.new(0.5, -300, 0.5, -180)
	mainFrame.BackgroundColor3 = primaryColor
	mainFrame.BorderSizePixel = 0

	local mainCorner = Instance.new("UICorner")
	mainCorner.CornerRadius = UDim.new(0, 8)
	mainCorner.Parent = mainFrame

	local mainShadow = Instance.new("Frame")
	mainShadow.Name = "Shadow"
	mainShadow.Parent = mainFrame
	mainShadow.Size = UDim2.new(1, 6, 1, 6)
	mainShadow.Position = UDim2.new(0, -3, 0, 3)
	mainShadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	mainShadow.BackgroundTransparency = 0.7
	mainShadow.ZIndex = mainFrame.ZIndex - 1

	local mainShadowCorner = Instance.new("UICorner")
	mainShadowCorner.CornerRadius = UDim.new(0, 8)
	mainShadowCorner.Parent = mainShadow

	-- Linke Seitenleiste (Kategorien)
	local categoryFrame = Instance.new("ScrollingFrame")
	categoryFrame.Name = "CategoryFrame"
	categoryFrame.Parent = mainFrame
	categoryFrame.Size = UDim2.new(0, 180, 1, -20)
	categoryFrame.Position = UDim2.new(0, 10, 0, 10)
	categoryFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	categoryFrame.BorderSizePixel = 0
	categoryFrame.ScrollBarThickness = 6
	categoryFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	categoryFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y

	local categoryCorner = Instance.new("UICorner")
	categoryCorner.CornerRadius = UDim.new(0, 8)
	categoryCorner.Parent = categoryFrame

	local categoryLayout = Instance.new("UIListLayout")
	categoryLayout.Parent = categoryFrame
	categoryLayout.SortOrder = Enum.SortOrder.LayoutOrder
	categoryLayout.Padding = UDim.new(0, 5)

	local categoryPadding = Instance.new("UIPadding")
	categoryPadding.Parent = categoryFrame
	categoryPadding.PaddingTop = UDim.new(0, 10)
	categoryPadding.PaddingBottom = UDim.new(0, 10)
	categoryPadding.PaddingLeft = UDim.new(0, 10)
	categoryPadding.PaddingRight = UDim.new(0, 10)

	-- Kategorien-Titel
	local categoryTitle = Instance.new("TextLabel")
	categoryTitle.Name = "CategoryTitle"
	categoryTitle.Parent = categoryFrame
	categoryTitle.Size = UDim2.new(1, 0, 0, 30)
	categoryTitle.BackgroundTransparency = 1
	categoryTitle.Text = "Liste"
	categoryTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
	categoryTitle.TextScaled = true
	categoryTitle.Font = Enum.Font.GothamBold
	categoryTitle.LayoutOrder = 0

	-- Content Frame (Rechts)
	local contentFrame = Instance.new("Frame")
	contentFrame.Name = "ContentFrame"
	contentFrame.Parent = mainFrame
	contentFrame.Size = UDim2.new(0, 390, 1, -20)
	contentFrame.Position = UDim2.new(0, 200, 0, 10)
	contentFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	contentFrame.BorderSizePixel = 0

	local contentCorner = Instance.new("UICorner")
	contentCorner.CornerRadius = UDim.new(0, 8)
	contentCorner.Parent = contentFrame

	-- Aktuelle Kategorie-ScrollFrames
	local currentCategoryFrame = nil

	-- Funktion zum Erstellen von Kategorien-Buttons
	local function createCategoryButton(name, layoutOrder)
		local button = Instance.new("TextButton")
		button.Name = name.."Button"
		button.Parent = categoryFrame
		button.Size = UDim2.new(1, 0, 0, 35)
		button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		button.Text = name
		button.TextColor3 = Color3.fromRGB(255, 255, 255)
		button.TextScaled = true
		button.Font = Enum.Font.Gotham
		button.BorderSizePixel = 0
		button.LayoutOrder = layoutOrder

		local buttonCorner = Instance.new("UICorner")
		buttonCorner.CornerRadius = UDim.new(0, 6)
		buttonCorner.Parent = button

		-- Hover-Effekt
		button.MouseEnter:Connect(function()
			TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = secondaryColor}):Play()
		end)

		button.MouseLeave:Connect(function()
			TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
		end)

		return button
	end

	-- Funktion zum Erstellen von Content-ScrollFrames
	local function createContentScrollFrame(name)
		local scrollFrame = Instance.new("ScrollingFrame")
		scrollFrame.Name = name.."Content"
		scrollFrame.Parent = contentFrame
		scrollFrame.Size = UDim2.new(1, 0, 1, 0)
		scrollFrame.Position = UDim2.new(0, 0, 0, 0)
		scrollFrame.BackgroundTransparency = 1
		scrollFrame.BorderSizePixel = 0
		scrollFrame.ScrollBarThickness = 6
		scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
		scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
		scrollFrame.Visible = false

		local layout = Instance.new("UIListLayout")
		layout.Parent = scrollFrame
		layout.SortOrder = Enum.SortOrder.LayoutOrder
		layout.Padding = UDim.new(0, 10)

		local padding = Instance.new("UIPadding")
		padding.Parent = scrollFrame
		padding.PaddingTop = UDim.new(0, 15)
		padding.PaddingBottom = UDim.new(0, 15)
		padding.PaddingLeft = UDim.new(0, 15)
		padding.PaddingRight = UDim.new(0, 15)

		return scrollFrame
	end

	-- Funktion zum Erstellen von Buttons
	local function createButton(parent, text, layoutOrder, callback)
		local button = Instance.new("TextButton")
		button.Name = text.."Button"
		button.Parent = parent
		button.Size = UDim2.new(1, 0, 0, 40)
		button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		button.Text = text
		button.TextColor3 = Color3.fromRGB(255, 255, 255)
		button.TextScaled = true
		button.Font = Enum.Font.Gotham
		button.BorderSizePixel = 0
		button.LayoutOrder = layoutOrder

		local corner = Instance.new("UICorner")
		corner.CornerRadius = UDim.new(0, 6)
		corner.Parent = button

		button.MouseEnter:Connect(function()
			TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = secondaryColor}):Play()
		end)

		button.MouseLeave:Connect(function()
			TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
		end)

		button.MouseButton1Click:Connect(callback)

		return button
	end

	-- Funktion zum Erstellen von Slidern
	local function createSlider(parent, text, minValue, maxValue, defaultValue, layoutOrder, callback)
		local frame = Instance.new("Frame")
		frame.Name = text.."SliderFrame"
		frame.Parent = parent
		frame.Size = UDim2.new(1, 0, 0, 60)
		frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		frame.BorderSizePixel = 0
		frame.LayoutOrder = layoutOrder

		local frameCorner = Instance.new("UICorner")
		frameCorner.CornerRadius = UDim.new(0, 6)
		frameCorner.Parent = frame

		local label = Instance.new("TextLabel")
		label.Parent = frame
		label.Size = UDim2.new(1, 0, 0, 25)
		label.Position = UDim2.new(0, 0, 0, 5)
		label.BackgroundTransparency = 1
		label.Text = text..": "..defaultValue
		label.TextColor3 = Color3.fromRGB(255, 255, 255)
		label.TextScaled = true
		label.Font = Enum.Font.Gotham

		local sliderFrame = Instance.new("Frame")
		sliderFrame.Parent = frame
		sliderFrame.Size = UDim2.new(1, -20, 0, 6)
		sliderFrame.Position = UDim2.new(0, 10, 1, -20)
		sliderFrame.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
		sliderFrame.BorderSizePixel = 0

		local sliderCorner = Instance.new("UICorner")
		sliderCorner.CornerRadius = UDim.new(0, 3)
		sliderCorner.Parent = sliderFrame

		local sliderButton = Instance.new("TextButton")
		sliderButton.Parent = sliderFrame
		sliderButton.Size = UDim2.new(0, 20, 0, 20)
		sliderButton.Position = UDim2.new((defaultValue - minValue) / (maxValue - minValue), -10, 0, -7)
		sliderButton.BackgroundColor3 = secondaryColor
		sliderButton.Text = ""
		sliderButton.BorderSizePixel = 0

		local buttonCorner = Instance.new("UICorner")
		buttonCorner.CornerRadius = UDim.new(0, 10)
		buttonCorner.Parent = sliderButton

		local dragging = false

		sliderButton.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
			end
		end)

		UserInputService.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = false
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				local mouse = Players.LocalPlayer:GetMouse()
				local relativeX = math.clamp((mouse.X - sliderFrame.AbsolutePosition.X) / sliderFrame.AbsoluteSize.X, 0, 1)
				local value = math.floor(minValue + (maxValue - minValue) * relativeX)

				sliderButton.Position = UDim2.new(relativeX, -10, 0, -7)
				label.Text = text..": "..value
				callback(value)
			end
		end)

		return frame
	end

	-- Movement Kategorie
	local movementContent = createContentScrollFrame("Movement")
	local movementButton = createCategoryButton("Movement", 1)

	movementButton.MouseButton1Click:Connect(function()
		if currentCategoryFrame then
			currentCategoryFrame.Visible = false
		end
		movementContent.Visible = true
		currentCategoryFrame = movementContent
	end)

	-- Fly Funktion
	local function toggleFly()
		flyEnabled = not flyEnabled
		if flyEnabled then
			local bodyVelocity = Instance.new("BodyVelocity")
			bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
			bodyVelocity.Velocity = Vector3.new(0, 0, 0)
			bodyVelocity.Parent = player.Character.HumanoidRootPart

			flyConnection = RunService.Heartbeat:Connect(function()
				if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
					local camera = Workspace.CurrentCamera
					local direction = Vector3.new(0, 0, 0)

					if UserInputService:IsKeyDown(Enum.KeyCode.W) then
						direction = direction + camera.CFrame.LookVector
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.S) then
						direction = direction - camera.CFrame.LookVector
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.A) then
						direction = direction - camera.CFrame.RightVector
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.D) then
						direction = direction + camera.CFrame.RightVector
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
						direction = direction + Vector3.new(0, 1, 0)
					end
					if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
						direction = direction - Vector3.new(0, 1, 0)
					end

					bodyVelocity.Velocity = direction * flySpeed
				end
			end)
		else
			if flyConnection then
				flyConnection:Disconnect()
				flyConnection = nil
			end
			if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				local bodyVelocity = player.Character.HumanoidRootPart:FindFirstChild("BodyVelocity")
				if bodyVelocity then
					bodyVelocity:Destroy()
				end
			end
		end
	end

	createButton(movementContent, "Toggle Fly", 1, toggleFly)

	createSlider(movementContent, "Fly Speed", 10, 200, 50, 2, function(value)
		flySpeed = value
	end)

	createSlider(movementContent, "Walk Speed", 16, 100, 16, 3, function(value)
		if player.Character and player.Character:FindFirstChild("Humanoid") then
			player.Character.Humanoid.WalkSpeed = value
		end
	end)

	createSlider(movementContent, "Jump Power", 50, 200, 50, 4, function(value)
		if player.Character and player.Character:FindFirstChild("Humanoid") then
			player.Character.Humanoid.JumpPower = value
		end
	end)

	-- Items Kategorie
	local itemsContent = createContentScrollFrame("Items")
	local itemsButton = createCategoryButton("Items", 2)

	itemsButton.MouseButton1Click:Connect(function()
		if currentCategoryFrame then
			currentCategoryFrame.Visible = false
		end
		itemsContent.Visible = true
		currentCategoryFrame = itemsContent
	end)

	local function giveAllItems()
		if not player.Character then return end

		local function searchForTools(parent)
			for _, child in pairs(parent:GetChildren()) do
				if child:IsA("Tool") then
					local clone = child:Clone()
					clone.Parent = player.Backpack
				end
				if child:GetChildren() then
					searchForTools(child)
				end
			end
		end

		searchForTools(ReplicatedStorage)
		if game:GetService("ServerStorage") then
			searchForTools(game:GetService("ServerStorage"))
		end
		searchForTools(Workspace)
	end

	createButton(itemsContent, "Give All Items", 1, giveAllItems)

	-- Unsichtbarkeit Kategorie
	local invisibilityContent = createContentScrollFrame("Invisibility")
	local invisibilityButton = createCategoryButton("Invisibility", 3)

	invisibilityButton.MouseButton1Click:Connect(function()
		if currentCategoryFrame then
			currentCategoryFrame.Visible = false
		end
		invisibilityContent.Visible = true
		currentCategoryFrame = invisibilityContent
	end)

	local function toggleInvisibility()
		invisibleEnabled = not invisibleEnabled
		if player.Character then
			for _, part in pairs(player.Character:GetChildren()) do
				if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
					part.Transparency = invisibleEnabled and 1 or 0
				elseif part:IsA("Accessory") then
					part.Handle.Transparency = invisibleEnabled and 1 or 0
				end
			end

			if player.Character:FindFirstChild("Head") then
				player.Character.Head.face.Transparency = invisibleEnabled and 1 or 0
			end
		end
	end

	createButton(invisibilityContent, "Toggle Invisible", 1, toggleInvisibility)

	-- ESP & Nametags Kategorie
	local espContent = createContentScrollFrame("ESP Settings")
	local espButton = createCategoryButton("ESP Settings", 4)

	espButton.MouseButton1Click:Connect(function()
		if currentCategoryFrame then
			currentCategoryFrame.Visible = false
		end
		espContent.Visible = true
		currentCategoryFrame = espContent
	end)

	local function toggleESP()
		espEnabled = not espEnabled

		if espEnabled then
			for _, otherPlayer in pairs(Players:GetPlayers()) do
				if otherPlayer ~= player and otherPlayer.Character then
					local highlight = Instance.new("Highlight")
					highlight.Parent = otherPlayer.Character
					highlight.FillColor = highlightColor
					highlight.OutlineColor = highlightColor
					highlight.FillTransparency = highlightTransparency
					highlight.OutlineTransparency = 0
					highlights[otherPlayer.UserId] = highlight
				end
			end
		else
			for _, highlight in pairs(highlights) do
				if highlight then
					highlight:Destroy()
				end
			end
			highlights = {}
		end
	end

	local function toggleNametags()
		nametagsEnabled = not nametagsEnabled

		if nametagsEnabled then
			for _, otherPlayer in pairs(Players:GetPlayers()) do
				if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
					local billboard = Instance.new("BillboardGui")
					billboard.Parent = otherPlayer.Character.HumanoidRootPart
					billboard.Size = UDim2.new(0, 200, 0, 50)
					billboard.StudsOffset = Vector3.new(0, -3, 0)
					billboard.Adornee = otherPlayer.Character.HumanoidRootPart

					local nameLabel = Instance.new("TextLabel")
					nameLabel.Parent = billboard
					nameLabel.Size = UDim2.new(1, 0, 1, 0)
					nameLabel.BackgroundTransparency = 1
					nameLabel.Text = otherPlayer.Name
					nameLabel.TextColor3 = nametagColor
					nameLabel.TextSize = nametagSize
					nameLabel.Font = Enum.Font.GothamBold
					nameLabel.TextStrokeTransparency = 0
					nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

					nametags[otherPlayer.UserId] = billboard
				end
			end
		else
			for _, nametag in pairs(nametags) do
				if nametag then
					nametag:Destroy()
				end
			end
			nametags = {}
		end
	end

	createButton(espContent, "Toggle ESP", 1, toggleESP)
	createButton(espContent, "Toggle Nametags", 2, toggleNametags)

	createSlider(espContent, "ESP Transparency", 0, 10, 5, 3, function(value)
		highlightTransparency = value / 10
		for _, highlight in pairs(highlights) do
			if highlight then
				highlight.FillTransparency = highlightTransparency
			end
		end
	end)

	createSlider(espContent, "Nametag Size", 10, 30, 14, 4, function(value)
		nametagSize = value
		for _, nametag in pairs(nametags) do
			if nametag and nametag:FindFirstChild("TextLabel") then
				nametag.TextLabel.TextSize = nametagSize
			end
		end
	end)

	-- Farb-Buttons für ESP
	local colorFrame = Instance.new("Frame")
	colorFrame.Name = "ColorFrame"
	colorFrame.Parent = espContent
	colorFrame.Size = UDim2.new(1, 0, 0, 60)
	colorFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	colorFrame.BorderSizePixel = 0
	colorFrame.LayoutOrder = 5

	local colorFrameCorner = Instance.new("UICorner")
	colorFrameCorner.CornerRadius = UDim.new(0, 6)
	colorFrameCorner.Parent = colorFrame

	local colorLabel = Instance.new("TextLabel")
	colorLabel.Parent = colorFrame
	colorLabel.Size = UDim2.new(1, 0, 0, 20)
	colorLabel.Position = UDim2.new(0, 0, 0, 5)
	colorLabel.BackgroundTransparency = 1
	colorLabel.Text = "ESP Colors"
	colorLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	colorLabel.TextScaled = true
	colorLabel.Font = Enum.Font.Gotham

	local colorLayout = Instance.new("UIListLayout")
	colorLayout.Parent = colorFrame
	colorLayout.SortOrder = Enum.SortOrder.LayoutOrder
	colorLayout.FillDirection = Enum.FillDirection.Horizontal
	colorLayout.Padding = UDim.new(0, 5)

	local colorPadding = Instance.new("UIPadding")
	colorPadding.Parent = colorFrame
	colorPadding.PaddingTop = UDim.new(0, 25)
	colorPadding.PaddingLeft = UDim.new(0, 10)
	colorPadding.PaddingRight = UDim.new(0, 10)
	colorPadding.PaddingBottom = UDim.new(0, 10)

	local colors = {
		{Color3.fromRGB(255, 255, 255), "White"},
		{Color3.fromRGB(255, 0, 0), "Red"},
		{Color3.fromRGB(0, 255, 0), "Green"},
		{Color3.fromRGB(0, 0, 255), "Blue"},
		{Color3.fromRGB(255, 255, 0), "Yellow"},
		{Color3.fromRGB(255, 0, 255), "Purple"}
	}

	for i, colorData in pairs(colors) do
		local colorButton = Instance.new("TextButton")
		colorButton.Name = colorData[2].."Button"
		colorButton.Parent = colorFrame
		colorButton.Size = UDim2.new(0, 45, 0, 25)
		colorButton.BackgroundColor3 = colorData[1]
		colorButton.Text = ""
		colorButton.BorderSizePixel = 0
		colorButton.LayoutOrder = i

		local colorButtonCorner = Instance.new("UICorner")
		colorButtonCorner.CornerRadius = UDim.new(0, 4)
		colorButtonCorner.Parent = colorButton

		colorButton.MouseButton1Click:Connect(function()
			highlightColor = colorData[1]
			nametagColor = colorData[1]

			for _, highlight in pairs(highlights) do
				if highlight then
					highlight.FillColor = highlightColor
					highlight.OutlineColor = highlightColor
				end
			end

			for _, nametag in pairs(nametags) do
				if nametag and nametag:FindFirstChild("TextLabel") then
					nametag.TextLabel.TextColor3 = nametagColor
				end
			end
		end)
	end

	-- Settings Menu erstellen
	local settingsFrame = Instance.new("Frame")
	settingsFrame.Name = "SettingsFrame"
	settingsFrame.Parent = screenGui
	settingsFrame.Size = UDim2.new(0, 400, 0, 300)
	settingsFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
	settingsFrame.BackgroundColor3 = primaryColor
	settingsFrame.BorderSizePixel = 0
	settingsFrame.Visible = false

	local settingsFrameCorner = Instance.new("UICorner")
	settingsFrameCorner.CornerRadius = UDim.new(0, 12)
	settingsFrameCorner.Parent = settingsFrame

	local settingsFrameShadow = Instance.new("Frame")
	settingsFrameShadow.Name = "Shadow"
	settingsFrameShadow.Parent = settingsFrame
	settingsFrameShadow.Size = UDim2.new(1, 6, 1, 6)
	settingsFrameShadow.Position = UDim2.new(0, -3, 0, 3)
	settingsFrameShadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	settingsFrameShadow.BackgroundTransparency = 0.7
	settingsFrameShadow.ZIndex = settingsFrame.ZIndex - 1

	local settingsFrameShadowCorner = Instance.new("UICorner")
	settingsFrameShadowCorner.CornerRadius = UDim.new(0, 12)
	settingsFrameShadowCorner.Parent = settingsFrameShadow

	local settingsTitle = Instance.new("TextLabel")
	settingsTitle.Name = "SettingsTitle"
	settingsTitle.Parent = settingsFrame
	settingsTitle.Size = UDim2.new(1, 0, 0, 40)
	settingsTitle.Position = UDim2.new(0, 0, 0, 0)
	settingsTitle.BackgroundTransparency = 1
	settingsTitle.Text = "Settings"
	settingsTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
	settingsTitle.TextScaled = true
	settingsTitle.Font = Enum.Font.GothamBold

	local closeSettingsButton = Instance.new("TextButton")
	closeSettingsButton.Name = "CloseSettings"
	closeSettingsButton.Parent = settingsFrame
	closeSettingsButton.Size = UDim2.new(0, 30, 0, 30)
	closeSettingsButton.Position = UDim2.new(1, -35, 0, 5)
	closeSettingsButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
	closeSettingsButton.Text = "X"
	closeSettingsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	closeSettingsButton.TextScaled = true
	closeSettingsButton.Font = Enum.Font.GothamBold
	closeSettingsButton.BorderSizePixel = 0

	local closeSettingsCorner = Instance.new("UICorner")
	closeSettingsCorner.CornerRadius = UDim.new(0, 6)
	closeSettingsCorner.Parent = closeSettingsButton

	-- Toggle Key Setting
	local toggleKeyLabel = Instance.new("TextLabel")
	toggleKeyLabel.Name = "ToggleKeyLabel"
	toggleKeyLabel.Parent = settingsFrame
	toggleKeyLabel.Size = UDim2.new(1, -40, 0, 30)
	toggleKeyLabel.Position = UDim2.new(0, 20, 0, 60)
	toggleKeyLabel.BackgroundTransparency = 1
	toggleKeyLabel.Text = "Toggle Key: P (Click to change)"
	toggleKeyLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	toggleKeyLabel.TextXAlignment = Enum.TextXAlignment.Left
	toggleKeyLabel.TextScaled = true
	toggleKeyLabel.Font = Enum.Font.Gotham

	local toggleKeyButton = Instance.new("TextButton")
	toggleKeyButton.Name = "ToggleKeyButton"
	toggleKeyButton.Parent = settingsFrame
	toggleKeyButton.Size = UDim2.new(1, -40, 0, 40)
	toggleKeyButton.Position = UDim2.new(0, 20, 0, 95)
	toggleKeyButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	toggleKeyButton.Text = "Press any key..."
	toggleKeyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	toggleKeyButton.TextScaled = true
	toggleKeyButton.Font = Enum.Font.Gotham
	toggleKeyButton.BorderSizePixel = 0
	toggleKeyButton.Visible = false

	local toggleKeyButtonCorner = Instance.new("UICorner")
	toggleKeyButtonCorner.CornerRadius = UDim.new(0, 6)
	toggleKeyButtonCorner.Parent = toggleKeyButton

	-- Color Settings
	local primaryColorLabel = Instance.new("TextLabel")
	primaryColorLabel.Name = "PrimaryColorLabel"
	primaryColorLabel.Parent = settingsFrame
	primaryColorLabel.Size = UDim2.new(1, -40, 0, 25)
	primaryColorLabel.Position = UDim2.new(0, 20, 0, 150)
	primaryColorLabel.BackgroundTransparency = 1
	primaryColorLabel.Text = "Primary Color"
	primaryColorLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	primaryColorLabel.TextXAlignment = Enum.TextXAlignment.Left
	primaryColorLabel.TextScaled = true
	primaryColorLabel.Font = Enum.Font.Gotham

	local primaryColorFrame = Instance.new("Frame")
	primaryColorFrame.Name = "PrimaryColorFrame"
	primaryColorFrame.Parent = settingsFrame
	primaryColorFrame.Size = UDim2.new(1, -40, 0, 40)
	primaryColorFrame.Position = UDim2.new(0, 20, 0, 180)
	primaryColorFrame.BackgroundTransparency = 1

	local primaryColorLayout = Instance.new("UIListLayout")
	primaryColorLayout.Parent = primaryColorFrame
	primaryColorLayout.SortOrder = Enum.SortOrder.LayoutOrder
	primaryColorLayout.FillDirection = Enum.FillDirection.Horizontal
	primaryColorLayout.Padding = UDim.new(0, 10)

	local primaryColors = {
		Color3.fromRGB(30, 30, 30),
		Color3.fromRGB(50, 50, 50),
		Color3.fromRGB(70, 70, 70),
		Color3.fromRGB(40, 40, 60),
		Color3.fromRGB(60, 40, 40),
		Color3.fromRGB(40, 60, 40)
	}

	for i, color in pairs(primaryColors) do
		local colorBtn = Instance.new("TextButton")
		colorBtn.Name = "PrimaryColor"..i
		colorBtn.Parent = primaryColorFrame
		colorBtn.Size = UDim2.new(0, 50, 0, 30)
		colorBtn.BackgroundColor3 = color
		colorBtn.Text = ""
		colorBtn.BorderSizePixel = 0
		colorBtn.LayoutOrder = i

		local colorBtnCorner = Instance.new("UICorner")
		colorBtnCorner.CornerRadius = UDim.new(0, 6)
		colorBtnCorner.Parent = colorBtn

		colorBtn.MouseButton1Click:Connect(function()
			primaryColor = color
			-- Update all GUI elements with new primary color
			topFrame.BackgroundColor3 = primaryColor
			mainFrame.BackgroundColor3 = primaryColor
			settingsFrame.BackgroundColor3 = primaryColor
		end)
	end

	local secondaryColorLabel = Instance.new("TextLabel")
	secondaryColorLabel.Name = "SecondaryColorLabel"
	secondaryColorLabel.Parent = settingsFrame
	secondaryColorLabel.Size = UDim2.new(1, -40, 0, 25)
	secondaryColorLabel.Position = UDim2.new(0, 20, 0, 230)
	secondaryColorLabel.BackgroundTransparency = 1
	secondaryColorLabel.Text = "Secondary Color"
	secondaryColorLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	secondaryColorLabel.TextXAlignment = Enum.TextXAlignment.Left
	secondaryColorLabel.TextScaled = true
	secondaryColorLabel.Font = Enum.Font.Gotham

	local secondaryColorFrame = Instance.new("Frame")
	secondaryColorFrame.Name = "SecondaryColorFrame"
	secondaryColorFrame.Parent = settingsFrame
	secondaryColorFrame.Size = UDim2.new(1, -40, 0, 40)
	secondaryColorFrame.Position = UDim2.new(0, 20, 0, 260)
	secondaryColorFrame.BackgroundTransparency = 1

	local secondaryColorLayout = Instance.new("UIListLayout")
	secondaryColorLayout.Parent = secondaryColorFrame
	secondaryColorLayout.SortOrder = Enum.SortOrder.LayoutOrder
	secondaryColorLayout.FillDirection = Enum.FillDirection.Horizontal
	secondaryColorLayout.Padding = UDim.new(0, 10)

	local secondaryColors = {
		Color3.fromRGB(0, 120, 255),
		Color3.fromRGB(255, 100, 0),
		Color3.fromRGB(0, 255, 100),
		Color3.fromRGB(255, 0, 150),
		Color3.fromRGB(150, 0, 255),
		Color3.fromRGB(255, 255, 0)
	}

	for i, color in pairs(secondaryColors) do
		local colorBtn = Instance.new("TextButton")
		colorBtn.Name = "SecondaryColor"..i
		colorBtn.Parent = secondaryColorFrame
		colorBtn.Size = UDim2.new(0, 50, 0, 30)
		colorBtn.BackgroundColor3 = color
		colorBtn.Text = ""
		colorBtn.BorderSizePixel = 0
		colorBtn.LayoutOrder = i

		local colorBtnCorner = Instance.new("UICorner")
		colorBtnCorner.CornerRadius = UDim.new(0, 6)
		colorBtnCorner.Parent = colorBtn

		colorBtn.MouseButton1Click:Connect(function()
			secondaryColor = color
			settingsButton.BackgroundColor3 = secondaryColor
		end)
	end

	-- Event Connections
	local waitingForKey = false

	toggleKeyLabel.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			waitingForKey = true
			toggleKeyButton.Visible = true
			toggleKeyLabel.Text = "Toggle Key: Waiting..."
		end
	end)

	UserInputService.InputBegan:Connect(function(input)
		if waitingForKey and input.KeyCode ~= Enum.KeyCode.Unknown then
			toggleKey = input.KeyCode
			toggleKeyLabel.Text = "Toggle Key: "..input.KeyCode.Name
			toggleKeyButton.Visible = false
			waitingForKey = false
		elseif input.KeyCode == toggleKey then
			topFrame.Visible = not topFrame.Visible
			mainFrame.Visible = not mainFrame.Visible
		end
	end)

	minimizeButton.MouseButton1Click:Connect(function()
		mainFrame.Visible = not mainFrame.Visible
	end)

	settingsButton.MouseButton1Click:Connect(function()
		settingsFrame.Visible = not settingsFrame.Visible
	end)

	closeSettingsButton.MouseButton1Click:Connect(function()
		settingsFrame.Visible = false
	end)

	-- Dragging functionality
	local dragging = false
	local dragStart = nil
	local startPos = nil

	topFrame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = topFrame.Position
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local delta = input.Position - dragStart
			topFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
			mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + 40)
		end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	-- Player events for ESP/Nametags
	Players.PlayerAdded:Connect(function(newPlayer)
		newPlayer.CharacterAdded:Connect(function(character)
			wait(1) -- Wait for character to load

			if espEnabled and character then
				local highlight = Instance.new("Highlight")
				highlight.Parent = character
				highlight.FillColor = highlightColor
				highlight.OutlineColor = highlightColor
				highlight.FillTransparency = highlightTransparency
				highlight.OutlineTransparency = 0
				highlights[newPlayer.UserId] = highlight
			end

			if nametagsEnabled and character and character:FindFirstChild("HumanoidRootPart") then
				local billboard = Instance.new("BillboardGui")
				billboard.Parent = character.HumanoidRootPart
				billboard.Size = UDim2.new(0, 200, 0, 50)
				billboard.StudsOffset = Vector3.new(0, -3, 0)
				billboard.Adornee = character.HumanoidRootPart

				local nameLabel = Instance.new("TextLabel")
				nameLabel.Parent = billboard
				nameLabel.Size = UDim2.new(1, 0, 1, 0)
				nameLabel.BackgroundTransparency = 1
				nameLabel.Text = newPlayer.Name
				nameLabel.TextColor3 = nametagColor
				nameLabel.TextSize = nametagSize
				nameLabel.Font = Enum.Font.GothamBold
				nameLabel.TextStrokeTransparency = 0
				nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

				nametags[newPlayer.UserId] = billboard
			end
		end)
	end)

	Players.PlayerRemoving:Connect(function(removingPlayer)
		if highlights[removingPlayer.UserId] then
			highlights[removingPlayer.UserId]:Destroy()
			highlights[removingPlayer.UserId] = nil
		end
		if nametags[removingPlayer.UserId] then
			nametags[removingPlayer.UserId]:Destroy()
			nametags[removingPlayer.UserId] = nil
		end
	end)

	-- Character respawn events
	player.CharacterAdded:Connect(function(character)
		-- Reset fly when character respawns
		if flyEnabled then
			flyEnabled = false
			if flyConnection then
				flyConnection:Disconnect()
				flyConnection = nil
			end
		end

		-- Reset invisibility when character respawns
		if invisibleEnabled then
			invisibleEnabled = false
		end
	end)

	return screenGui
end

-- Start the GUI
createMainGUI()

-- Success message
StarterGui:SetCore("ChatMakeSystemMessage", {
	Text = "Vyrxis Menu successfully loaded! Press P to toggle.";
	Color = Color3.fromRGB(0, 255, 0);
	Font = Enum.Font.GothamBold;
	FontSize = Enum.FontSize.Size18;
})
