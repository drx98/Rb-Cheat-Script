local player = game.Players.LocalPlayer
local uis = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local tweenService = game:GetService("TweenService")
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

local flying = false
local flySpeed = 50
local flyKey = Enum.KeyCode.E
local noclip = false
local bv, bg

-- ====== ESP VARIABLEN (Highlight System) ======
local espEnabled = false
local espColor = Color3.fromRGB(255, 0, 0)
local espObjects = {}

-- ====== Farben ======
local primaryDark = Color3.fromRGB(30,30,30)
local primaryMedium = Color3.fromRGB(50,50,50)
local primaryLight = Color3.fromRGB(70,70,70)
local secondary = Color3.fromRGB(128,0,255)
local textColor = Color3.fromRGB(255,255,255)

-- ====== GUI erstellen ======
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TabletGUI"
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0,400,0,300)
mainFrame.Position = UDim2.new(0.3,0,0.3,0)
mainFrame.BackgroundColor3 = primaryMedium
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0,12)

local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1,0,0,30)
topBar.BackgroundColor3 = primaryLight
topBar.Parent = mainFrame
Instance.new("UICorner", topBar).CornerRadius = UDim.new(0,12)

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1,0,1,0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Character ESP - Highlight System"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 16
titleLabel.TextColor3 = textColor
titleLabel.Parent = topBar

-- ====== Dragging ======
local dragging, dragInput, mousePos, framePos = false, nil, nil, nil
topBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		mousePos = input.Position
		framePos = mainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
topBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)
uis.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - mousePos
		mainFrame.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
	end
end)

-- ====== Left Buttons ======
local leftScroll = Instance.new("ScrollingFrame")
leftScroll.Size = UDim2.new(0,150,1,-30)
leftScroll.Position = UDim2.new(0,0,0,30)
leftScroll.BackgroundColor3 = primaryDark
leftScroll.ScrollBarThickness = 6
leftScroll.Parent = mainFrame
Instance.new("UICorner", leftScroll).CornerRadius = UDim.new(0,8)

local flyButton = Instance.new("TextButton")
flyButton.Text = "Fly Settings"
flyButton.Size = UDim2.new(1,-10,0,50)
flyButton.BackgroundColor3 = primaryMedium
flyButton.TextColor3 = textColor
flyButton.Parent = leftScroll
Instance.new("UICorner", flyButton).CornerRadius = UDim.new(0,6)

local espButton = Instance.new("TextButton")
espButton.Text = "ESP Settings"
espButton.Size = UDim2.new(1,-10,0,50)
espButton.BackgroundColor3 = primaryMedium
espButton.TextColor3 = textColor
espButton.Parent = leftScroll
Instance.new("UICorner", espButton).CornerRadius = UDim.new(0,6)

local playerButton = Instance.new("TextButton")
playerButton.Text = "Player Settings"
playerButton.Size = UDim2.new(1,-10,0,50)
playerButton.BackgroundColor3 = primaryMedium
playerButton.TextColor3 = textColor
playerButton.Parent = leftScroll
Instance.new("UICorner", playerButton).CornerRadius = UDim.new(0,6)

local guiButton = Instance.new("TextButton")
guiButton.Text = "Gui Settings"
guiButton.Size = UDim2.new(1,-10,0,50)
guiButton.BackgroundColor3 = primaryMedium
guiButton.TextColor3 = textColor
guiButton.Parent = leftScroll
Instance.new("UICorner", guiButton).CornerRadius = UDim.new(0,6)

local function updateLeftButtonPositions()
	local lastY = 5
	flyButton.Position = UDim2.new(0,5,0,lastY)
	lastY = lastY + flyButton.Size.Y.Offset + 5
	espButton.Position = UDim2.new(0,5,0,lastY)
	lastY = lastY + espButton.Size.Y.Offset + 5
	playerButton.Position = UDim2.new(0,5,0,lastY)
	lastY = lastY + playerButton.Size.Y.Offset + 5
	guiButton.Position = UDim2.new(0,5,0,lastY)
end
updateLeftButtonPositions()

-- ====== Right Panels ======
local flyScroll = Instance.new("ScrollingFrame")
flyScroll.Size = UDim2.new(0,240,1,-30)
flyScroll.Position = UDim2.new(1,0,0,30)
flyScroll.BackgroundColor3 = primaryMedium
flyScroll.ScrollBarThickness = 6
flyScroll.Visible = false
flyScroll.Parent = mainFrame
Instance.new("UICorner", flyScroll).CornerRadius = UDim.new(0,8)

local espScroll = Instance.new("ScrollingFrame")
espScroll.Size = UDim2.new(0,240,1,-30)
espScroll.Position = UDim2.new(1,0,0,30)
espScroll.BackgroundColor3 = primaryMedium
espScroll.ScrollBarThickness = 6
espScroll.Visible = false
espScroll.CanvasSize = UDim2.new(0,0,0,350)
espScroll.Parent = mainFrame
Instance.new("UICorner", espScroll).CornerRadius = UDim.new(0,8)

local playerScroll = Instance.new("ScrollingFrame")
playerScroll.Size = UDim2.new(0,240,1,-30)
playerScroll.Position = UDim2.new(1,0,0,30)
playerScroll.BackgroundColor3 = primaryMedium
playerScroll.ScrollBarThickness = 6
playerScroll.Visible = false
playerScroll.CanvasSize = UDim2.new(0,0,0,450)
playerScroll.Parent = mainFrame
Instance.new("UICorner", playerScroll).CornerRadius = UDim.new(0,8)

local guiScroll = Instance.new("ScrollingFrame")
guiScroll.Size = UDim2.new(0,240,1,-30)
guiScroll.Position = UDim2.new(1,0,0,30)
guiScroll.BackgroundColor3 = primaryMedium
guiScroll.ScrollBarThickness = 6
guiScroll.Visible = false
guiScroll.Parent = mainFrame
Instance.new("UICorner", guiScroll).CornerRadius = UDim.new(0,8)

-- ====== ESP PLAYER BUTTON ======
local espPlayerButton = Instance.new("TextButton")
espPlayerButton.Text = "Character ESP: Off"
espPlayerButton.Size = UDim2.new(0,220,0,40)
espPlayerButton.Position = UDim2.new(0,10,0,20)
espPlayerButton.BackgroundColor3 = primaryMedium
espPlayerButton.TextColor3 = textColor
espPlayerButton.Font = Enum.Font.GothamBold
espPlayerButton.TextSize = 16
espPlayerButton.Parent = espScroll
Instance.new("UICorner", espPlayerButton).CornerRadius = UDim.new(0,6)

-- ====== ESP COLOR PICKER ======
local espColorLabel = Instance.new("TextLabel")
espColorLabel.Size = UDim2.new(0,200,0,20)
espColorLabel.Position = UDim2.new(0,10,0,80)
espColorLabel.BackgroundTransparency = 1
espColorLabel.TextColor3 = textColor
espColorLabel.TextXAlignment = Enum.TextXAlignment.Left
espColorLabel.Text = "ESP Color:"
espColorLabel.Font = Enum.Font.Gotham
espColorLabel.TextSize = 12
espColorLabel.Parent = espScroll

local espColorBox = Instance.new("TextButton")
espColorBox.Size = UDim2.new(0,200,0,30)
espColorBox.Position = UDim2.new(0,10,0,100)
espColorBox.BackgroundColor3 = espColor
espColorBox.Text = ""
espColorBox.BorderSizePixel = 2
espColorBox.BorderColor3 = Color3.fromRGB(100,100,100)
espColorBox.Parent = espScroll
Instance.new("UICorner", espColorBox).CornerRadius = UDim.new(0,6)

-- ====== ESP TRANSPARENCY SLIDER ======
local transparencyLabel = Instance.new("TextLabel")
transparencyLabel.Size = UDim2.new(0,200,0,20)
transparencyLabel.Position = UDim2.new(0,10,0,150)
transparencyLabel.BackgroundTransparency = 1
transparencyLabel.TextColor3 = textColor
transparencyLabel.TextXAlignment = Enum.TextXAlignment.Left
transparencyLabel.Text = "Fill Transparency: 0.7"
transparencyLabel.Font = Enum.Font.Gotham
transparencyLabel.TextSize = 12
transparencyLabel.Parent = espScroll

local transparencySlider = Instance.new("Frame")
transparencySlider.Size = UDim2.new(0,200,0,20)
transparencySlider.Position = UDim2.new(0,10,0,170)
transparencySlider.BackgroundColor3 = primaryDark
transparencySlider.Parent = espScroll
Instance.new("UICorner", transparencySlider).CornerRadius = UDim.new(0,10)

local transparencyKnob = Instance.new("TextButton")
transparencyKnob.Size = UDim2.new(0,20,0,20)
transparencyKnob.Position = UDim2.new(0.7,0,0,0)
transparencyKnob.BackgroundColor3 = secondary
transparencyKnob.Text = ""
transparencyKnob.Parent = transparencySlider
Instance.new("UICorner", transparencyKnob).CornerRadius = UDim.new(0.5,0)

local espTransparency = 0.7
local draggingSlider = false

transparencyKnob.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingSlider = true
	end
end)

uis.InputChanged:Connect(function(input)
	if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
		local sliderPos = transparencySlider.AbsolutePosition.X
		local sliderSize = transparencySlider.AbsoluteSize.X
		local mouseX = input.Position.X
		local relativeX = math.max(0, math.min(sliderSize - 20, mouseX - sliderPos))
		local percentage = relativeX / (sliderSize - 20)

		espTransparency = percentage
		transparencyKnob.Position = UDim2.new(percentage, 0, 0, 0)
		transparencyLabel.Text = "Fill Transparency: " .. string.format("%.2f", espTransparency)

		-- Update alle ESP Objekte
		for _, espData in pairs(espObjects) do
			if espData.highlight and espData.highlight.Parent then
				espData.highlight.FillTransparency = espTransparency
			end
		end
	end
end)

uis.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingSlider = false
	end
end)

-- ====== HIGHLIGHT ESP SYSTEM WITH BILLBOARD HEALTH BAR ======

-- Funktion um alle ESP eines Spielers zu bereinigen
local function cleanupPlayerESP(targetPlayer)
	local playerName = targetPlayer.Name

	if espObjects[playerName] then
		local espData = espObjects[playerName]

		-- Bereinige alle ESP-Komponenten
		for _, component in pairs({"highlight", "healthBillboard", "updateConnection"}) do
			if component == "updateConnection" then
				if espData[component] then
					espData[component]:Disconnect()
				end
			elseif espData[component] and espData[component].Parent then
				espData[component]:Destroy()
			end
		end

		espObjects[playerName] = nil
	end

	print("[ESP] Cleaned up ESP for: " .. playerName)
end

-- Erstelle BillboardGui Health Bar
local function createHealthBar(character, playerName)
	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	if not humanoidRootPart then return nil end

	-- BillboardGui erstellen
	local healthBillboard = Instance.new("BillboardGui")
	healthBillboard.Name = "ESP_HealthBar_" .. playerName
	healthBillboard.Adornee = humanoidRootPart
	healthBillboard.Size = UDim2.new(0, 15, 0, 100) -- Schmaler für vertikale Bar
	healthBillboard.StudsOffset = Vector3.new(3, 0, 0) -- Rechts vom Spieler
	healthBillboard.AlwaysOnTop = true
	healthBillboard.LightInfluence = 0
	healthBillboard.Parent = character

	-- Background Frame
	local backgroundFrame = Instance.new("Frame")
	backgroundFrame.Name = "Background"
	backgroundFrame.Size = UDim2.new(1, 0, 1, 0)
	backgroundFrame.Position = UDim2.new(0, 0, 0, 0)
	backgroundFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	backgroundFrame.BorderSizePixel = 1
	backgroundFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	backgroundFrame.Parent = healthBillboard
	Instance.new("UICorner", backgroundFrame).CornerRadius = UDim.new(0, 3)

	-- Health Frame (füllt sich von unten nach oben)
	local healthFrame = Instance.new("Frame")
	healthFrame.Name = "HealthBar"
	healthFrame.Size = UDim2.new(0.8, 0, 1, -4)
	healthFrame.Position = UDim2.new(0.1, 0, 0, 2)
	healthFrame.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
	healthFrame.BorderSizePixel = 0
	healthFrame.AnchorPoint = Vector2.new(0, 1) -- Anchor unten
	healthFrame.Parent = backgroundFrame
	Instance.new("UICorner", healthFrame).CornerRadius = UDim.new(0, 2)

	-- Health Text
	local healthText = Instance.new("TextLabel")
	healthText.Name = "HealthText"
	healthText.Size = UDim2.new(1, 20, 0, 20)
	healthText.Position = UDim2.new(0, -10, 1, 5)
	healthText.BackgroundTransparency = 1
	healthText.Text = "100"
	healthText.TextColor3 = Color3.fromRGB(255, 255, 255)
	healthText.TextScaled = true
	healthText.Font = Enum.Font.GothamBold
	healthText.TextStrokeTransparency = 0
	healthText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
	healthText.Parent = backgroundFrame

	return healthBillboard
end

-- Erweiterte ESP-Erstellung mit Highlight und Billboard Health Bar
local function createHighlightCharacterESP(targetPlayer)
	if not targetPlayer or targetPlayer == player then return end
	if not targetPlayer.Character then return end

	local playerName = targetPlayer.Name

	-- Bereinige alte ESP-Objekte
	cleanupPlayerESP(targetPlayer)

	local character = targetPlayer.Character
	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	local targetHumanoid = character:FindFirstChild("Humanoid")
	if not humanoidRootPart or not targetHumanoid then return end

	-- Erstelle Highlight für den ganzen Character
	local highlight = Instance.new("Highlight")
	highlight.Name = "ESP_Highlight_" .. playerName
	highlight.Parent = character
	highlight.Adornee = character
	highlight.FillColor = espColor
	highlight.OutlineColor = espColor
	highlight.FillTransparency = espTransparency
	highlight.OutlineTransparency = 0
	highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop

	-- Erstelle Health Bar Billboard
	local healthBillboard = createHealthBar(character, playerName)

	-- Update-Loop für Health Bar
	local lastUpdate = 0
	local updateConnection = runService.Heartbeat:Connect(function()
		local now = tick()
		if now - lastUpdate < 0.1 then return end -- Update alle 0.1 Sekunden
		lastUpdate = now

		if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("Humanoid") then
			cleanupPlayerESP(targetPlayer)
			return
		end

		local currentHumanoid = targetPlayer.Character:FindFirstChild("Humanoid")
		if currentHumanoid and healthBillboard then
			local healthPercentage = math.max(0, currentHumanoid.Health / currentHumanoid.MaxHealth)

			-- Update Health Bar
			local healthFrame = healthBillboard:FindFirstChild("Background"):FindFirstChild("HealthBar")
			local healthText = healthBillboard:FindFirstChild("Background"):FindFirstChild("HealthText")

			if healthFrame then
				healthFrame.Size = UDim2.new(0.8, 0, healthPercentage, -4)
				healthFrame.Position = UDim2.new(0.1, 0, 1 - healthPercentage, 2)

				-- Health bar color based on health percentage
				if healthPercentage > 0.6 then
					healthFrame.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Grün
				elseif healthPercentage > 0.3 then
					healthFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 0) -- Gelb
				else
					healthFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Rot
				end
			end

			if healthText then
				healthText.Text = math.floor(currentHumanoid.Health)
			end
		end
	end)

	-- Speichere ESP-Daten
	espObjects[playerName] = {
		player = targetPlayer,
		character = character,
		highlight = highlight,
		healthBillboard = healthBillboard,
		updateConnection = updateConnection
	}

	print("[ESP] Created Highlight ESP for: " .. playerName)
end

-- Funktion um ESP-Farben zu aktualisieren
local function updateESPColors()
	for playerName, espData in pairs(espObjects) do
		if espData.highlight and espData.highlight.Parent then
			espData.highlight.FillColor = espColor
			espData.highlight.OutlineColor = espColor
			espData.highlight.FillTransparency = espTransparency
		end
	end
end

-- Funktion um ESP für alle Spieler zu aktivieren
local function enableESP()
	print("[ESP] Enabling Highlight Character ESP...")

	for _, targetPlayer in pairs(game.Players:GetPlayers()) do
		if targetPlayer ~= player and targetPlayer.Character then
			spawn(function()
				wait(0.1)
				createHighlightCharacterESP(targetPlayer)
			end)
		end
	end
end

-- Funktion um alle ESP zu deaktivieren
local function disableESP()
	print("[ESP] Disabling Highlight Character ESP...")

	for playerName, espData in pairs(espObjects) do
		cleanupPlayerESP(espData.player)
	end
	espObjects = {}

	print("[ESP] All Highlight ESP removed")
end

-- ====== ESP BUTTON FUNKTIONALITÄT ======
espPlayerButton.MouseButton1Click:Connect(function()
	espEnabled = not espEnabled
	if espEnabled then
		espPlayerButton.Text = "Character ESP: On"
		espPlayerButton.BackgroundColor3 = secondary
		enableESP()
	else
		espPlayerButton.Text = "Character ESP: Off"
		espPlayerButton.BackgroundColor3 = primaryMedium
		disableESP()
	end
end)

-- ====== ESP COLOR PICKER ======
local espPickerOpen = false
local espPickerFrame

local espColors = {
	Color3.fromRGB(255,0,0), Color3.fromRGB(0,255,0), Color3.fromRGB(0,0,255),
	Color3.fromRGB(255,255,0), Color3.fromRGB(255,0,255), Color3.fromRGB(0,255,255),
	Color3.fromRGB(255,128,0), Color3.fromRGB(128,0,255), Color3.fromRGB(255,192,203),
	Color3.fromRGB(255,255,255), Color3.fromRGB(128,128,128), Color3.fromRGB(64,64,64),
	Color3.fromRGB(255,69,0), Color3.fromRGB(50,205,50), Color3.fromRGB(30,144,255)
}

espColorBox.MouseButton1Click:Connect(function()
	if espPickerOpen then
		if espPickerFrame then espPickerFrame:Destroy() end
		espPickerOpen = false
		return
	end

	espPickerOpen = true
	espPickerFrame = Instance.new("Frame")
	espPickerFrame.Size = UDim2.new(0,200,0,160)
	espPickerFrame.Position = UDim2.new(0,10,0,140)
	espPickerFrame.BackgroundColor3 = primaryDark
	espPickerFrame.BorderSizePixel = 1
	espPickerFrame.BorderColor3 = Color3.fromRGB(100,100,100)
	espPickerFrame.Parent = espScroll
	Instance.new("UICorner", espPickerFrame).CornerRadius = UDim.new(0,8)

	local espCloseBtn = Instance.new("TextButton")
	espCloseBtn.Size = UDim2.new(0,20,0,20)
	espCloseBtn.Position = UDim2.new(1,-25,0,5)
	espCloseBtn.BackgroundColor3 = Color3.fromRGB(255,0,0)
	espCloseBtn.Text = "X"
	espCloseBtn.TextColor3 = Color3.fromRGB(255,255,255)
	espCloseBtn.Font = Enum.Font.GothamBold
	espCloseBtn.TextSize = 12
	espCloseBtn.Parent = espPickerFrame
	Instance.new("UICorner", espCloseBtn).CornerRadius = UDim.new(0,4)

	espCloseBtn.MouseButton1Click:Connect(function()
		espPickerFrame:Destroy()
		espPickerOpen = false
	end)

	for i, c in ipairs(espColors) do
		local colorBtn = Instance.new("TextButton")
		colorBtn.Size = UDim2.new(0,30,0,30)
		colorBtn.Position = UDim2.new(0, 5 + ((i-1)%5)*35, 0, 30 + math.floor((i-1)/5)*35)
		colorBtn.BackgroundColor3 = c
		colorBtn.Text = ""
		colorBtn.BorderSizePixel = 1
		colorBtn.BorderColor3 = Color3.fromRGB(200,200,200)
		colorBtn.Parent = espPickerFrame
		Instance.new("UICorner", colorBtn).CornerRadius = UDim.new(0,4)

		colorBtn.MouseButton1Click:Connect(function()
			espColor = c
			espColorBox.BackgroundColor3 = c
			if espEnabled then
				updateESPColors()
			end
			espPickerFrame:Destroy()
			espPickerOpen = false
		end)
	end

	espScroll.CanvasSize = UDim2.new(0,0,0,370)
end)

-- ====== ESP PLAYER EVENTS ======
game.Players.PlayerAdded:Connect(function(newPlayer)
	newPlayer.CharacterAdded:Connect(function()
		if espEnabled then
			wait(1)
			createHighlightCharacterESP(newPlayer)
		end
	end)
end)

game.Players.PlayerRemoving:Connect(function(leavingPlayer)
	cleanupPlayerESP(leavingPlayer)
end)

for _, existingPlayer in pairs(game.Players:GetPlayers()) do
	if existingPlayer ~= player then
		existingPlayer.CharacterAdded:Connect(function()
			if espEnabled then
				wait(1)
				createHighlightCharacterESP(existingPlayer)
			end
		end)

		existingPlayer.CharacterRemoving:Connect(function()
			cleanupPlayerESP(existingPlayer)
		end)
	end
end

-- ====== PLAYER SETTINGS ======
local selectedPlayer = nil
local viewingPlayer = false
local originalCamera = nil
local cameraConnection = nil

local function toggleScrollingFrame(frame)
	for _, other in ipairs({flyScroll, espScroll, playerScroll, guiScroll}) do
		if other ~= frame then
			other.Visible = false
			other.Position = UDim2.new(1,0,0,30)
		end
	end
	frame.Visible = not frame.Visible
	frame.Position = frame.Visible and UDim2.new(0.38,0,0,30) or UDim2.new(1,0,0,30)
end

flyButton.MouseButton1Click:Connect(function() toggleScrollingFrame(flyScroll) end)
espButton.MouseButton1Click:Connect(function() toggleScrollingFrame(espScroll) end)
playerButton.MouseButton1Click:Connect(function() toggleScrollingFrame(playerScroll) end)
guiButton.MouseButton1Click:Connect(function() toggleScrollingFrame(guiScroll) end)

-- ====== PLAYER SELECT DROPDOWN ======
local playerSelectFrame = Instance.new("Frame")
playerSelectFrame.Size = UDim2.new(0,220,0,30)
playerSelectFrame.Position = UDim2.new(0,10,0,10)
playerSelectFrame.BackgroundColor3 = primaryDark
playerSelectFrame.Parent = playerScroll
Instance.new("UICorner", playerSelectFrame).CornerRadius = UDim.new(0,6)

local playerSelectButton = Instance.new("TextButton")
playerSelectButton.Size = UDim2.new(1,0,1,0)
playerSelectButton.BackgroundTransparency = 1
playerSelectButton.Text = "Select Player"
playerSelectButton.TextColor3 = textColor
playerSelectButton.Font = Enum.Font.Gotham
playerSelectButton.TextSize = 14
playerSelectButton.Parent = playerSelectFrame

local playerListFrame = Instance.new("ScrollingFrame")
playerListFrame.Size = UDim2.new(0,220,0,150)
playerListFrame.Position = UDim2.new(0,10,0,50)
playerListFrame.BackgroundColor3 = primaryDark
playerListFrame.ScrollBarThickness = 4
playerListFrame.Visible = false
playerListFrame.CanvasSize = UDim2.new(0,0,0,0)
playerListFrame.Parent = playerScroll
Instance.new("UICorner", playerListFrame).CornerRadius = UDim.new(0,6)

local searchBox = Instance.new("TextBox")
searchBox.Size = UDim2.new(1,-10,0,25)
searchBox.Position = UDim2.new(0,5,0,5)
searchBox.BackgroundColor3 = primaryMedium
searchBox.TextColor3 = textColor
searchBox.PlaceholderText = "Search players..."
searchBox.PlaceholderColor3 = Color3.fromRGB(150,150,150)
searchBox.Text = ""
searchBox.Font = Enum.Font.Gotham
searchBox.TextSize = 12
searchBox.Parent = playerListFrame
Instance.new("UICorner", searchBox).CornerRadius = UDim.new(0,4)

local dropdownOpen = false

local viewButton = Instance.new("TextButton")
viewButton.Text = "View: Off"
viewButton.Size = UDim2.new(0,220,0,30)
viewButton.Position = UDim2.new(0,10,0,50)
viewButton.BackgroundColor3 = primaryMedium
viewButton.TextColor3 = textColor
viewButton.Font = Enum.Font.Gotham
viewButton.TextSize = 14
viewButton.Parent = playerScroll
Instance.new("UICorner", viewButton).CornerRadius = UDim.new(0,6)

local gotoButton = Instance.new("TextButton")
-- Fortsetzung / Abschluss des Scripts

gotoButton.Text = "Goto Player"
gotoButton.Size = UDim2.new(0,220,0,30)
gotoButton.Position = UDim2.new(0,10,0,90)
gotoButton.BackgroundColor3 = primaryMedium
gotoButton.TextColor3 = textColor
gotoButton.Font = Enum.Font.Gotham
gotoButton.TextSize = 14
gotoButton.Parent = playerScroll
Instance.new("UICorner", gotoButton).CornerRadius = UDim.new(0,6)

-- ====== Fly Settings UI ======
local flyToggleButton = Instance.new("TextButton")
flyToggleButton.Text = "Fly: Off (E)"
flyToggleButton.Size = UDim2.new(0,220,0,40)
flyToggleButton.Position = UDim2.new(0,10,0,20)
flyToggleButton.BackgroundColor3 = primaryMedium
flyToggleButton.TextColor3 = textColor
flyToggleButton.Font = Enum.Font.GothamBold
flyToggleButton.TextSize = 16
flyToggleButton.Parent = flyScroll
Instance.new("UICorner", flyToggleButton).CornerRadius = UDim.new(0,6)

local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(0,200,0,20)
speedLabel.Position = UDim2.new(0,10,0,80)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = textColor
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.Text = "Fly Speed: " .. tostring(flySpeed)
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 12
speedLabel.Parent = flyScroll

local speedSlider = Instance.new("Frame")
speedSlider.Size = UDim2.new(0,200,0,20)
speedSlider.Position = UDim2.new(0,10,0,100)
speedSlider.BackgroundColor3 = primaryDark
speedSlider.Parent = flyScroll
Instance.new("UICorner", speedSlider).CornerRadius = UDim.new(0,10)

local speedKnob = Instance.new("TextButton")
speedKnob.Size = UDim2.new(0,20,0,20)
speedKnob.Position = UDim2.new(math.clamp(flySpeed / 200, 0, 1), 0, 0, 0)
speedKnob.BackgroundColor3 = secondary
speedKnob.Text = ""
speedKnob.Parent = speedSlider
Instance.new("UICorner", speedKnob).CornerRadius = UDim.new(0.5,0)

local flyNoclipButton = Instance.new("TextButton")
flyNoclipButton.Text = "Noclip: Off"
flyNoclipButton.Size = UDim2.new(0,220,0,30)
flyNoclipButton.Position = UDim2.new(0,10,0,140)
flyNoclipButton.BackgroundColor3 = primaryMedium
flyNoclipButton.TextColor3 = textColor
flyNoclipButton.Font = Enum.Font.Gotham
flyNoclipButton.TextSize = 14
flyNoclipButton.Parent = flyScroll
Instance.new("UICorner", flyNoclipButton).CornerRadius = UDim.new(0,6)

-- ====== Player List / Dropdown Funktionen ======
local function refreshPlayerList(filter)
	filter = filter or ""
	for _, child in pairs(playerListFrame:GetChildren()) do
		if child:IsA("TextButton") and child ~= searchBox then
			child:Destroy()
		end
	end

	local y = 35
	for _, pl in ipairs(game.Players:GetPlayers()) do
		if pl ~= player and string.find(string.lower(pl.Name), string.lower(filter)) then
			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(1, -10, 0, 30)
			btn.Position = UDim2.new(0, 5, 0, y)
			btn.BackgroundColor3 = primaryMedium
			btn.TextColor3 = textColor
			btn.Font = Enum.Font.Gotham
			btn.TextSize = 14
			btn.Text = pl.Name
			btn.Parent = playerListFrame
			Instance.new("UICorner", btn).CornerRadius = UDim.new(0,4)

			btn.MouseButton1Click:Connect(function()
				selectedPlayer = pl
				playerSelectButton.Text = pl.Name
				playerListFrame.Visible = false
				dropdownOpen = false
			end)

			y = y + 35
		end
	end

	playerListFrame.CanvasSize = UDim2.new(0,0,0, math.max(0, y))
end

playerSelectButton.MouseButton1Click:Connect(function()
	dropdownOpen = not dropdownOpen
	playerListFrame.Visible = dropdownOpen
	if dropdownOpen then
		refreshPlayerList()
	end
end)

searchBox:GetPropertyChangedSignal("Text"):Connect(function()
	refreshPlayerList(searchBox.Text)
end)

-- initial fill
refreshPlayerList()

-- ====== View / Goto Button Logik ======
local camera = workspace.CurrentCamera
local origCameraType = camera.CameraType
local origCameraSubject = camera.CameraSubject

viewButton.MouseButton1Click:Connect(function()
	if not selectedPlayer then
		viewButton.Text = "View: No Player"
		wait(1)
		viewButton.Text = "View: Off"
		return
	end

	viewingPlayer = not viewingPlayer
	if viewingPlayer then
		viewButton.Text = "View: On"
		if selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("Humanoid") then
			origCameraType = camera.CameraType
			origCameraSubject = camera.CameraSubject
			camera.CameraType = Enum.CameraType.Custom
			camera.CameraSubject = selectedPlayer.Character:FindFirstChild("Humanoid")
		end
	else
		viewButton.Text = "View: Off"
		camera.CameraType = origCameraType or Enum.CameraType.Custom
		camera.CameraSubject = origCameraSubject or player.Character and player.Character:FindFirstChild("Humanoid") or camera.CameraSubject
	end
end)

gotoButton.MouseButton1Click:Connect(function()
	if not selectedPlayer then return end
	if not selectedPlayer.Character then return end
	if not selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then return end
	if not character or not hrp then return end

	local targetHRP = selectedPlayer.Character:FindFirstChild("HumanoidRootPart")
	if targetHRP then
		local success, err = pcall(function()
			-- Versuche, den LocalPlayer neben den Zielspieler zu teleportieren
			local offset = CFrame.new(3, 0, 0)
			hrp.CFrame = targetHRP.CFrame * offset
		end)
		if not success then
			warn("[Goto] Teleport failed: ".. tostring(err))
		end
	end
end)

-- ====== Fly / Noclip Logik ======
local keyStates = {W = false, A = false, S = false, D = false, Space = false, LeftShift = false}

uis.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.UserInputType == Enum.UserInputType.Keyboard then
		local key = input.KeyCode
		if key == Enum.KeyCode.W then keyStates.W = true end
		if key == Enum.KeyCode.A then keyStates.A = true end
		if key == Enum.KeyCode.S then keyStates.S = true end
		if key == Enum.KeyCode.D then keyStates.D = true end
		if key == Enum.KeyCode.Space then keyStates.Space = true end
		if key == Enum.KeyCode.LeftShift then keyStates.LeftShift = true end

		-- Fly key toggle
		if key == flyKey then
			flying = not flying
			if flying then
				flyToggleButton.Text = "Fly: On (E)"
				flyToggleButton.BackgroundColor3 = secondary
				-- Create BV and BG
				if hrp then
					bv = Instance.new("BodyVelocity")
					bv.MaxForce = Vector3.new(1e5,1e5,1e5)
					bv.P = 1e4
					bv.Velocity = Vector3.new(0,0,0)
					bv.Parent = hrp

					bg = Instance.new("BodyGyro")
					bg.MaxTorque = Vector3.new(1e5,1e5,1e5)
					bg.P = 1e4
					bg.CFrame = hrp.CFrame
					bg.Parent = hrp
				end
			else
				flyToggleButton.Text = "Fly: Off (E)"
				flyToggleButton.BackgroundColor3 = primaryMedium
				-- Cleanup BV and BG
				if bv then
					if bv.Parent then bv:Destroy() end
					bv = nil
				end
				if bg then
					if bg.Parent then bg:Destroy() end
					bg = nil
				end
			end
		end
	end
end)

uis.InputEnded:Connect(function(input, gpe)
	if gpe then return end
	if input.UserInputType == Enum.UserInputType.Keyboard then
		local key = input.KeyCode
		if key == Enum.KeyCode.W then keyStates.W = false end
		if key == Enum.KeyCode.A then keyStates.A = false end
		if key == Enum.KeyCode.S then keyStates.S = false end
		if key == Enum.KeyCode.D then keyStates.D = false end
		if key == Enum.KeyCode.Space then keyStates.Space = false end
		if key == Enum.KeyCode.LeftShift then keyStates.LeftShift = false end
	end
end)

-- Slider dragging for Fly speed
local draggingSpeed = false
speedKnob.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingSpeed = true
	end
end)
uis.InputChanged:Connect(function(input)
	if draggingSpeed and input.UserInputType == Enum.UserInputType.MouseMovement then
		local sliderPos = speedSlider.AbsolutePosition.X
		local sliderSize = speedSlider.AbsoluteSize.X
		local mouseX = input.Position.X
		local relativeX = math.max(0, math.min(sliderSize - 20, mouseX - sliderPos))
		local percentage = relativeX / (sliderSize - 20)
		local newSpeed = math.floor(percentage * 200) -- max 200
		flySpeed = math.max(5, newSpeed)
		speedKnob.Position = UDim2.new(percentage, 0, 0, 0)
		speedLabel.Text = "Fly Speed: " .. tostring(flySpeed)
	end
end)
uis.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingSpeed = false
	end
end)

flyToggleButton.MouseButton1Click:Connect(function()
	-- manuel per UI umschalten
	flying = not flying
	if flying then
		flyToggleButton.Text = "Fly: On (E)"
		flyToggleButton.BackgroundColor3 = secondary
		if hrp and not bv then
			bv = Instance.new("BodyVelocity")
			bv.MaxForce = Vector3.new(1e5,1e5,1e5)
			bv.P = 1e4
			bv.Velocity = Vector3.new(0,0,0)
			bv.Parent = hrp

			bg = Instance.new("BodyGyro")
			bg.MaxTorque = Vector3.new(1e5,1e5,1e5)
			bg.P = 1e4
			bg.CFrame = hrp.CFrame
			bg.Parent = hrp
		end
	else
		flyToggleButton.Text = "Fly: Off (E)"
		flyToggleButton.BackgroundColor3 = primaryMedium
		if bv then if bv.Parent then bv:Destroy() end bv = nil end
		if bg then if bg.Parent then bg:Destroy() end bg = nil end
	end
end)

flyNoclipButton.MouseButton1Click:Connect(function()
	noclip = not noclip
	if noclip then
		flyNoclipButton.Text = "Noclip: On"
		flyNoclipButton.BackgroundColor3 = secondary
	else
		flyNoclipButton.Text = "Noclip: Off"
		flyNoclipButton.BackgroundColor3 = primaryMedium
	end
end)

-- Noclip function
local function applyNoclip(state)
	if not character then return end
	for _, part in pairs(character:GetDescendants()) do
		if part:IsA("BasePart") then
			pcall(function() part.CanCollide = not state end)
		end
	end
end

-- Flight update loop
runService.RenderStepped:Connect(function(delta)
	-- Noclip maintenance
	if noclip then
		applyNoclip(true)
	end

	-- Flying movement
	if flying and hrp and bv and bg then
		-- Use camera look to determine forward movement
		local camCFrame = camera.CFrame
		local forward = camCFrame.LookVector
		local right = camCFrame.RightVector
		local moveVec = Vector3.new(0,0,0)

		if keyStates.W then moveVec = moveVec + Vector3.new(forward.X, 0, forward.Z) end
		if keyStates.S then moveVec = moveVec - Vector3.new(forward.X, 0, forward.Z) end
		if keyStates.A then moveVec = moveVec - Vector3.new(right.X, 0, right.Z) end
		if keyStates.D then moveVec = moveVec + Vector3.new(right.X, 0, right.Z) end

		moveVec = moveVec.Unit ~= moveVec.Unit and Vector3.new(0,0,0) or moveVec.Unit -- handle zero vector
		local vertical = 0
		if keyStates.Space then vertical = vertical + 1 end
		if keyStates.LeftShift then vertical = vertical - 1 end

		local finalVel = (moveVec * flySpeed) + Vector3.new(0, vertical * flySpeed, 0)
		bv.Velocity = finalVel
		bg.CFrame = CFrame.new(hrp.Position, hrp.Position + camCFrame.LookVector)
	end
end)

-- Cleanup when flying turned off or character removed
local function cleanupFlyComponents()
	if bv then if bv.Parent then bv:Destroy() end bv = nil end
	if bg then if bg.Parent then bg:Destroy() end bg = nil end
end

-- ====== Character Respawn Handling ======
local function onCharacterAdded(char)
	character = char
	hrp = character:WaitForChild("HumanoidRootPart")
	humanoid = character:WaitForChild("Humanoid")

	-- If fly was active, reattach BodyVelocity / BodyGyro
	if flying then
		cleanupFlyComponents()
		bv = Instance.new("BodyVelocity")
		bv.MaxForce = Vector3.new(1e5,1e5,1e5)
		bv.P = 1e4
		bv.Velocity = Vector3.new(0,0,0)
		bv.Parent = hrp

		bg = Instance.new("BodyGyro")
		bg.MaxTorque = Vector3.new(1e5,1e5,1e5)
		bg.P = 1e4
		bg.CFrame = hrp.CFrame
		bg.Parent = hrp
	end

	-- Reapply noclip if active
	if noclip then
		applyNoclip(true)
	end

	-- If we were viewing a player, ensure camera subject is valid
	if viewingPlayer and selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("Humanoid") then
		camera.CameraType = Enum.CameraType.Custom
		camera.CameraSubject = selectedPlayer.Character:FindFirstChild("Humanoid")
	else
		-- restore camera subject to local player if possible
		if player.Character and player.Character:FindFirstChild("Humanoid") then
			camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
		end
	end
end

player.CharacterAdded:Connect(onCharacterAdded)

-- Make sure to cleanup on script disable / player leaving
game:BindToClose(function()
	-- restore camera
	if camera then
		camera.CameraType = origCameraType
		camera.CameraSubject = origCameraSubject
	end
	-- cleanup ESP
	disableESP()
	-- cleanup fly components
	cleanupFlyComponents()
end)

-- Safety: Handle when players leave/join to update list
game.Players.PlayerAdded:Connect(function(pl)
	refreshPlayerList(searchBox.Text)
end)
game.Players.PlayerRemoving:Connect(function(pl)
	-- cleanup any ESP related to them (already handled earlier) and refresh list
	cleanupPlayerESP(pl)
	refreshPlayerList(searchBox.Text)
end)

-- Ensure existing players are in list on script start
refreshPlayerList()

print("[Script] GUI & Funktionen initialisiert.")
