-- Vyrxis Menu Script für Roblox - FEHLERFREIE VERSION MIT 3D FLIGHT
-- Alle Services laden
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Camera = Workspace.CurrentCamera

-- Variablen für Funktionen - ALLE KORREKT INITIALISIERT
local isFlying = false
local flySpeed = 50
local flyBodyVelocity = nil
local flyBodyAngularVelocity = nil
local originalWalkSpeed = 16
local originalJumpHeight = 7.2
local isESPEnabled = false
local isNoclipEnabled = false
local isViewingPlayer = false
local viewingPlayerName = ""
local espColor = Color3.fromRGB(255, 0, 0)
local espTransparency = 0.5
local nametagsEnabled = false
local nametagColor = Color3.fromRGB(255, 255, 255)
local nametagSize = 14
local selectedPlayer = ""
local toggleKey = Enum.KeyCode.Insert
local espHighlights = {}
local nametags = {}
local healthbars = {}
local flyLookDirection = nil

-- GUI erstellen
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "VyrxisMenu"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

-- Load Screen erstellen
local LoadScreen = Instance.new("Frame")
LoadScreen.Name = "LoadScreen"
LoadScreen.Size = UDim2.new(0, 500, 0, 300)
LoadScreen.Position = UDim2.new(0.5, -250, 0.5, -150)
LoadScreen.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
LoadScreen.BorderSizePixel = 0
LoadScreen.Parent = ScreenGui

local LoadScreenCorner = Instance.new("UICorner")
LoadScreenCorner.CornerRadius = UDim.new(0, 20)
LoadScreenCorner.Parent = LoadScreen

local LoadGradient = Instance.new("UIGradient")
LoadGradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 20, 30)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(10, 10, 15))
}
LoadGradient.Rotation = 45
LoadGradient.Parent = LoadScreen

local LoadStroke = Instance.new("UIStroke")
LoadStroke.Color = Color3.fromRGB(0, 200, 255)
LoadStroke.Thickness = 2
LoadStroke.Transparency = 0.3
LoadStroke.Parent = LoadScreen

local LoadText = Instance.new("TextLabel")
LoadText.Name = "LoadText"
LoadText.Size = UDim2.new(1, -40, 0, 60)
LoadText.Position = UDim2.new(0, 20, 0, 50)
LoadText.BackgroundTransparency = 1
LoadText.Text = "Vyrxis Menu"
LoadText.TextColor3 = Color3.fromRGB(255, 255, 255)
LoadText.TextSize = 36
LoadText.Font = Enum.Font.GothamBold
LoadText.Parent = LoadScreen

local LoadSubText = Instance.new("TextLabel")
LoadSubText.Name = "LoadSubText"
LoadSubText.Size = UDim2.new(1, -40, 0, 30)
LoadSubText.Position = UDim2.new(0, 20, 0, 110)
LoadSubText.BackgroundTransparency = 1
LoadSubText.Text = "Starting..."
LoadSubText.TextColor3 = Color3.fromRGB(180, 180, 180)
LoadSubText.TextSize = 18
LoadSubText.Font = Enum.Font.Gotham
LoadSubText.Parent = LoadScreen

-- Main GUI erstellen
local MainRahmen = Instance.new("Frame")
MainRahmen.Name = "MainRahmen"
MainRahmen.Size = UDim2.new(0, 700, 0, 30)
MainRahmen.Position = UDim2.new(0.5, -350, 0.3, -15)
MainRahmen.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
MainRahmen.BorderSizePixel = 0
MainRahmen.Visible = false
MainRahmen.Active = true
MainRahmen.Draggable = true
MainRahmen.Parent = ScreenGui

local RahmenCorner = Instance.new("UICorner")
RahmenCorner.CornerRadius = UDim.new(0, 20)
RahmenCorner.Parent = MainRahmen

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 700, 0, 400)
MainFrame.Position = UDim2.new(0, 0, 1, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
MainFrame.BorderSizePixel = 0
MainFrame.Visible = false
MainFrame.Parent = MainRahmen

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 20)
MainCorner.Parent = MainFrame

-- Kategorie Liste erstellen
local Liste = Instance.new("ScrollingFrame")
Liste.Name = "Liste"
Liste.Size = UDim2.new(0, 150, 1, -10)
Liste.Position = UDim2.new(0, 5, 0, 5)
Liste.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
Liste.BorderSizePixel = 0
Liste.ScrollBarThickness = 5
Liste.Parent = MainFrame

local ListeCorner = Instance.new("UICorner")
ListeCorner.CornerRadius = UDim.new(0, 15)
ListeCorner.Parent = Liste

local ListLayout = Instance.new("UIListLayout")
ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
ListLayout.Padding = UDim.new(0, 5)
ListLayout.Parent = Liste

-- WICHTIG: categoryFrames MUSS VOR der Verwendung initialisiert werden
local categoryFrames = {}

-- Hilfsfunktionen für GUI-Elemente
local function createButton(parent, text, layoutOrder)
	local button = Instance.new("TextButton")
	button.Size = UDim2.new(1, -20, 0, 40)
	button.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
	button.Text = text
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.TextScaled = true
	button.Font = Enum.Font.GothamBold
	button.BorderSizePixel = 0
	button.LayoutOrder = layoutOrder
	button.Parent = parent

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = button

	return button
end

local function createSlider(parent, text, minVal, maxVal, defaultVal, layoutOrder)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1, -20, 0, 60)
	frame.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
	frame.BorderSizePixel = 0
	frame.LayoutOrder = layoutOrder
	frame.Parent = parent

	local frameCorner = Instance.new("UICorner")
	frameCorner.CornerRadius = UDim.new(0, 8)
	frameCorner.Parent = frame

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 0, 25)
	label.Position = UDim2.new(0, 0, 0, 5)
	label.BackgroundTransparency = 1
	label.Text = text .. ": " .. defaultVal
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.TextScaled = true
	label.Font = Enum.Font.GothamBold
	label.Parent = frame

	local slider = Instance.new("Frame")
	slider.Size = UDim2.new(1, -20, 0, 20)
	slider.Position = UDim2.new(0, 10, 0, 30)
	slider.BackgroundColor3 = Color3.fromRGB(8, 8, 12)
	slider.BorderSizePixel = 0
	slider.Parent = frame

	local sliderCorner = Instance.new("UICorner")
	sliderCorner.CornerRadius = UDim.new(0, 10)
	sliderCorner.Parent = slider

	local handle = Instance.new("TextButton")
	handle.Size = UDim2.new(0, 20, 1, 0)
	handle.Position = UDim2.new((defaultVal - minVal) / (maxVal - minVal), -10, 0, 0)
	handle.BackgroundColor3 = Color3.fromRGB(0, 200, 255)
	handle.Text = ""
	handle.BorderSizePixel = 0
	handle.Parent = slider

	local handleCorner = Instance.new("UICorner")
	handleCorner.CornerRadius = UDim.new(1, 0)
	handleCorner.Parent = handle

	local dragging = false
	local currentValue = defaultVal

	handle.MouseButton1Down:Connect(function()
		dragging = true
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local mouse = UserInputService:GetMouseLocation()
			local relativePos = (mouse.X - slider.AbsolutePosition.X) / slider.AbsoluteSize.X
			relativePos = math.clamp(relativePos, 0, 1)

			handle.Position = UDim2.new(relativePos, -10, 0, 0)
			currentValue = minVal + (maxVal - minVal) * relativePos
			label.Text = text .. ": " .. math.floor(currentValue)
		end
	end)

	return function() return math.floor(currentValue) end
end

-- Kategorien erstellen - KORREKTE REIHENFOLGE
local categories = {"Fly", "Me", "Player", "ESP"}

for i, category in pairs(categories) do
	-- Category Button erstellen
	local categoryButton = Instance.new("TextButton")
	categoryButton.Size = UDim2.new(1, -10, 0, 40)
	categoryButton.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
	categoryButton.Text = category
	categoryButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	categoryButton.TextScaled = true
	categoryButton.Font = Enum.Font.GothamBold
	categoryButton.BorderSizePixel = 0
	categoryButton.LayoutOrder = i
	categoryButton.Parent = Liste

	local catCorner = Instance.new("UICorner")
	catCorner.CornerRadius = UDim.new(0, 8)
	catCorner.Parent = categoryButton

	-- Kategorie Frame erstellen
	local categoryFrame = Instance.new("ScrollingFrame")
	categoryFrame.Name = category .. "Frame"
	categoryFrame.Size = UDim2.new(0, 530, 1, -10)
	categoryFrame.Position = UDim2.new(0, 160, 0, 5)
	categoryFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
	categoryFrame.BorderSizePixel = 0
	categoryFrame.ScrollBarThickness = 5
	categoryFrame.Visible = false
	categoryFrame.Parent = MainFrame

	local catFrameCorner = Instance.new("UICorner")
	catFrameCorner.CornerRadius = UDim.new(0, 15)
	catFrameCorner.Parent = categoryFrame

	local catLayout = Instance.new("UIListLayout")
	catLayout.SortOrder = Enum.SortOrder.LayoutOrder
	catLayout.Padding = UDim.new(0, 10)
	catLayout.Parent = categoryFrame

	-- WICHTIG: Frame in categoryFrames speichern
	categoryFrames[category] = categoryFrame

	-- Click Handler für Category Button
	categoryButton.MouseButton1Click:Connect(function()
		for name, frame in pairs(categoryFrames) do
			if frame then
				frame.Visible = (name == category)
			end
		end
	end)
end

-- PROFESSIONELLES 3D FLY SYSTEM
local FlySystem = {}
FlySystem.enabled = false
FlySystem.speed = 50
FlySystem.bodyVelocity = nil
FlySystem.bodyPosition = nil
FlySystem.connection = nil

function FlySystem:Enable()
	if self.enabled then return end
	
	local character = LocalPlayer.Character
	if not character or not character:FindFirstChild("HumanoidRootPart") then return end
	
	local humanoidRootPart = character.HumanoidRootPart
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	
	if humanoid then
		humanoid.PlatformStand = true
	end
	
	self.bodyVelocity = Instance.new("BodyVelocity")
	self.bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
	self.bodyVelocity.Velocity = Vector3.new(0, 0, 0)
	self.bodyVelocity.Parent = humanoidRootPart
	
	self.bodyPosition = Instance.new("BodyPosition")
	self.bodyPosition.MaxForce = Vector3.new(0, 0, 0)
	self.bodyPosition.Position = humanoidRootPart.Position
	self.bodyPosition.D = 500
	self.bodyPosition.P = 3000
	self.bodyPosition.Parent = humanoidRootPart
	
	self.enabled = true
	self:StartUpdateLoop()
end

function FlySystem:Disable()
	if not self.enabled then return end
	
	local character = LocalPlayer.Character
	if character then
		local humanoid = character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid.PlatformStand = false
		end
	end
	
	if self.bodyVelocity then
		self.bodyVelocity:Destroy()
		self.bodyVelocity = nil
	end
	
	if self.bodyPosition then
		self.bodyPosition:Destroy()
		self.bodyPosition = nil
	end
	
	if self.connection then
		self.connection:Disconnect()
		self.connection = nil
	end
	
	self.enabled = false
end

function FlySystem:StartUpdateLoop()
	if self.connection then
		self.connection:Disconnect()
	end
	
	self.connection = RunService.Heartbeat:Connect(function()
		self:Update()
	end)
end

-- VOLLSTÄNDIGES 3D UPDATE SYSTEM
function FlySystem:Update()
	if not self.enabled then return end
	
	local character = LocalPlayer.Character
	if not character or not character:FindFirstChild("HumanoidRootPart") then
		self:Disable()
		return
	end
	
	local humanoidRootPart = character.HumanoidRootPart
	local camera = Camera
	
	-- Character Rotation
	local lookDirection = camera.CFrame.LookVector
	local upDirection = camera.CFrame.UpVector
	local rightDirection = camera.CFrame.RightVector
	
	local newCFrame = CFrame.fromMatrix(humanoidRootPart.Position, rightDirection, upDirection, -lookDirection)
	humanoidRootPart.CFrame = newCFrame
	
	-- 3D-BEWEGUNGSBERECHNUNG
	local moveVector = Vector3.new(0, 0, 0)
	
	if UserInputService:IsKeyDown(Enum.KeyCode.W) then
		moveVector = moveVector + lookDirection -- VOLLSTÄNDIGE 3D-Bewegung
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.S) then
		moveVector = moveVector - lookDirection
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.A) then
		moveVector = moveVector - rightDirection
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.D) then
		moveVector = moveVector + rightDirection
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
		moveVector = moveVector + Vector3.new(0, 1, 0)
	end
	if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
		moveVector = moveVector + Vector3.new(0, -1, 0)
	end
	
	if moveVector.Magnitude > 0 then
		moveVector = moveVector.Unit
	end
	
	self.bodyVelocity.Velocity = moveVector * self.speed
	self.bodyPosition.MaxForce = Vector3.new(0, 0, 0)
end

function FlySystem:SetSpeed(newSpeed)
	self.speed = math.clamp(newSpeed, 1, 1000)
end

-- JETZT SIND ALLE FRAMES VERFÜGBAR - KATEGORIEN ERSTELLEN

-- FLY KATEGORIE
if categoryFrames["Fly"] then
	local flyFrame = categoryFrames["Fly"]
	local flyButton = createButton(flyFrame, "Fly: OFF", 1)
	local flySpeedSlider = createSlider(flyFrame, "Fly Speed", 10, 200, 50, 2)

	flyButton.MouseButton1Click:Connect(function()
		if FlySystem.enabled then
			FlySystem:Disable()
			flyButton.Text = "Fly: OFF"
			flyButton.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
		else
			FlySystem:Enable()
			flyButton.Text = "Fly: ON"
			flyButton.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
		end
	end)

	-- Speed Update
	local lastFlySpeed = 50
	RunService.Heartbeat:Connect(function()
		local currentSpeed = flySpeedSlider()
		if currentSpeed ~= lastFlySpeed then
			FlySystem:SetSpeed(currentSpeed)
			lastFlySpeed = currentSpeed
		end
	end)
end

-- ME KATEGORIE
if categoryFrames["Me"] then
	local meFrame = categoryFrames["Me"]
	local walkSpeedSlider = createSlider(meFrame, "Walk Speed", 16, 200, 16, 1)
	local jumpHeightSlider = createSlider(meFrame, "Jump Height", 7.2, 50, 7.2, 2)
	local noclipButton = createButton(meFrame, "Noclip: OFF", 3)

	-- Walk Speed
	RunService.Heartbeat:Connect(function()
		local character = LocalPlayer.Character
		if character and character:FindFirstChild("Humanoid") then
			local humanoid = character.Humanoid
			local newSpeed = walkSpeedSlider()
			humanoid.WalkSpeed = newSpeed
		end
	end)

	-- Jump Height
	RunService.Heartbeat:Connect(function()
		local character = LocalPlayer.Character
		if character and character:FindFirstChild("Humanoid") then
			local humanoid = character.Humanoid
			local newJumpHeight = jumpHeightSlider()
			if humanoid.JumpHeight ~= newJumpHeight then
				humanoid.JumpHeight = newJumpHeight
			end
		end
	end)

	-- Noclip
	local noclipConnection
	noclipButton.MouseButton1Click:Connect(function()
		isNoclipEnabled = not isNoclipEnabled
		noclipButton.Text = isNoclipEnabled and "Noclip: ON" or "Noclip: OFF"
		noclipButton.BackgroundColor3 = isNoclipEnabled and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(15, 15, 20)

		if isNoclipEnabled then
			noclipConnection = RunService.Stepped:Connect(function()
				local character = LocalPlayer.Character
				if character then
					for _, part in pairs(character:GetChildren()) do
						if part:IsA("BasePart") and part.CanCollide then
							part.CanCollide = false
						end
					end
				end
			end)
		else
			if noclipConnection then
				noclipConnection:Disconnect()
				noclipConnection = nil
			end

			local character = LocalPlayer.Character
			if character then
				for _, part in pairs(character:GetChildren()) do
					if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
						part.CanCollide = true
					end
				end
			end
		end
	end)
end

-- ESP KATEGORIE
if categoryFrames["ESP"] then
	local espFrame = categoryFrames["ESP"]
	local espButton = createButton(espFrame, "ESP: OFF", 1)

	-- ESP Funktionen
	local function createESPHighlight(character)
		if not character or not character.Parent then return nil end

		for _, child in pairs(character:GetChildren()) do
			if child.Name == "VyrxisESP" then
				child:Destroy()
			end
		end

		local highlight = Instance.new("Highlight")
		highlight.Name = "VyrxisESP"
		highlight.FillColor = espColor
		highlight.OutlineColor = espColor
		highlight.FillTransparency = espTransparency
		highlight.OutlineTransparency = 0
		highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
		highlight.Parent = character

		return highlight
	end

	local function enableESP()
		for player, highlight in pairs(espHighlights) do
			if highlight and highlight.Parent then
				highlight:Destroy()
			end
		end
		espHighlights = {}

		for _, player in pairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character and player.Character.Parent then
				local highlight = createESPHighlight(player.Character)
				if highlight then
					espHighlights[player] = highlight
				end
			end
		end
	end

	local function disableESP()
		for player, highlight in pairs(espHighlights) do
			if highlight and highlight.Parent then
				highlight:Destroy()
			end
		end
		espHighlights = {}
	end

	espButton.MouseButton1Click:Connect(function()
		isESPEnabled = not isESPEnabled
		espButton.Text = isESPEnabled and "ESP: ON" or "ESP: OFF"
		espButton.BackgroundColor3 = isESPEnabled and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(15, 15, 20)

		if isESPEnabled then
			enableESP()
		else
			disableESP()
		end
	end)

	-- Player Events
	Players.PlayerAdded:Connect(function(player)
		if player == LocalPlayer then return end

		player.CharacterAdded:Connect(function(character)
			wait(0.5)
			if isESPEnabled then
				local highlight = createESPHighlight(character)
				if highlight then
					espHighlights[player] = highlight
				end
			end
		end)
	end)

	Players.PlayerRemoving:Connect(function(player)
		if espHighlights[player] then
			espHighlights[player]:Destroy()
			espHighlights[player] = nil
		end
	end)
end

-- PLAYER KATEGORIE
if categoryFrames["Player"] then
	local playerFrame = categoryFrames["Player"]
	local gotoButton = createButton(playerFrame, "Goto Random Player", 1)

	gotoButton.MouseButton1Click:Connect(function()
		local players = {}
		for _, player in pairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				table.insert(players, player)
			end
		end

		if #players > 0 then
			local randomPlayer = players[math.random(1, #players)]
			local character = LocalPlayer.Character
			if character and character:FindFirstChild("HumanoidRootPart") then
				character.HumanoidRootPart.CFrame = randomPlayer.Character.HumanoidRootPart.CFrame
			end
		end
	end)
end

-- GUI Controls
local TitleLabel = Instance.new("TextLabel")
TitleLabel.Size = UDim2.new(0, 200, 1, 0)
TitleLabel.Position = UDim2.new(0, 15, 0, 0)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Text = "Vyrxis Menu"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextScaled = true
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.Parent = MainRahmen

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
MinimizeButton.Position = UDim2.new(1, -30, 0, 2.5)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextScaled = true
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Parent = MainRahmen

local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 8)
MinimizeCorner.Parent = MinimizeButton

MinimizeButton.MouseButton1Click:Connect(function()
	MainFrame.Visible = not MainFrame.Visible
end)

-- Toggle Menu
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if not gameProcessed and input.KeyCode == toggleKey then
		MainRahmen.Visible = not MainRahmen.Visible
		if MainRahmen.Visible then
			MainFrame.Visible = true
		end
	end
end)

-- Load Screen Animation
local function hideLoadScreen()
	wait(2)
	local fadeOutTween = TweenService:Create(LoadScreen, TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {BackgroundTransparency = 1})
	local textFadeTween = TweenService:Create(LoadText, TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {TextTransparency = 1})
	local subTextFadeTween = TweenService:Create(LoadSubText, TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {TextTransparency = 1})

	fadeOutTween:Play()
	textFadeTween:Play()
	subTextFadeTween:Play()

	fadeOutTween.Completed:Connect(function()
		LoadScreen:Destroy()
		MainRahmen.Visible = true
		MainFrame.Visible = true

		local showTween = TweenService:Create(MainRahmen, TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -350, 0.3, -15)})
		showTween:Play()
	end)
end

spawn(hideLoadScreen)

print("Vyrxis Menu loaded successfully - 3D FLIGHT SYSTEM ACTIVE!")
print("✓ Character rotation only when flying")
print("✓ W key now flies in EXACT camera direction (including vertical)")
print("✓ Full 3D movement with up/down looking supported")
print("✓ All frames properly initialized - NO NIL ERRORS!")
