-- Vyrxis Menu - Professional Roblox GUI Script
-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Variables
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Menu Variables
local menuOpen = true
local selectedPlayer = nil
local toggleKey = Enum.KeyCode.RightControl
local flyEnabled = false
local flySpeed = 16
local espEnabled = false
local viewEnabled = false
local noclipEnabled = false
local nametagsEnabled = false

-- Colors
local primaryColor = Color3.fromRGB(45, 45, 45)
local secondaryColor = Color3.fromRGB(35, 35, 35)
local accentColor = Color3.fromRGB(0, 255, 255)
local textColor = Color3.fromRGB(255, 255, 255)
local buttonColor = Color3.fromRGB(55, 55, 55)

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "VyrxisMenu"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Load Screen Function
local function createLoadScreen()
    local loadFrame = Instance.new("Frame")
    loadFrame.Name = "LoadScreen"
    loadFrame.Parent = screenGui
    loadFrame.Size = UDim2.new(1, 0, 1, 0)
    loadFrame.Position = UDim2.new(0, 0, 0, 0)
    loadFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    loadFrame.BorderSizePixel = 0
    loadFrame.ZIndex = 100
    
    -- Load Text
    local loadText = Instance.new("TextLabel")
    loadText.Parent = loadFrame
    loadText.Size = UDim2.new(0, 400, 0, 50)
    loadText.Position = UDim2.new(1, -420, 1, -70)
    loadText.BackgroundTransparency = 1
    loadText.Text = "Vyrxis Menu Starting..."
    loadText.TextColor3 = accentColor
    loadText.TextScaled = true
    loadText.Font = Enum.Font.GothamBold
    loadText.ZIndex = 101
    
    -- Cyan Effects
    for i = 1, 20 do
        local effect = Instance.new("Frame")
        effect.Parent = loadFrame
        effect.Size = UDim2.new(0, math.random(2, 8), 0, math.random(2, 8))
        effect.Position = UDim2.new(math.random(), 0, math.random(), 0)
        effect.BackgroundColor3 = accentColor
        effect.BorderSizePixel = 0
        effect.ZIndex = 101
        
        -- Animate effects
        spawn(function()
            while effect.Parent do
                wait(math.random(1, 3))
                local tween = TweenService:Create(effect, 
                    TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
                    {BackgroundTransparency = 1}
                )
                tween:Play()
                tween.Completed:Wait()
                effect.BackgroundTransparency = 0
            end
        end)
    end
    
    return loadFrame
end

-- Create Main Menu
local function createMainMenu()
    -- Main Container
    local mainRahmen = Instance.new("Frame")
    mainRahmen.Name = "MainRahmen"
    mainRahmen.Parent = screenGui
    mainRahmen.Size = UDim2.new(0, 600, 0, 40)
    mainRahmen.Position = UDim2.new(0.5, -300, 0.3, 0)
    mainRahmen.BackgroundColor3 = primaryColor
    mainRahmen.BorderSizePixel = 0
    mainRahmen.Active = true
    mainRahmen.Draggable = true
    
    local rahmenCorner = Instance.new("UICorner")
    rahmenCorner.CornerRadius = UDim.new(0, 8)
    rahmenCorner.Parent = mainRahmen
    
    -- Title
    local title = Instance.new("TextLabel")
    title.Parent = mainRahmen
    title.Size = UDim2.new(0, 200, 1, 0)
    title.Position = UDim2.new(0, 15, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "Vyrxis Menu"
    title.TextColor3 = accentColor
    title.TextScaled = true
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Settings Button
    local settingsBtn = Instance.new("TextButton")
    settingsBtn.Parent = mainRahmen
    settingsBtn.Size = UDim2.new(0, 30, 0, 30)
    settingsBtn.Position = UDim2.new(1, -40, 0, 5)
    settingsBtn.BackgroundColor3 = buttonColor
    settingsBtn.Text = "⚙"
    settingsBtn.TextColor3 = textColor
    settingsBtn.TextScaled = true
    settingsBtn.Font = Enum.Font.GothamBold
    
    local settingsCorner = Instance.new("UICorner")
    settingsCorner.CornerRadius = UDim.new(0, 4)
    settingsCorner.Parent = settingsBtn
    
    -- Minimize Button
    local minimizeBtn = Instance.new("TextButton")
    minimizeBtn.Parent = mainRahmen
    minimizeBtn.Size = UDim2.new(0, 30, 0, 30)
    minimizeBtn.Position = UDim2.new(1, -75, 0, 5)
    minimizeBtn.BackgroundColor3 = buttonColor
    minimizeBtn.Text = "−"
    minimizeBtn.TextColor3 = textColor
    minimizeBtn.TextScaled = true
    minimizeBtn.Font = Enum.Font.GothamBold
    
    local minimizeCorner = Instance.new("UICorner")
    minimizeCorner.CornerRadius = UDim.new(0, 4)
    minimizeCorner.Parent = minimizeBtn
    
    -- Main Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Parent = screenGui
    mainFrame.Size = UDim2.new(0, 600, 0, 400)
    mainFrame.Position = UDim2.new(0.5, -300, 0.3, 40)
    mainFrame.BackgroundColor3 = secondaryColor
    mainFrame.BorderSizePixel = 0
    
    local frameCorner = Instance.new("UICorner")
    frameCorner.CornerRadius = UDim.new(0, 8)
    frameCorner.Parent = mainFrame
    
    -- Make MainFrame follow MainRahmen
    mainRahmen:GetPropertyChangedSignal("Position"):Connect(function()
        mainFrame.Position = UDim2.new(
            mainRahmen.Position.X.Scale, 
            mainRahmen.Position.X.Offset, 
            mainRahmen.Position.Y.Scale, 
            mainRahmen.Position.Y.Offset + 40
        )
    end)
    
    -- Category List (Left Side)
    local categoryFrame = Instance.new("Frame")
    categoryFrame.Parent = mainFrame
    categoryFrame.Size = UDim2.new(0, 150, 1, -20)
    categoryFrame.Position = UDim2.new(0, 10, 0, 10)
    categoryFrame.BackgroundColor3 = primaryColor
    
    local categoryCorner = Instance.new("UICorner")
    categoryCorner.CornerRadius = UDim.new(0, 6)
    categoryCorner.Parent = categoryFrame
    
    local categoryList = Instance.new("UIListLayout")
    categoryList.Parent = categoryFrame
    categoryList.Padding = UDim.new(0, 5)
    categoryList.FillDirection = Enum.FillDirection.Vertical
    categoryList.SortOrder = Enum.SortOrder.LayoutOrder
    
    local categoryPadding = Instance.new("UIPadding")
    categoryPadding.Parent = categoryFrame
    categoryPadding.PaddingTop = UDim.new(0, 10)
    categoryPadding.PaddingLeft = UDim.new(0, 10)
    categoryPadding.PaddingRight = UDim.new(0, 10)
    categoryPadding.PaddingBottom = UDim.new(0, 10)
    
    -- Content Area (Right Side)
    local contentArea = Instance.new("Frame")
    contentArea.Parent = mainFrame
    contentArea.Size = UDim2.new(0, 420, 1, -20)
    contentArea.Position = UDim2.new(0, 170, 0, 10)
    contentArea.BackgroundColor3 = primaryColor
    
    local contentCorner = Instance.new("UICorner")
    contentCorner.CornerRadius = UDim.new(0, 6)
    contentCorner.Parent = contentArea
    
    -- Create Categories
    local categories = {"Fly", "Me", "Player", "ESP"}
    
    for i, categoryName in ipairs(categories) do
        local categoryBtn = Instance.new("TextButton")
        categoryBtn.Name = categoryName .. "Button"
        categoryBtn.Parent = categoryFrame
        categoryBtn.Size = UDim2.new(1, 0, 0, 35)
        categoryBtn.BackgroundColor3 = buttonColor
        categoryBtn.Text = categoryName
        categoryBtn.TextColor3 = textColor
        categoryBtn.TextScaled = true
        categoryBtn.Font = Enum.Font.Gotham
        categoryBtn.LayoutOrder = i
        
        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 4)
        btnCorner.Parent = categoryBtn
        
        categoryBtn.MouseButton1Click:Connect(function()
            openCategory(categoryName, contentArea)
        end)
        
        -- Hover effect
        categoryBtn.MouseEnter:Connect(function()
            categoryBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        end)
        
        categoryBtn.MouseLeave:Connect(function()
            categoryBtn.BackgroundColor3 = buttonColor
        end)
    end
    
    -- Button Functions
    minimizeBtn.MouseButton1Click:Connect(function()
        menuOpen = not menuOpen
        mainFrame.Visible = menuOpen
        if menuOpen then
            minimizeBtn.Text = "−"
        else
            minimizeBtn.Text = "+"
        end
    end)
    
    settingsBtn.MouseButton1Click:Connect(function()
        createSettingsFrame()
    end)
    
    print("Main menu created successfully!")
    return mainFrame, mainRahmen
end

-- Settings Frame
function createSettingsFrame()
    local settingsFrame = Instance.new("Frame")
    settingsFrame.Name = "SettingsFrame"
    settingsFrame.Parent = screenGui
    settingsFrame.Size = UDim2.new(0, 300, 0, 200)
    settingsFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
    settingsFrame.BackgroundColor3 = primaryColor
    settingsFrame.BorderSizePixel = 0
    settingsFrame.Active = true
    settingsFrame.Draggable = true
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = settingsFrame
    
    -- Close Button
    local closeBtn = Instance.new("TextButton")
    closeBtn.Parent = settingsFrame
    closeBtn.Size = UDim2.new(0, 20, 0, 20)
    closeBtn.Position = UDim2.new(1, -25, 0, 5)
    closeBtn.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    closeBtn.Text = "X"
    closeBtn.TextColor3 = textColor
    closeBtn.TextScaled = true
    closeBtn.Font = Enum.Font.GothamBold
    
    local cornerClose = Instance.new("UICorner")
    cornerClose.CornerRadius = UDim.new(0, 4)
    cornerClose.Parent = closeBtn
    
    closeBtn.MouseButton1Click:Connect(function()
        settingsFrame:Destroy()
    end)
    
    -- Toggle Key Setting
    local keyLabel = Instance.new("TextLabel")
    keyLabel.Parent = settingsFrame
    keyLabel.Size = UDim2.new(1, -20, 0, 30)
    keyLabel.Position = UDim2.new(0, 10, 0, 40)
    keyLabel.BackgroundTransparency = 1
    keyLabel.Text = "Toggle Key: " .. toggleKey.Name
    keyLabel.TextColor3 = textColor
    keyLabel.TextScaled = true
    keyLabel.Font = Enum.Font.Gotham
    keyLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    local keyBtn = Instance.new("TextButton")
    keyBtn.Parent = settingsFrame
    keyBtn.Size = UDim2.new(0, 100, 0, 30)
    keyBtn.Position = UDim2.new(0.5, -50, 0, 80)
    keyBtn.BackgroundColor3 = buttonColor
    keyBtn.Text = "Change Key"
    keyBtn.TextColor3 = textColor
    keyBtn.TextScaled = true
    keyBtn.Font = Enum.Font.Gotham
    
    local cornerKey = Instance.new("UICorner")
    cornerKey.CornerRadius = UDim.new(0, 4)
    cornerKey.Parent = keyBtn
    
    keyBtn.MouseButton1Click:Connect(function()
        keyBtn.Text = "Press any key..."
        local connection
        connection = UserInputService.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.Keyboard then
                toggleKey = input.KeyCode
                keyLabel.Text = "Toggle Key: " .. toggleKey.Name
                keyBtn.Text = "Change Key"
                connection:Disconnect()
            end
        end)
    end)
end

-- Category Content Functions
function openCategory(categoryName, contentArea)
    -- Clear existing content
    for _, child in pairs(contentArea:GetChildren()) do
        if child.Name ~= "UICorner" then
            child:Destroy()
        end
    end
    
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Parent = contentArea
    scrollFrame.Size = UDim2.new(1, -20, 1, -20)
    scrollFrame.Position = UDim2.new(0, 10, 0, 10)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.ScrollBarThickness = 8
    scrollFrame.ScrollBarImageColor3 = accentColor
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    
    local layout = Instance.new("UIListLayout")
    layout.Parent = scrollFrame
    layout.Padding = UDim.new(0, 10)
    layout.FillDirection = Enum.FillDirection.Vertical
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    
    local padding = Instance.new("UIPadding")
    padding.Parent = scrollFrame
    padding.PaddingTop = UDim.new(0, 10)
    padding.PaddingLeft = UDim.new(0, 10)
    padding.PaddingRight = UDim.new(0, 10)
    padding.PaddingBottom = UDim.new(0, 10)
    
    if categoryName == "Fly" then
        createFlyCategory(scrollFrame)
    elseif categoryName == "Me" then
        createMeCategory(scrollFrame)
    elseif categoryName == "Player" then
        createPlayerCategory(scrollFrame)
    elseif categoryName == "ESP" then
        createESPCategory(scrollFrame)
    end
    
    print("Opened category: " .. categoryName)
end

-- Create Toggle Button Function
function createToggleButton(parent, text, callback)
    local button = Instance.new("TextButton")
    button.Parent = parent
    button.Size = UDim2.new(1, 0, 0, 40)
    button.BackgroundColor3 = buttonColor
    button.Text = text .. ": OFF"
    button.TextColor3 = textColor
    button.TextScaled = true
    button.Font = Enum.Font.Gotham
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button
    
    local isOn = false
    button.MouseButton1Click:Connect(function()
        isOn = not isOn
        if isOn then
            button.Text = text .. ": ON"
            button.BackgroundColor3 = accentColor
        else
            button.Text = text .. ": OFF"
            button.BackgroundColor3 = buttonColor
        end
        callback(isOn)
    end)
    
    return button
end

-- Create Slider Function
function createSlider(parent, text, min, max, default, callback)
    local frame = Instance.new("Frame")
    frame.Parent = parent
    frame.Size = UDim2.new(1, 0, 0, 60)
    frame.BackgroundTransparency = 1
    
    local label = Instance.new("TextLabel")
    label.Parent = frame
    label.Size = UDim2.new(1, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.Text = text .. ": " .. default
    label.TextColor3 = textColor
    label.TextScaled = true
    label.Font = Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    local slider = Instance.new("TextButton")
    slider.Parent = frame
    slider.Size = UDim2.new(1, 0, 0, 30)
    slider.Position = UDim2.new(0, 0, 0, 25)
    slider.BackgroundColor3 = buttonColor
    slider.Text = ""
    
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(0, 6)
    sliderCorner.Parent = slider
    
    local knob = Instance.new("Frame")
    knob.Parent = slider
    knob.Size = UDim2.new(0, 20, 1, 0)
    knob.Position = UDim2.new((default - min) / (max - min), -10, 0, 0)
    knob.BackgroundColor3 = accentColor
    
    local knobCorner = Instance.new("UICorner")
    knobCorner.CornerRadius = UDim.new(0, 6)
    knobCorner.Parent = knob
    
    local dragging = false
    
    slider.MouseButton1Down:Connect(function()
        dragging = true
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouse = Players.LocalPlayer:GetMouse()
            local relativeX = mouse.X - slider.AbsolutePosition.X
            local percentage = math.clamp(relativeX / slider.AbsoluteSize.X, 0, 1)
            local value = math.floor(min + (max - min) * percentage)
            
            knob.Position = UDim2.new(percentage, -10, 0, 0)
            label.Text = text .. ": " .. value
            callback(value)
        end
    end)
    
    return frame
end

-- Category Functions
function createFlyCategory(parent)
    createToggleButton(parent, "Fly", function(enabled)
        flyEnabled = enabled
        if enabled then
            startFlying()
        else
            stopFlying()
        end
    end)
    
    createSlider(parent, "Fly Speed", 1, 100, 16, function(value)
        flySpeed = value
    end)
end

function createMeCategory(parent)
    local giveItemsBtn = Instance.new("TextButton")
    giveItemsBtn.Parent = parent
    giveItemsBtn.Size = UDim2.new(1, 0, 0, 40)
    giveItemsBtn.BackgroundColor3 = buttonColor
    giveItemsBtn.Text = "Give All Items"
    giveItemsBtn.TextColor3 = textColor
    giveItemsBtn.TextScaled = true
    giveItemsBtn.Font = Enum.Font.Gotham
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = giveItemsBtn
    
    giveItemsBtn.MouseButton1Click:Connect(function()
        giveAllItems()
    end)
    
    createSlider(parent, "Walk Speed", 1, 100, 16, function(value)
        if humanoid then
            humanoid.WalkSpeed = value
        end
    end)
    
    createSlider(parent, "Jump Height", 1, 200, 50, function(value)
        if humanoid then
            humanoid.JumpPower = value
        end
    end)
    
    createToggleButton(parent, "Noclip", function(enabled)
        noclipEnabled = enabled
        toggleNoclip(enabled)
    end)
end

function createPlayerCategory(parent)
    -- Player selection will be added here
    local playerLabel = Instance.new("TextLabel")
    playerLabel.Parent = parent
    playerLabel.Size = UDim2.new(1, 0, 0, 40)
    playerLabel.BackgroundTransparency = 1
    playerLabel.Text = "Player Functions"
    playerLabel.TextColor3 = accentColor
    playerLabel.TextScaled = true
    playerLabel.Font = Enum.Font.GothamBold
end

function createESPCategory(parent)
    createToggleButton(parent, "ESP Highlight", function(enabled)
        espEnabled = enabled
        toggleESP(enabled)
    end)
    
    createToggleButton(parent, "Nametags", function(enabled)
        nametagsEnabled = enabled
        toggleNametags(enabled)
    end)
end

-- Functionality Functions
local flyConnection
local flyBodyVelocity
local flyBodyAngularVelocity

function startFlying()
    if not character or not rootPart then return end
    
    flyBodyVelocity = Instance.new("BodyVelocity")
    flyBodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
    flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
    flyBodyVelocity.Parent = rootPart
    
    flyConnection = RunService.Heartbeat:Connect(function()
        if flyEnabled and flyBodyVelocity then
            local camera = workspace.CurrentCamera
            local moveVector = Vector3.new(0, 0, 0)
            
            local keys = UserInputService:GetKeysPressed()
            for _, key in pairs(keys) do
                if key.KeyCode == Enum.KeyCode.W then
                    moveVector = moveVector + camera.CFrame.LookVector
                elseif key.KeyCode == Enum.KeyCode.S then
                    moveVector = moveVector - camera.CFrame.LookVector
                elseif key.KeyCode == Enum.KeyCode.A then
                    moveVector = moveVector - camera.CFrame.RightVector
                elseif key.KeyCode == Enum.KeyCode.D then
                    moveVector = moveVector + camera.CFrame.RightVector
                end
            end
            
            flyBodyVelocity.Velocity = moveVector * flySpeed
        end
    end)
end

function stopFlying()
    if flyConnection then
        flyConnection:Disconnect()
        flyConnection = nil
    end
    if flyBodyVelocity then
        flyBodyVelocity:Destroy()
        flyBodyVelocity = nil
    end
end

function giveAllItems()
    print("Give all items function called")
end

function toggleNoclip(enabled)
    print("Noclip:", enabled)
end

function toggleESP(enabled)
    print("ESP:", enabled)
end

function toggleNametags(enabled)
    print("Nametags:", enabled)
end

-- Input Handling
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == toggleKey then
        local mainFrame = screenGui:FindFirstChild("MainFrame")
        local mainRahmen = screenGui:FindFirstChild("MainRahmen")
        
        if mainFrame and mainRahmen then
            local isVisible = mainFrame.Visible and mainRahmen.Visible
            mainFrame.Visible = not isVisible
            mainRahmen.Visible = not isVisible
        end
    end
end)

-- Initialize
local loadScreen = createLoadScreen()

spawn(function()
    wait(5)
    -- Remove load screen
    local fadeOut = TweenService:Create(loadScreen,
        TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {BackgroundTransparency = 1}
    )
    fadeOut:Play()
    fadeOut.Completed:Connect(function()
        loadScreen:Destroy()
        -- Create main menu
        createMainMenu()
    end)
end)
