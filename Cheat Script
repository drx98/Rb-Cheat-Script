-- Vyrxis Menu Script für Roblox
-- Alle Services laden
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Camera = Workspace.CurrentCamera

-- Variablen für Funktionen
local isFlying = false
local flySpeed = 50
local flyBodyVelocity = nil
local flyBodyAngularVelocity = nil
local originalWalkSpeed = 16
local originalJumpPower = 50
local isESPEnabled = false
local isNoclipEnabled = false
local isViewingPlayer = false
local viewingPlayerName = ""
local espColor = Color3.fromRGB(255, 0, 0)
local espTransparency = 0.5
local nametagsEnabled = false
local nametagColor = Color3.fromRGB(255, 255, 255)
local nametagSize = 14
local selectedPlayer = ""
local toggleKey = Enum.KeyCode.Insert
local espHighlights = {}
local nametags = {}
local healthbars = {}

-- GUI erstellen
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "VyrxisMenu"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

-- Load Screen erstellen - Verbessert
local LoadScreen = Instance.new("Frame")
LoadScreen.Name = "LoadScreen"
LoadScreen.Size = UDim2.new(0, 500, 0, 300)
LoadScreen.Position = UDim2.new(0.5, -250, 0.5, -150)
LoadScreen.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
LoadScreen.BorderSizePixel = 0
LoadScreen.Parent = ScreenGui

local LoadScreenCorner = Instance.new("UICorner")
LoadScreenCorner.CornerRadius = UDim.new(0, 20)
LoadScreenCorner.Parent = LoadScreen

-- Gradient für Load Screen
local LoadGradient = Instance.new("UIGradient")
LoadGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 20, 30)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(10, 10, 15))
}
LoadGradient.Rotation = 45
LoadGradient.Parent = LoadScreen

-- Stroke für Load Screen
local LoadStroke = Instance.new("UIStroke")
LoadStroke.Color = Color3.fromRGB(0, 200, 255)
LoadStroke.Thickness = 2
LoadStroke.Transparency = 0.3
LoadStroke.Parent = LoadScreen

local LoadText = Instance.new("TextLabel")
LoadText.Name = "LoadText"
LoadText.Size = UDim2.new(1, -40, 0, 60)
LoadText.Position = UDim2.new(0, 20, 0, 50)
LoadText.BackgroundTransparency = 1
LoadText.Text = "Vyrxis Menu"
LoadText.TextColor3 = Color3.fromRGB(255, 255, 255)
LoadText.TextSize = 36
LoadText.Font = Enum.Font.GothamBold
LoadText.Parent = LoadScreen

local LoadSubText = Instance.new("TextLabel")
LoadSubText.Name = "LoadSubText"
LoadSubText.Size = UDim2.new(1, -40, 0, 30)
LoadSubText.Position = UDim2.new(0, 20, 0, 110)
LoadSubText.BackgroundTransparency = 1
LoadSubText.Text = "Starting..."
LoadSubText.TextColor3 = Color3.fromRGB(180, 180, 180)
LoadSubText.TextSize = 18
LoadSubText.Font = Enum.Font.Gotham
LoadSubText.Parent = LoadScreen

-- Load Bar
local LoadBarBackground = Instance.new("Frame")
LoadBarBackground.Size = UDim2.new(1, -80, 0, 8)
LoadBarBackground.Position = UDim2.new(0, 40, 0, 200)
LoadBarBackground.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
LoadBarBackground.BorderSizePixel = 0
LoadBarBackground.Parent = LoadScreen

local LoadBarCorner = Instance.new("UICorner")
LoadBarCorner.CornerRadius = UDim.new(0, 4)
LoadBarCorner.Parent = LoadBarBackground

local LoadBar = Instance.new("Frame")
LoadBar.Size = UDim2.new(0, 0, 1, 0)
LoadBar.Position = UDim2.new(0, 0, 0, 0)
LoadBar.BackgroundColor3 = Color3.fromRGB(0, 200, 255)
LoadBar.BorderSizePixel = 0
LoadBar.Parent = LoadBarBackground

local LoadBarFillCorner = Instance.new("UICorner")
LoadBarFillCorner.CornerRadius = UDim.new(0, 4)
LoadBarFillCorner.Parent = LoadBar

-- Load Bar Gradient
local LoadBarGradient = Instance.new("UIGradient")
LoadBarGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 150, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 255, 200))
}
LoadBarGradient.Rotation = 0
LoadBarGradient.Parent = LoadBar

-- Türkisfarbene Bubble-Effekte für Load Screen
local bubbles = {}

local function createBubble(parent, size, position, speed)
    local bubble = Instance.new("Frame")
    bubble.Size = size
    bubble.Position = position
    bubble.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
    bubble.BorderSizePixel = 0
    bubble.BackgroundTransparency = 0.7
    bubble.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = bubble
    
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 255, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 150, 255))
    }
    gradient.Parent = bubble
    
    -- Bubble Animation
    local function animateBubble()
        local moveInfo = TweenInfo.new(speed, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true)
        local moveTween = TweenService:Create(bubble, moveInfo, {
            Position = UDim2.new(position.X.Scale, position.X.Offset + math.random(-50, 50), position.Y.Scale, position.Y.Offset + math.random(-30, 30)),
            BackgroundTransparency = math.random(50, 90) / 100
        })
        moveTween:Play()
    end
    
    animateBubble()
    return bubble
end

-- Erstelle Bubbles um den Bildschirm
for i = 1, 15 do
    local size = UDim2.new(0, math.random(20, 80), 0, math.random(20, 80))
    local position = UDim2.new(math.random(0, 100) / 100, 0, math.random(0, 100) / 100, 0)
    local speed = math.random(3, 8)
    local bubble = createBubble(ScreenGui, size, position, speed)
    table.insert(bubbles, bubble)
end

-- Load Screen Animation
local loadTween = TweenService:Create(LoadText, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1), {TextTransparency = 0.3})
loadTween:Play()

-- Main GUI Frames
local MainRahmen = Instance.new("Frame")
MainRahmen.Name = "MainRahmen"
MainRahmen.Size = UDim2.new(0, 700, 0, 30)
MainRahmen.Position = UDim2.new(0.5, -350, 0.3, -15)
MainRahmen.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
MainRahmen.BorderSizePixel = 0
MainRahmen.Visible = false
MainRahmen.Active = true
MainRahmen.Draggable = true
MainRahmen.Parent = ScreenGui

local RahmenCorner = Instance.new("UICorner")
RahmenCorner.CornerRadius = UDim.new(0, 8)
RahmenCorner.Parent = MainRahmen

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Size = UDim2.new(0, 200, 1, 0)
TitleLabel.Position = UDim2.new(0, 10, 0, 0)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Text = "Vyrxis Menu"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextScaled = true
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
TitleLabel.Parent = MainRahmen

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
MinimizeButton.Position = UDim2.new(1, -55, 0, 2.5)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextScaled = true
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Parent = MainRahmen

local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 4)
MinimizeCorner.Parent = MinimizeButton

local SettingsButton = Instance.new("TextButton")
SettingsButton.Size = UDim2.new(0, 25, 0, 25)
SettingsButton.Position = UDim2.new(1, -25, 0, 2.5)
SettingsButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
SettingsButton.Text = "⚙"
SettingsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SettingsButton.TextScaled = true
SettingsButton.Font = Enum.Font.GothamBold
SettingsButton.BorderSizePixel = 0
SettingsButton.Parent = MainRahmen

local SettingsCorner = Instance.new("UICorner")
SettingsCorner.CornerRadius = UDim.new(0, 4)
SettingsCorner.Parent = SettingsButton

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 700, 0, 400)
MainFrame.Position = UDim2.new(0, 0, 1, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
MainFrame.BorderSizePixel = 0
MainFrame.Visible = false
MainFrame.Parent = MainRahmen

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 8)
MainCorner.Parent = MainFrame

-- Settings Frame
local SettingsFrame = Instance.new("Frame")
SettingsFrame.Name = "SettingsFrame"
SettingsFrame.Size = UDim2.new(0, 300, 0, 200)
SettingsFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
SettingsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
SettingsFrame.BorderSizePixel = 0
SettingsFrame.Visible = false
SettingsFrame.Parent = ScreenGui

local SettingsFrameCorner = Instance.new("UICorner")
SettingsFrameCorner.CornerRadius = UDim.new(0, 8)
SettingsFrameCorner.Parent = SettingsFrame

local CloseSettings = Instance.new("TextButton")
CloseSettings.Size = UDim2.new(0, 20, 0, 20)
CloseSettings.Position = UDim2.new(1, -25, 0, 5)
CloseSettings.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CloseSettings.Text = "X"
CloseSettings.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseSettings.TextScaled = true
CloseSettings.Font = Enum.Font.GothamBold
CloseSettings.BorderSizePixel = 0
CloseSettings.Parent = SettingsFrame

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 4)
CloseCorner.Parent = CloseSettings

-- Keybind Settings
local KeybindLabel = Instance.new("TextLabel")
KeybindLabel.Size = UDim2.new(1, -20, 0, 30)
KeybindLabel.Position = UDim2.new(0, 10, 0, 40)
KeybindLabel.BackgroundTransparency = 1
KeybindLabel.Text = "Toggle Key: " .. toggleKey.Name
KeybindLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
KeybindLabel.TextScaled = true
KeybindLabel.Font = Enum.Font.Gotham
KeybindLabel.TextXAlignment = Enum.TextXAlignment.Left
KeybindLabel.Parent = SettingsFrame

local ChangeKeyButton = Instance.new("TextButton")
ChangeKeyButton.Size = UDim2.new(0, 100, 0, 30)
ChangeKeyButton.Position = UDim2.new(0.5, -50, 0, 80)
ChangeKeyButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
ChangeKeyButton.Text = "Change Key"
ChangeKeyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ChangeKeyButton.TextScaled = true
ChangeKeyButton.Font = Enum.Font.Gotham
ChangeKeyButton.BorderSizePixel = 0
ChangeKeyButton.Parent = SettingsFrame

local ChangeKeyCorner = Instance.new("UICorner")
ChangeKeyCorner.CornerRadius = UDim.new(0, 4)
ChangeKeyCorner.Parent = ChangeKeyButton

-- Kategorie Liste (Links)
local Liste = Instance.new("ScrollingFrame")
Liste.Name = "Liste"
Liste.Size = UDim2.new(0, 150, 1, -10)
Liste.Position = UDim2.new(0, 5, 0, 5)
Liste.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
Liste.BorderSizePixel = 0
Liste.ScrollBarThickness = 5
Liste.Parent = MainFrame

local ListeCorner = Instance.new("UICorner")
ListeCorner.CornerRadius = UDim.new(0, 6)
ListeCorner.Parent = Liste

local ListLayout = Instance.new("UIListLayout")
ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
ListLayout.Padding = UDim.new(0, 5)
ListLayout.Parent = Liste

-- Kategorien erstellen
local categories = {"Fly", "Me", "Player", "ESP"}
local categoryFrames = {}

for i, category in pairs(categories) do
    local categoryButton = Instance.new("TextButton")
    categoryButton.Size = UDim2.new(1, -10, 0, 40)
    categoryButton.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
    categoryButton.Text = category
    categoryButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    categoryButton.TextScaled = true
    categoryButton.Font = Enum.Font.Gotham
    categoryButton.BorderSizePixel = 0
    categoryButton.LayoutOrder = i
    categoryButton.Parent = Liste
    
    local catCorner = Instance.new("UICorner")
    catCorner.CornerRadius = UDim.new(0, 4)
    catCorner.Parent = categoryButton
    
    -- Kategorie Frame erstellen
    local categoryFrame = Instance.new("ScrollingFrame")
    categoryFrame.Name = category .. "Frame"
    categoryFrame.Size = UDim2.new(0, 530, 1, -10)
    categoryFrame.Position = UDim2.new(0, 160, 0, 5)
    categoryFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
    categoryFrame.BorderSizePixel = 0
    categoryFrame.ScrollBarThickness = 5
    categoryFrame.Visible = false
    categoryFrame.Parent = MainFrame
    
    local catFrameCorner = Instance.new("UICorner")
    catFrameCorner.CornerRadius = UDim.new(0, 6)
    catFrameCorner.Parent = categoryFrame
    
    local catLayout = Instance.new("UIListLayout")
    catLayout.SortOrder = Enum.SortOrder.LayoutOrder
    catLayout.Padding = UDim.new(0, 10)
    catLayout.Parent = categoryFrame
    
    categoryFrames[category] = categoryFrame
    
    categoryButton.MouseButton1Click:Connect(function()
        for name, frame in pairs(categoryFrames) do
            frame.Visible = (name == category)
        end
    end)
end

-- Hilfsfunktionen für GUI-Elemente
local function createButton(parent, text, layoutOrder)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -20, 0, 40)
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.Font = Enum.Font.Gotham
    button.BorderSizePixel = 0
    button.LayoutOrder = layoutOrder
    button.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = button
    
    return button
end

local function createSlider(parent, text, minVal, maxVal, defaultVal, layoutOrder)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, -20, 0, 60)
    frame.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
    frame.BorderSizePixel = 0
    frame.LayoutOrder = layoutOrder
    frame.Parent = parent
    
    local frameCorner = Instance.new("UICorner")
    frameCorner.CornerRadius = UDim.new(0, 4)
    frameCorner.Parent = frame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 25)
    label.Position = UDim2.new(0, 0, 0, 5)
    label.BackgroundTransparency = 1
    label.Text = text .. ": " .. defaultVal
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextScaled = true
    label.Font = Enum.Font.Gotham
    label.Parent = frame
    
    local slider = Instance.new("Frame")
    slider.Size = UDim2.new(1, -20, 0, 20)
    slider.Position = UDim2.new(0, 10, 0, 30)
    slider.BackgroundColor3 = Color3.fromRGB(70, 70, 75)
    slider.BorderSizePixel = 0
    slider.Parent = frame
    
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(0, 10)
    sliderCorner.Parent = slider
    
    local handle = Instance.new("TextButton")
    handle.Size = UDim2.new(0, 20, 1, 0)
    handle.Position = UDim2.new((defaultVal - minVal) / (maxVal - minVal), -10, 0, 0)
    handle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    handle.Text = ""
    handle.BorderSizePixel = 0
    handle.Parent = slider
    
    local handleCorner = Instance.new("UICorner")
    handleCorner.CornerRadius = UDim.new(1, 0)
    handleCorner.Parent = handle
    
    local dragging = false
    local currentValue = defaultVal
    
    handle.MouseButton1Down:Connect(function()
        dragging = true
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouse = UserInputService:GetMouseLocation()
            local relativePos = (mouse.X - slider.AbsolutePosition.X) / slider.AbsoluteSize.X
            relativePos = math.clamp(relativePos, 0, 1)
            
            handle.Position = UDim2.new(relativePos, -10, 0, 0)
            currentValue = minVal + (maxVal - minVal) * relativePos
            label.Text = text .. ": " .. math.floor(currentValue)
        end
    end)
    
    return function() return math.floor(currentValue) end
end

-- FLY KATEGORIE
local flyFrame = categoryFrames["Fly"]

local flyButton = createButton(flyFrame, "Fly: OFF", 1)
local flySpeedSlider = createSlider(flyFrame, "Fly Speed", 10, 200, 50, 2)

flyButton.MouseButton1Click:Connect(function()
    isFlying = not isFlying
    flyButton.Text = isFlying and "Fly: ON" or "Fly: OFF"
    flyButton.BackgroundColor3 = isFlying and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(60, 60, 65)
    
    if isFlying then
        local character = LocalPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            local humanoidRootPart = character.HumanoidRootPart
            
            flyBodyVelocity = Instance.new("BodyVelocity")
            flyBodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
            flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
            flyBodyVelocity.Parent = humanoidRootPart
            
            flyBodyAngularVelocity = Instance.new("BodyAngularVelocity")
            flyBodyAngularVelocity.MaxTorque = Vector3.new(4000, 4000, 4000)
            flyBodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
            flyBodyAngularVelocity.Parent = humanoidRootPart
        end
    else
        if flyBodyVelocity then
            flyBodyVelocity:Destroy()
            flyBodyVelocity = nil
        end
        if flyBodyAngularVelocity then
            flyBodyAngularVelocity:Destroy()
            flyBodyAngularVelocity = nil
        end
    end
end)

-- Fly Controls
local flyConnection
RunService.Heartbeat:Connect(function()
    if isFlying and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and flyBodyVelocity then
        flySpeed = flySpeedSlider()
        local camera = Workspace.CurrentCamera
        local moveVector = Vector3.new(0, 0, 0)
        
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveVector = moveVector + camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveVector = moveVector - camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveVector = moveVector - camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveVector = moveVector + camera.CFrame.RightVector
        end
        
        flyBodyVelocity.Velocity = moveVector * flySpeed
    end
end)

-- ME KATEGORIE
local meFrame = categoryFrames["Me"]

local giveItemsButton = createButton(meFrame, "Give All Items", 1)
local walkSpeedSlider = createSlider(meFrame, "Walk Speed", 16, 200, 16, 2)
local jumpHeightSlider = createSlider(meFrame, "Jump Height", 50, 500, 50, 3)
local noclipButton = createButton(meFrame, "Noclip: OFF", 4)

giveItemsButton.MouseButton1Click:Connect(function()
    -- Give All Items Funktion
    local character = LocalPlayer.Character
    if character then
        local backpack = LocalPlayer.Backpack
        local starterPack = game:GetService("StarterPack")
        local starterGui = game:GetService("StarterGui")
        local lighting = game:GetService("Lighting")
        local replicatedStorage = game:GetService("ReplicatedStorage")
        
        -- Versuche Tools aus verschiedenen Quellen zu finden
        local toolSources = {starterPack, replicatedStorage}
        
        for _, source in pairs(toolSources) do
            for _, item in pairs(source:GetDescendants()) do
                if item:IsA("Tool") and not backpack:FindFirstChild(item.Name) then
                    local clonedTool = item:Clone()
                    clonedTool.Parent = backpack
                end
            end
        end
        
        -- Versuche auch aus Workspace Tools zu klonen
        for _, item in pairs(Workspace:GetDescendants()) do
            if item:IsA("Tool") and not backpack:FindFirstChild(item.Name) then
                local clonedTool = item:Clone()
                clonedTool.Parent = backpack
            end
        end
        
        print("Give All Items wurde ausgeführt - " .. #backpack:GetChildren() .. " Tools im Backpack")
    end
end)

-- Walk Speed Control
RunService.Heartbeat:Connect(function()
    local character = LocalPlayer.Character
    if character and character:FindFirstChild("Humanoid") then
        local humanoid = character.Humanoid
        local newSpeed = walkSpeedSlider()
        if humanoid.WalkSpeed ~= newSpeed then
            humanoid.WalkSpeed = newSpeed
        end
    end
end)

-- Jump Height Control
RunService.Heartbeat:Connect(function()
    local character = LocalPlayer.Character
    if character and character:FindFirstChild("Humanoid") then
        local humanoid = character.Humanoid
        local newJumpHeight = jumpHeightSlider()
        if humanoid.JumpPower ~= newJumpHeight then
            humanoid.JumpPower = newJumpHeight
        end
    end
end)

-- Noclip
noclipButton.MouseButton1Click:Connect(function()
    isNoclipEnabled = not isNoclipEnabled
    noclipButton.Text = isNoclipEnabled and "Noclip: ON" or "Noclip: OFF"
    noclipButton.BackgroundColor3 = isNoclipEnabled and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(60, 60, 65)
end)

RunService.Heartbeat:Connect(function()
    if isNoclipEnabled then
        local character = LocalPlayer.Character
        if character then
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end
end)

-- PLAYER KATEGORIE
local playerFrame = categoryFrames["Player"]

-- Player Selection Frame
local playerSelectionFrame = Instance.new("Frame")
playerSelectionFrame.Size = UDim2.new(1, -20, 0, 150)
playerSelectionFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
playerSelectionFrame.BorderSizePixel = 0
playerSelectionFrame.LayoutOrder = 1
playerSelectionFrame.Parent = playerFrame

local playerFrameCorner = Instance.new("UICorner")
playerFrameCorner.CornerRadius = UDim.new(0, 4)
playerFrameCorner.Parent = playerSelectionFrame

local playerSearchBox = Instance.new("TextBox")
playerSearchBox.Size = UDim2.new(1, -20, 0, 30)
playerSearchBox.Position = UDim2.new(0, 10, 0, 10)
playerSearchBox.BackgroundColor3 = Color3.fromRGB(70, 70, 75)
playerSearchBox.PlaceholderText = "Search players..."
playerSearchBox.Text = ""
playerSearchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
playerSearchBox.TextScaled = true
playerSearchBox.Font = Enum.Font.Gotham
playerSearchBox.BorderSizePixel = 0
playerSearchBox.Parent = playerSelectionFrame

local searchCorner = Instance.new("UICorner")
searchCorner.CornerRadius = UDim.new(0, 4)
searchCorner.Parent = playerSearchBox

local playerList = Instance.new("ScrollingFrame")
playerList.Size = UDim2.new(1, -20, 1, -50)
playerList.Position = UDim2.new(0, 10, 0, 40)
playerList.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
playerList.BorderSizePixel = 0
playerList.ScrollBarThickness = 5
playerList.Parent = playerSelectionFrame

local playerListCorner = Instance.new("UICorner")
playerListCorner.CornerRadius = UDim.new(0, 4)
playerListCorner.Parent = playerList

local playerListLayout = Instance.new("UIListLayout")
playerListLayout.SortOrder = Enum.SortOrder.LayoutOrder
playerListLayout.Padding = UDim.new(0, 2)
playerListLayout.Parent = playerList

-- Player List Update - Verbesserte Suchfunktion
local function updatePlayerList()
    for _, child in pairs(playerList:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    
    local searchTerm = playerSearchBox.Text:lower()
    local matchedPlayers = {}
    
    -- Sammle alle passenden Spieler
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local playerName = player.Name:lower()
            local displayName = (player.DisplayName and player.DisplayName ~= player.Name) and player.DisplayName:lower() or ""
            
            -- Prüfe ob Suchbegriff am Anfang des Namens steht oder komplett enthalten ist
            if searchTerm == "" or 
               playerName:sub(1, #searchTerm) == searchTerm or 
               playerName:find(searchTerm) or
               (displayName ~= "" and (displayName:sub(1, #searchTerm) == searchTerm or displayName:find(searchTerm))) then
                table.insert(matchedPlayers, player)
            end
        end
    end
    
    -- Sortiere die Spieler: Zuerst die, die mit dem Suchbegriff beginnen
    table.sort(matchedPlayers, function(a, b)
        local aName = a.Name:lower()
        local bName = b.Name:lower()
        local aStartsWith = aName:sub(1, #searchTerm) == searchTerm
        local bStartsWith = bName:sub(1, #searchTerm) == searchTerm
        
        if aStartsWith and not bStartsWith then
            return true
        elseif not aStartsWith and bStartsWith then
            return false
        else
            return aName < bName
        end
    end)
    
    -- Erstelle Buttons für gefundene Spieler
    for i, player in pairs(matchedPlayers) do
        local playerButton = Instance.new("TextButton")
        playerButton.Size = UDim2.new(1, -10, 0, 25)
        playerButton.BackgroundColor3 = (selectedPlayer == player.Name) and Color3.fromRGB(100, 100, 105) or Color3.fromRGB(70, 70, 75)
        
        -- Zeige sowohl Name als auch DisplayName falls unterschiedlich
        local buttonText = player.Name
        if player.DisplayName and player.DisplayName ~= player.Name then
            buttonText = player.DisplayName .. " (" .. player.Name .. ")"
        end
        playerButton.Text = buttonText
        
        playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        playerButton.TextScaled = true
        playerButton.Font = Enum.Font.Gotham
        playerButton.BorderSizePixel = 0
        playerButton.LayoutOrder = i
        playerButton.Parent = playerList
        
        local playerBtnCorner = Instance.new("UICorner")
        playerBtnCorner.CornerRadius = UDim.new(0, 2)
        playerBtnCorner.Parent = playerButton
        
        playerButton.MouseButton1Click:Connect(function()
            selectedPlayer = player.Name
            updatePlayerList() -- Aktualisiere Liste um Auswahl zu zeigen
        end)
    end
    
    -- Update canvas size
    playerList.CanvasSize = UDim2.new(0, 0, 0, #matchedPlayers * 27)
end

playerSearchBox:GetPropertyChangedSignal("Text"):Connect(updatePlayerList)
Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(updatePlayerList)
updatePlayerList()

local viewButton = createButton(playerFrame, "View: OFF", 2)
local gotoButton = createButton(playerFrame, "Goto Player", 3)

-- View Player Camera
local originalCameraCFrame = nil
local viewCameraConnection = nil

viewButton.MouseButton1Click:Connect(function()
    if selectedPlayer ~= "" then
        local targetPlayer = Players:FindFirstChild(selectedPlayer)
        if targetPlayer then
            isViewingPlayer = not isViewingPlayer
            viewButton.Text = isViewingPlayer and "View: ON" or "View: OFF"
            viewButton.BackgroundColor3 = isViewingPlayer and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(60, 60, 65)
            
            if isViewingPlayer then
                viewingPlayerName = selectedPlayer
                -- Speichere die ursprüngliche Kamera-Position
                originalCameraCFrame = Camera.CFrame
                -- Setze Kamera-Typ auf Scriptable für manuelle Kontrolle
                Camera.CameraType = Enum.CameraType.Scriptable
                
                -- Erstelle Verbindung für kontinuierliche Kamera-Updates
                viewCameraConnection = RunService.Heartbeat:Connect(function()
                    if isViewingPlayer and viewingPlayerName ~= "" then
                        local viewPlayer = Players:FindFirstChild(viewingPlayerName)
                        if viewPlayer and viewPlayer.Character and viewPlayer.Character:FindFirstChild("Head") then
                            Camera.CFrame = viewPlayer.Character.Head.CFrame
                        else
                            -- Spieler nicht mehr verfügbar, View beenden
                            isViewingPlayer = false
                            viewingPlayerName = ""
                            viewButton.Text = "View: OFF"
                            viewButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
                            if viewCameraConnection then
                                viewCameraConnection:Disconnect()
                                viewCameraConnection = nil
                            end
                            Camera.CameraType = Enum.CameraType.Custom
                        end
                    end
                end)
            else
                viewingPlayerName = ""
                -- Beende Kamera-View und stelle ursprüngliche Einstellungen wieder her
                if viewCameraConnection then
                    viewCameraConnection:Disconnect()
                    viewCameraConnection = nil
                end
                Camera.CameraType = Enum.CameraType.Custom
                -- Optional: Stelle ursprüngliche Position wieder her
                if originalCameraCFrame then
                    Camera.CFrame = originalCameraCFrame
                end
            end
        end
    end
end)

gotoButton.MouseButton1Click:Connect(function()
    if selectedPlayer ~= "" then
        local targetPlayer = Players:FindFirstChild(selectedPlayer)
        local character = LocalPlayer.Character
        if targetPlayer and targetPlayer.Character and character and character:FindFirstChild("HumanoidRootPart") then
            local targetCharacter = targetPlayer.Character
            if targetCharacter:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = targetCharacter.HumanoidRootPart.CFrame
            end
        end
    end
end)

-- Die alte View Player Camera Heartbeat-Verbindung entfernen
-- (Diese wird jetzt durch die neue viewCameraConnection ersetzt)

-- ESP KATEGORIE
local espFrame = categoryFrames["ESP"]

local espHighlightButton = createButton(espFrame, "ESP Highlight: OFF", 1)

-- Color Selection für ESP
local espColorFrame = Instance.new("Frame")
espColorFrame.Size = UDim2.new(1, -20, 0, 80)
espColorFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
espColorFrame.BorderSizePixel = 0
espColorFrame.LayoutOrder = 2
espColorFrame.Parent = espFrame

local espColorCorner = Instance.new("UICorner")
espColorCorner.CornerRadius = UDim.new(0, 4)
espColorCorner.Parent = espColorFrame

local espColorLabel = Instance.new("TextLabel")
espColorLabel.Size = UDim2.new(1, 0, 0, 25)
espColorLabel.Position = UDim2.new(0, 0, 0, 5)
espColorLabel.BackgroundTransparency = 1
espColorLabel.Text = "ESP Color"
espColorLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
espColorLabel.TextScaled = true
espColorLabel.Font = Enum.Font.Gotham
espColorLabel.Parent = espColorFrame

local espColors = {
    {Color3.fromRGB(255, 0, 0), "Red"},
    {Color3.fromRGB(0, 255, 0), "Green"},
    {Color3.fromRGB(0, 0, 255), "Blue"},
    {Color3.fromRGB(255, 255, 0), "Yellow"},
    {Color3.fromRGB(255, 0, 255), "Magenta"},
    {Color3.fromRGB(0, 255, 255), "Cyan"},
    {Color3.fromRGB(255, 255, 255), "White"},
    {Color3.fromRGB(0, 0, 0), "Black"}
}

for i, colorData in pairs(espColors) do
    local colorButton = Instance.new("TextButton")
    colorButton.Size = UDim2.new(0, 50, 0, 40)
    colorButton.Position = UDim2.new(0, 10 + (i-1) * 55, 0, 30)
    colorButton.BackgroundColor3 = colorData[1]
    colorButton.Text = ""
    colorButton.BorderSizePixel = 0
    colorButton.Parent = espColorFrame
    
    local colorCorner = Instance.new("UICorner")
    colorCorner.CornerRadius = UDim.new(0, 4)
    colorCorner.Parent = colorButton
    
    colorButton.MouseButton1Click:Connect(function()
        espColor = colorData[1]
        -- Update existing ESP highlights
        for player, highlight in pairs(espHighlights) do
            if highlight then
                highlight.FillColor = espColor
                highlight.OutlineColor = espColor
            end
        end
    end)
end

local espTransparencySlider = createSlider(espFrame, "ESP Transparency", 0, 100, 50, 3)

local nametagsButton = createButton(espFrame, "Nametags: OFF", 4)

-- Color Selection für Nametags
local nametagColorFrame = Instance.new("Frame")
nametagColorFrame.Size = UDim2.new(1, -20, 0, 80)
nametagColorFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
nametagColorFrame.BorderSizePixel = 0
nametagColorFrame.LayoutOrder = 5
nametagColorFrame.Parent = espFrame

local nametagColorCorner = Instance.new("UICorner")
nametagColorCorner.CornerRadius = UDim.new(0, 4)
nametagColorCorner.Parent = nametagColorFrame

local nametagColorLabel = Instance.new("TextLabel")
nametagColorLabel.Size = UDim2.new(1, 0, 0, 25)
nametagColorLabel.Position = UDim2.new(0, 0, 0, 5)
nametagColorLabel.BackgroundTransparency = 1
nametagColorLabel.Text = "Nametag Color"
nametagColorLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
nametagColorLabel.TextScaled = true
nametagColorLabel.Font = Enum.Font.Gotham
nametagColorLabel.Parent = nametagColorFrame

for i, colorData in pairs(espColors) do
    local colorButton = Instance.new("TextButton")
    colorButton.Size = UDim2.new(0, 50, 0, 40)
    colorButton.Position = UDim2.new(0, 10 + (i-1) * 55, 0, 30)
    colorButton.BackgroundColor3 = colorData[1]
    colorButton.Text = ""
    colorButton.BorderSizePixel = 0
    colorButton.Parent = nametagColorFrame
    
    local colorCorner = Instance.new("UICorner")
    colorCorner.CornerRadius = UDim.new(0, 4)
    colorCorner.Parent = colorButton
    
    colorButton.MouseButton1Click:Connect(function()
        nametagColor = colorData[1]
        -- Update existing nametags
        for player, nametag in pairs(nametags) do
            if nametag and nametag:FindFirstChild("TextLabel") then
                nametag.TextLabel.TextColor3 = nametagColor
            end
        end
    end)
end

local nametagSizeSlider = createSlider(espFrame, "Nametag Size", 8, 30, 14, 6)

-- ESP Highlight Funktion
local function createESPHighlight(character)
    local highlight = Instance.new("Highlight")
    highlight.FillColor = espColor
    highlight.OutlineColor = espColor
    highlight.FillTransparency = espTransparency / 100
    highlight.OutlineTransparency = 0
    highlight.Parent = character
    return highlight
end

-- Nametag und Healthbar Funktion
local function createNametag(character, playerName)
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return nil end
    
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Size = UDim2.new(0, 200, 0, 50)
    billboardGui.StudsOffset = Vector3.new(0, -3, 0)
    billboardGui.Parent = humanoidRootPart
    billboardGui.Adornee = humanoidRootPart
    billboardGui.AlwaysOnTop = true
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = playerName
    textLabel.TextColor3 = nametagColor
    textLabel.TextSize = nametagSize
    textLabel.Font = Enum.Font.GothamBold
    textLabel.TextStrokeTransparency = 0
    textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.Parent = billboardGui
    
    return billboardGui
end

-- Healthbar Funktion
local function createHealthbar(character)
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoidRootPart or not humanoid then return nil end
    
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Size = UDim2.new(0, 4, 0, 50) -- Viel dünner gemacht
    billboardGui.StudsOffset = Vector3.new(1.5, 0, 0)
    billboardGui.Parent = humanoidRootPart
    billboardGui.Adornee = humanoidRootPart
    billboardGui.AlwaysOnTop = true
    billboardGui.LightInfluence = 0
    -- Wichtig: StudsOffsetWorldSpace = false, damit es relativ zum Character skaliert
    billboardGui.StudsOffsetWorldSpace = false
    
    local background = Instance.new("Frame")
    background.Size = UDim2.new(1, 0, 1, 0)
    background.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    background.BorderSizePixel = 1
    background.BorderColor3 = Color3.fromRGB(255, 255, 255)
    background.Parent = billboardGui
    
    local healthBar = Instance.new("Frame")
    healthBar.Size = UDim2.new(1, -2, humanoid.Health / humanoid.MaxHealth, -2)
    healthBar.Position = UDim2.new(0, 1, 1, -1)
    healthBar.AnchorPoint = Vector2.new(0, 1)
    healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    healthBar.BorderSizePixel = 0
    healthBar.Parent = background
    
    -- Health update
    local connection
    connection = humanoid.HealthChanged:Connect(function()
        local healthPercent = humanoid.Health / humanoid.MaxHealth
        healthBar.Size = UDim2.new(1, -2, healthPercent, -2)
        
        -- Color based on health
        if healthPercent > 0.5 then
            healthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        elseif healthPercent > 0.25 then
            healthBar.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
        else
            healthBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        end
    end)
    
    -- Cleanup connection when character is removed
    character.AncestryChanged:Connect(function()
        if not character.Parent then
            connection:Disconnect()
        end
    end)
    
    return billboardGui
end

-- ESP Toggle
espHighlightButton.MouseButton1Click:Connect(function()
    isESPEnabled = not isESPEnabled
    espHighlightButton.Text = isESPEnabled and "ESP Highlight: ON" or "ESP Highlight: OFF"
    espHighlightButton.BackgroundColor3 = isESPEnabled and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(60, 60, 65)
    
    if isESPEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                -- ESP Highlight erstellen
                if not espHighlights[player] or not espHighlights[player].Parent then
                    local highlight = createESPHighlight(player.Character)
                    espHighlights[player] = highlight
                end
                
                -- Healthbar erstellen
                if not healthbars[player] or not healthbars[player].Parent then
                    local healthbar = createHealthbar(player.Character)
                    healthbars[player] = healthbar
                end
            end
        end
    else
        for player, highlight in pairs(espHighlights) do
            if highlight and highlight.Parent then
                highlight:Destroy()
            end
            espHighlights[player] = nil
        end
        for player, healthbar in pairs(healthbars) do
            if healthbar and healthbar.Parent then
                healthbar:Destroy()
            end
            healthbars[player] = nil
        end
    end
end)

-- Nametags Toggle
nametagsButton.MouseButton1Click:Connect(function()
    nametagsEnabled = not nametagsEnabled
    nametagsButton.Text = nametagsEnabled and "Nametags: ON" or "Nametags: OFF"
    nametagsButton.BackgroundColor3 = nametagsEnabled and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(60, 60, 65)
    
    if nametagsEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local nametag = createNametag(player.Character, player.Name)
                nametags[player] = nametag
            end
        end
    else
        for player, nametag in pairs(nametags) do
            if nametag then
                nametag:Destroy()
            end
        end
        nametags = {}
    end
end)

-- ESP Transparency Update
RunService.Heartbeat:Connect(function()
    local newTransparency = espTransparencySlider() / 100
    if newTransparency ~= espTransparency then
        espTransparency = newTransparency
        for player, highlight in pairs(espHighlights) do
            if highlight then
                highlight.FillTransparency = espTransparency
            end
        end
    end
    
    local newNametagSize = nametagSizeSlider()
    if newNametagSize ~= nametagSize then
        nametagSize = newNametagSize
        for player, nametag in pairs(nametags) do
            if nametag and nametag:FindFirstChild("TextLabel") then
                nametag.TextLabel.TextSize = nametagSize
            end
        end
    end
end)

-- Player Added/Removed Events für ESP
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        wait(1) -- Wait for character to fully load
        
        if isESPEnabled and player ~= LocalPlayer then
            -- ESP Highlight erstellen
            if not espHighlights[player] or not espHighlights[player].Parent then
                local highlight = createESPHighlight(character)
                espHighlights[player] = highlight
            end
            
            -- Healthbar erstellen
            if not healthbars[player] or not healthbars[player].Parent then
                local healthbar = createHealthbar(character)
                healthbars[player] = healthbar
            end
        end
        
        if nametagsEnabled and player ~= LocalPlayer then
            if not nametags[player] or not nametags[player].Parent then
                local nametag = createNametag(character, player.Name)
                nametags[player] = nametag
            end
        end
        
        -- Player list update
        updatePlayerList()
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    if espHighlights[player] then
        if espHighlights[player].Parent then
            espHighlights[player]:Destroy()
        end
        espHighlights[player] = nil
    end
    if nametags[player] then
        if nametags[player].Parent then
            nametags[player]:Destroy()
        end
        nametags[player] = nil
    end
    if healthbars[player] then
        if healthbars[player].Parent then
            healthbars[player]:Destroy()
        end
        healthbars[player] = nil
    end
    
    -- Player list update
    updatePlayerList()
end)

-- Character Respawn Events
for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        player.CharacterAdded:Connect(function(character)
            wait(1)
            
            if isESPEnabled then
                -- Cleanup old highlights
                if espHighlights[player] and espHighlights[player].Parent then
                    espHighlights[player]:Destroy()
                end
                if healthbars[player] and healthbars[player].Parent then
                    healthbars[player]:Destroy()
                end
                
                -- Create new highlights
                local highlight = createESPHighlight(character)
                espHighlights[player] = highlight
                
                local healthbar = createHealthbar(character)
                healthbars[player] = healthbar
            end
            
            if nametagsEnabled then
                -- Cleanup old nametag
                if nametags[player] and nametags[player].Parent then
                    nametags[player]:Destroy()
                end
                
                -- Create new nametag
                local nametag = createNametag(character, player.Name)
                nametags[player] = nametag
            end
        end)
    end
end

-- GUI Controls
MinimizeButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = not MainFrame.Visible
end)

SettingsButton.MouseButton1Click:Connect(function()
    SettingsFrame.Visible = true
end)

CloseSettings.MouseButton1Click:Connect(function()
    SettingsFrame.Visible = false
end)

-- Keybind Change
local changingKey = false
ChangeKeyButton.MouseButton1Click:Connect(function()
    if not changingKey then
        changingKey = true
        ChangeKeyButton.Text = "Press Key..."
        
        local connection
        connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed and input.UserInputType == Enum.UserInputType.Keyboard then
                toggleKey = input.KeyCode
                KeybindLabel.Text = "Toggle Key: " .. toggleKey.Name
                ChangeKeyButton.Text = "Change Key"
                changingKey = false
                connection:Disconnect()
            end
        end)
    end
end)

-- Toggle Menu with Key
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == toggleKey then
        MainRahmen.Visible = not MainRahmen.Visible
        if MainRahmen.Visible then
            MainFrame.Visible = true
        end
    end
end)

-- Load Screen Animation und Startup
wait(0.1)

local function hideLoadScreen()
    -- Load Bar Animation
    local loadBarTween = TweenService:Create(LoadBar, TweenInfo.new(4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 1, 0)})
    loadBarTween:Play()
    
    -- Text Updates
    spawn(function()
        wait(1)
        LoadSubText.Text = "Loading components..."
        wait(1)
        LoadSubText.Text = "Initializing features..."
        wait(1)
        LoadSubText.Text = "Almost ready..."
        wait(1)
        LoadSubText.Text = "Ready!"
    end)
    
    wait(5) -- Total wait time
    
    local fadeOutTween = TweenService:Create(LoadScreen, TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {BackgroundTransparency = 1})
    local textFadeTween = TweenService:Create(LoadText, TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {TextTransparency = 1})
    local subTextFadeTween = TweenService:Create(LoadSubText, TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {TextTransparency = 1})
    local strokeFadeTween = TweenService:Create(LoadStroke, TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Transparency = 1})
    local barBgFadeTween = TweenService:Create(LoadBarBackground, TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {BackgroundTransparency = 1})
    local barFadeTween = TweenService:Create(LoadBar, TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {BackgroundTransparency = 1})
    
    fadeOutTween:Play()
    textFadeTween:Play()
    subTextFadeTween:Play()
    strokeFadeTween:Play()
    barBgFadeTween:Play()
    barFadeTween:Play()
    
    -- Fade out bubbles
    for _, bubble in pairs(bubbles) do
        local bubbleFadeTween = TweenService:Create(bubble, TweenInfo.new(0.8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {BackgroundTransparency = 1})
        bubbleFadeTween:Play()
    end
    
    fadeOutTween.Completed:Connect(function()
        LoadScreen:Destroy()
        for _, bubble in pairs(bubbles) do
            if bubble and bubble.Parent then
                bubble:Destroy()
            end
        end
        
        MainRahmen.Visible = true
        MainFrame.Visible = true
        
        local showTween = TweenService:Create(MainRahmen, TweenInfo.new(0.6, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -350, 0.3, -15)})
        showTween:Play()
    end)
end

-- Load Screen Timer
hideLoadScreen()

print("Vyrxis Menu loaded successfully!")
